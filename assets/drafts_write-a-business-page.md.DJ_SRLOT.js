import{_ as i,b as a,o as n,a5 as p}from"./chunks/framework.CAaOUjTN.js";const y=JSON.parse('{"title":"写一个业务页面","description":"","frontmatter":{"title":"写一个业务页面","date":"2022-09-06T03:05:10.589Z","tags":["Component","Vue"],"license":"CC BY-NC 4.0","publish":false,"read":{"text":"2 min read","minutes":1.605,"time":96300,"words":321}},"headers":[],"relativePath":"drafts/write-a-business-page.md","filePath":"drafts/write-a-business-page.md"}'),l={name:"drafts/write-a-business-page.md"};function h(k,s,t,e,r,d){return n(),a("div",null,s[0]||(s[0]=[p(`<p>简单记录一下一个业务页面开发的过程</p><p>简单的过程：梳理原型，根据原型做设计稿，根据设计稿开发页面。</p><p>重要记录一下，根据设计稿开发页面的过程。</p><p>一般来讲，这个开发过程，前端可以先把页面画好，然后和后端联调具体的接口。</p><p>流程：</p><ol><li>画页面的时候，可以完全屏蔽后端接口，根据视图显示的模块/数据，设计好视图需要的数据结构。</li><li>预留适配函数，页面中的每一个模块，都具有一个自己的数据结构，和一个数据适配函数</li><li>在对接接口的时候，获取数据的过程和适配的过程可以完全分开。（主要得益于 vue 的响应式模型）</li></ol><p>简单的代码结构：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">script</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> lang</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">=</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">ts</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> setup</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> computed</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> }</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">vue</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// ---- api</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">apiData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  a</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: {} </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">as</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;"> any</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">initData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">async</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> initData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">  getCompAData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">async</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> getCompAData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">res</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> await</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> fetch</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">/path/to/comp/a</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">  apiData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">a</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> await</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> res</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">json</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// ----</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">dataA</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> computed</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(()</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // adaptor</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // return {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  //   a: apiData.a.a || 0</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  return</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">    // fake data or mock data</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">    a</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  }</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">})</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">&lt;/</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">template</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  &lt;</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">CompA</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> :</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">data</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">=</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">&quot;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">dataA</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">&gt;&lt;/</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">CompA</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">&lt;/</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">template</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">&gt;</span></span></code></pre></div>`,8)]))}const A=i(l,[["render",h]]);export{y as __pageData,A as default};
