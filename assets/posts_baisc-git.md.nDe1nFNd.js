import{_ as i,b as a,o as e,a5 as t}from"./chunks/framework.CAaOUjTN.js";const r=JSON.parse('{"title":"Git 安装及常用命令","description":"","frontmatter":{"title":"Git 安装及常用命令","date":"2017-04-17T01:45:21.000Z","tags":["Git"],"license":"CC BY-NC 4.0","read":{"text":"6 min read","minutes":5.12,"time":307200,"words":1024}},"headers":[{"level":2,"title":"安装环境","slug":"安装环境","link":"#安装环境","children":[]},{"level":2,"title":"基础配置","slug":"基础配置","link":"#基础配置","children":[]},{"level":2,"title":"仓库操作","slug":"仓库操作","link":"#仓库操作","children":[]},{"level":2,"title":"工具","slug":"工具","link":"#工具","children":[]}],"relativePath":"posts/baisc-git.md","filePath":"posts/baisc-git.md"}'),n={name:"posts/baisc-git.md"};function p(l,s,o,h,d,c){return e(),a("div",null,s[0]||(s[0]=[t(`<blockquote><p>git 是一个分布式版本控制软件，最初由林纳斯·托瓦兹（Linus Torvalds）创作，于 2005 年以 GPL 发布。最初目的是为更好地管理 Linux 内核开发而设计。</p></blockquote><blockquote><p>git 是用于 Linux 内核开发的版本控制工具。与 CVS、Subversion 一类的集中式版本控制工具不同，它采用了分布式版本库的作法，不需要服务器端软件，就可以运作版本控制，使得源代码的发布和交流极其方便。git 的速度很快，这对于诸如 Linux 内核这样的大项目来说自然很重要。git 最为出色的是它的合并追踪（merge tracing）能力。</p></blockquote><h2 id="安装环境" tabindex="-1">安装环境 <a class="header-anchor" href="#安装环境" aria-label="Permalink to &quot;安装环境&quot;">​</a></h2><p>linux 环境下安装 Git</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install git</span></span></code></pre></div><h2 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h2><p><strong>配置文件</strong></p><p>三种配置文件：</p><ol><li><code>/etc/gitconfig</code> 文件：包含系统上每一个用户及他们仓库的通用配置。如果使用带有 <code>--system</code> 选项的 <code>git config</code> 时，它会从此文件读写配置变量。</li><li><code>~/.gitconfig</code> 或 <code>~/.config/git/config</code> 文件：只针对当前用户。可以传递 <code>--global</code> 选项让 Git 读写此文件。</li><li>当前使用仓库的 Git 目录中的 <code>config</code> 文件（就是 <code>.git/config</code>）：针对该仓库。</li></ol><p>每一个级别覆盖上一个级别的配置：3 中的配置覆盖 2 中的配置，2 中的配置覆盖 1 中的配置。</p><p><strong>配置用户信息</strong></p><p>根据需求，可以配置不同种类的配置，例如下面的配置适用于所有仓库。若需要其它配置，可以在设置相应仓库下的配置文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git config --global user.name &quot;John Doe&quot; #你的用户名</span></span>
<span class="line"><span>git config --global user.email johndoe@example.com #你的邮箱地址</span></span></code></pre></div><p><strong>默认编辑工具</strong></p><p>vim 是 linux 下的一款文本编辑软件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git config --global core.editor vim</span></span></code></pre></div><p><strong>检查配置信息</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git config --list #检查所有配置</span></span>
<span class="line"><span>git config user.name #检查 user.name 这一项配置</span></span></code></pre></div><p><strong>获取命令帮助</strong></p><p>三种获取帮助的方式</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git help config #获取 config 的命令帮助</span></span>
<span class="line"><span>git config --help #获取 config 的命令帮助</span></span>
<span class="line"><span>man git config  #获取 config 的命令帮助</span></span></code></pre></div><h2 id="仓库操作" tabindex="-1">仓库操作 <a class="header-anchor" href="#仓库操作" aria-label="Permalink to &quot;仓库操作&quot;">​</a></h2><p><strong>初始化仓库</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git init</span></span></code></pre></div><p><strong>添加文件</strong></p><p>这里的 <code>add</code> 表示添加到下一次提交，而不是添加到项目里面</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> add</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &quot;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">*.c</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&quot;</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #添加所有 .c 文件</span></span></code></pre></div><p><strong>提交</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> commit</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -m</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">create github</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #提交暂存区并附上说明：create github</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> commit</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -a</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -m</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">creat github</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #直接提交所以已跟踪的文件并附上说明</span></span></code></pre></div><p><a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E8%AE%B0%E5%BD%95%E6%AF%8F%E6%AC%A1%E6%9B%B4%E6%96%B0%E5%88%B0%E4%BB%93%E5%BA%93" target="_blank" rel="noreferrer">粗略理解 Git 工作过程</a></p><p><strong>查看状态</strong></p><p>查看每个跟踪的文件的状态</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git status</span></span></code></pre></div><p><strong>忽略文件</strong></p><p>在工作目录创建一个文件名为 <code>.gitigrone</code>，然后列出忽略列表。</p><p>忽略列表可以使用 glob 模式（一个简化的正则表达式）。</p><p><code>.gitigrone</code> 模板：<a href="https://github.com/github/gitignore" target="_blank" rel="noreferrer">https://github.com/github/gitignore</a></p><p><strong>查看修改</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git diff</span></span></code></pre></div><p><strong>移除文件</strong></p><p><code>rm</code> 后面的参数可以使用 <code>glob</code> 模式</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> rm</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> README</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #移除 README 文件，会删除相应的文件</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> rm</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --cached</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> README</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #仅移除 Git 对 README 文件的追踪，不会删除文件</span></span></code></pre></div><p><strong>移动文件</strong></p><p><code>git mv</code> 命令相当与执行一下三条命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>mv README readme</span></span>
<span class="line"><span>git rm README</span></span>
<span class="line"><span>git add readme</span></span></code></pre></div><p>所以 <code>mv</code> 命令相当于重命名</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> mv</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> README</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> readme</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #将 README 更名为 readme</span></span></code></pre></div><p><strong>查看提交历史</strong></p><p><code>git log</code> 参数较多，详细研究点击 <a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2" target="_blank" rel="noreferrer"><code>git log</code> 详情</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> log</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #查看所有记录</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> log</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -p</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -2</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #查看最近的两次提交记录，以及详细信息</span></span></code></pre></div><p><strong>撤销操作</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git commit --amend</span></span>
<span class="line"><span>#在你上次提交之后，追加提交，只算一次提交，即这一次提交会覆盖上一次提交</span></span></code></pre></div><p>取消暂存的文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git reset HEAD README #取消 README 文件的暂存</span></span></code></pre></div><p>撤消对文件的修改</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> checkout</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --README</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #撤销对 README 文件的修改，回到上一次提交的状态</span></span></code></pre></div><h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h2><ul><li>Git 教学：<a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noreferrer">https://git-scm.com/book/zh/v2</a></li><li>Git 指令参考：<a href="https://git-scm.com/docs" target="_blank" rel="noreferrer">https://git-scm.com/docs</a></li><li>Liunx 下的图形界面 Git：<a href="https://www.gitkraken.com/" target="_blank" rel="noreferrer">https://www.gitkraken.com/</a></li></ul>`,58)]))}const k=i(n,[["render",p]]);export{r as __pageData,k as default};
