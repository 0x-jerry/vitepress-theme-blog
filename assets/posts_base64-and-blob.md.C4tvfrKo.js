import{_ as i,b as a,o as h,a5 as l}from"./chunks/framework.CAaOUjTN.js";const y=JSON.parse('{"title":"Base64 和 Blob","description":"","frontmatter":{"title":"Base64 和 Blob","date":"2019-04-25T19:04:19.979Z","tags":["JavaScript"],"license":"CC BY-NC 4.0","read":{"text":"3 min read","minutes":2.1,"time":126000,"words":420}},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"Base64 To Blob","slug":"base64-to-blob","link":"#base64-to-blob","children":[]},{"level":2,"title":"Blob To Base64","slug":"blob-to-base64","link":"#blob-to-base64","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"posts/base64-and-blob.md","filePath":"posts/base64-and-blob.md"}'),n={name:"posts/base64-and-blob.md"};function k(t,s,p,e,r,d){return h(),a("div",null,s[0]||(s[0]=[l(`<h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>利用 Base64 可以非常方便的存储/读取二进制文件，本文介绍如何在 Base64 和 Blob 之间转换</p><p>为什么要转换成 Blob 呢？ 因为 Blob 可以非常方便的转换成其他格式(文本，二进制，ArrayBuffer 等等)</p><blockquote><p>Base64 是一组相似的二进制到文本(binary-to-text)的编码规则，使得二进制数据在解释成 radix-64 的表现形式后能够用 ASCII 字符串的格式表示出来。Base64 这个词出自一种 MIME 数据传输编码。</p></blockquote><blockquote><p>Blob 对象表示一个不可变、原始数据的类文件对象。Blob 表示的不一定是 JavaScript 原生格式的数据。File 接口基于 Blob，继承了 blob 的功能并将其扩展使其支持用户系统上的文件。</p></blockquote><h2 id="base64-to-blob" tabindex="-1">Base64 To Blob <a class="header-anchor" href="#base64-to-blob" aria-label="Permalink to &quot;Base64 To Blob&quot;">​</a></h2><ol><li>用 <code>atob</code> 解码一个 Base64 字符串 (<code>btoa</code> 可以把二进制数据编码成 Base64 格式)</li><li>把转换后的字符串写进 Unit8Array 数组里面</li><li>把 Unit8Array 数组转换成 Blob</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">/**</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> * https://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> *</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> * </span><span style="--shiki-dark:#666666;--shiki-light:#999999;">@</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">param</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;">string</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> dataURI</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> * </span><span style="--shiki-dark:#666666;--shiki-light:#999999;">@</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">param</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;">number</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sliceSize</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> */</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> dataURIToBlob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">dataURI</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sliceSize</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 512</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> b64Data</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> dataURI</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">trim</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">().</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">split</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">,</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">]</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> contentType</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> dataURI</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">split</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">,</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">].</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">split</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">].</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">split</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">;</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteCharacters</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> atob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">b64Data</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteArrays</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  for</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">let</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> offset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> offset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteCharacters</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">length</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> offset</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> +=</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sliceSize</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteCharacters</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">offset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> offset</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> +</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sliceSize</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteNumbers</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Array</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">length</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">    for</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">let</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> i</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> i</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">length</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> i</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">++</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">      byteNumbers</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">[</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">i</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">]</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">charCodeAt</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">i</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteArray</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Uint8Array</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">byteNumbers</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    byteArrays</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">push</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">byteArray</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">byteArrays</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> type</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> contentType</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> })</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  return</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> blob</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><h2 id="blob-to-base64" tabindex="-1">Blob To Base64 <a class="header-anchor" href="#blob-to-base64" aria-label="Permalink to &quot;Blob To Base64&quot;">​</a></h2><ol><li>直接利用 FileReader 把 Blob 转换成 Base64</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">/**</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> * </span><span style="--shiki-dark:#666666;--shiki-light:#999999;">@</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">param</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;">Blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> blob</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> */</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> readBlob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  return</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> Promise</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">((</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">resolve</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> reader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> FileReader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    reader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">onload</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">evt</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> resolve</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">evt</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">target</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">result</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    reader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">readAsDataURL</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  })</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/API/Blob</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Mozilla/Add-ons/SDK/High-Level_APIs/base64" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Mozilla/Add-ons/SDK/High-Level_APIs/base64</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WindowBase64/Base64_encoding_and_decoding" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/API/WindowBase64/Base64_encoding_and_decoding</a></li></ul>`,13)]))}const B=i(n,[["render",k]]);export{y as __pageData,B as default};
