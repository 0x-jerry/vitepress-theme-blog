import{d as h,r as u,u as g,c as p,b as _,o as c,h as r,I as f,t as F,_ as w,l as y,z as X,m as i,a5 as o}from"./chunks/framework.CAaOUjTN.js";const k=["src","width","height"],b={class:"iframe-link"},v=["href"],L=h({__name:"IframePreview",props:{title:{},url:{}},setup(l){const e={w:1920,h:1080},s=u(),a=g(s),n=p(()=>{const t=a.width.value/e.w,m=a.height.value/e.h;return Math.min(t,m)}),d=p(()=>({transform:`scale(${n.value})`,transformOrigin:"top left"}));return(t,m)=>(c(),_("div",{class:"relative mb-12",ref_key:"container",ref:s},[r("iframe",{src:t.url,frameborder:"0",class:"absolute border-1 border-solid border-bGray-2",width:e.w,height:e.h,style:f(d.value)},null,12,k),r("div",b,[r("a",{href:t.url,target:"_blank"},F(t.title),9,v)])],512))}}),x=w(L,[["__scopeId","data-v-0ffbb6f5"]]),S=h({__name:"VEmbed",props:{type:{default:"iframe"},data:{},width:{default:"100%"},height:{},aspect:{default:"16/9"}},setup(l){const e=l,s=p(()=>({aspectRatio:e.aspect,width:e.width,height:e.height}));return(a,n)=>(c(),y(x,X({style:s.value},a.data),null,16,["style"]))}}),C=JSON.parse('{"title":"浅识 L-System","description":"","frontmatter":{"title":"浅识 L-System","date":"2024-06-01T12:24:29.000Z","tags":["fractal","l-system"],"read":{"text":"6 min read","minutes":5.46,"time":327600,"words":1092}},"headers":[{"level":2,"title":"L-System","slug":"l-system","link":"#l-system","children":[{"level":3,"title":"画图展示","slug":"画图展示","link":"#画图展示","children":[]}]},{"level":2,"title":"核心逻辑","slug":"核心逻辑","link":"#核心逻辑","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"relativePath":"posts/l-system.md","filePath":"posts/l-system.md"}'),T={name:"posts/l-system.md"};function P(l,e,s,a,n,d){const t=S;return c(),_("div",null,[e[0]||(e[0]=r("p",null,"分形，数学中的一个比较有趣的概念，是一种图形，却又和普通的图形有所区别。主要区分在于，分形的一部分，放大之后，和原来的形状一样。就像俄罗斯套娃一样，打开一个，出现一个新的套娃，再打开一个，又出现一个新的套娃，一直循环下去。这就是分形。",-1)),e[1]||(e[1]=r("p",null,"分形，可以用来创造很多有趣的图形，例如下面的一棵树：",-1)),i(t,{data:{title:"Fractal Tree",url:"https://0x-jerry.github.io/visual-experiment/#/fractal-tree"}}),e[2]||(e[2]=o(`<p>接下来，就记录一下，如何实现这样的一棵树。在实现的过程中，需要用到 <a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a>，所以就来了解一下什么是 <a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 吧。</p><h2 id="l-system" tabindex="-1">L-System <a class="header-anchor" href="#l-system" aria-label="Permalink to &quot;L-System&quot;">​</a></h2><p><a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a>（Lindenmayer 系统） 是由 <a href="https://www.wikiwand.com/en/Aristid_Lindenmayer" target="_blank" rel="noreferrer">Aristid Lindenmayer</a> 发明的一种用于描述细胞生长的<a href="https://www.wikiwand.com/en/Formal_language" target="_blank" rel="noreferrer">形式语言</a>（可简单理解成一种简化版的编程语言）。</p><p>其主要是用递归的思想，来描述植物的形状。如一棵树的枝干和树本身具有一定的相似度：</p><figure><img src="https://upload.wikimedia.org/wikipedia/commons/a/af/Fractal_weeds.jpg" alt="https://www.wikiwand.com/en/L-system#L-system_structure" tabindex="0" loading="lazy"><figcaption><a href="https://www.wikiwand.com/en/L-system#L-system_structure" target="_blank" rel="noreferrer">https://www.wikiwand.com/en/L-system#L-system_structure</a></figcaption></figure><p>接下来再来了解一下 <a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 的三个组成部分</p><ol><li><code>V</code>，用字母标识的一组符号，用于后续递归计算</li><li><code>ω</code>，初始状态，由 <code>V</code> 中的符号组成</li><li><code>P</code>，转换规则，<code>V</code> 中的每个符号对应一个规则，用于表述转换的结果</li></ol><p>看起来比较抽象，就拿上面的生成的树来举个例子</p><ol><li>定义 <code>V</code> 由 <code>X F [ ] + -</code> 6 个符号组成</li><li>初始状态 <code>ω</code> 为 <code>X</code></li><li>规则转换规则 <code>P</code> 如下： <ol><li><code>X =&gt; F-[[X]+X]+F[+FX]-X</code></li><li><code>F =&gt; FF</code></li></ol></li></ol><p>则不同迭代的状态分别为</p><p><strong>第 0 个迭代</strong></p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>X</span></span></code></pre></div><p><strong>第 1 个迭代</strong></p><p>有规则 <code>P</code> 的第一个规则可知，<code>X =&gt; F-[[X]+X]+F[+FX]-X</code>, <code>X</code> 转换成 <code>F-[[X]+X]+F[+FX]-X</code>，因此结果为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>F-[[X]+X]+F[+FX]-X</span></span></code></pre></div><p><strong>第 2 个迭代</strong></p><p>同理，由 <code>P</code> 中的两个转换规则可知由如下转换过程，其中无对应转换规则的符号，则直接保留</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>F  -[[ X                  ]+ X                  ]+ F  [+ F  X                  ]- X</span></span>
<span class="line"><span>-  --- -                  -- -                  -- -  -- -  -                  -- -</span></span>
<span class="line"><span>|  |   |                  |  |                  |  |  |  |  |                  |  |</span></span>
<span class="line"><span>FF -[[ F-[[X]+X]+F[+FX]-X ]+ F-[[X]+X]+F[+FX]-X ]+ FF [+ FF F-[[X]+X]+F[+FX]-X ]- F-[[X]+X]+F[+FX]-X</span></span></code></pre></div><p>因此最后结果为:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>FF-[[F-[[X]+X]+F[+FX]-X]+F-[[X]+X]+F[+FX]-X]+FF[+FFF-[[X]+X]+F[+FX]-X]-F-[[X]+X]+F[+FX]-X</span></span></code></pre></div><p><strong>第 3 个迭代</strong></p><p>和从第 1 个迭代到第 2 个迭代类似，不断的替换，最后会生成 379 个符号。</p><h3 id="画图展示" tabindex="-1">画图展示 <a class="header-anchor" href="#画图展示" aria-label="Permalink to &quot;画图展示&quot;">​</a></h3><p><a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 的迭代完成之后，再给每一个字符定义一个对应的绘制规则：</p><ul><li><code>X</code>: 无实际含义</li><li><code>F</code>: 按照当前方向，画固定长度的直线</li><li><code>[</code>: 保存当前状态（位置、角度）</li><li><code>]</code>: 取出上一次保存的状态</li><li><code>+</code>: 当前状态左转 25°</li><li><code>-</code>: 状态状态右转 25°</li></ul><p>然后再按照从左往右的顺序，依照对应的绘制规则依次执行，则可以绘制出如下效果</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>下面演示过程中的相关参数有所不同，且加入了一定的随机性，因此，和上述表述的过程有所不同。</p></div>`,27)),i(t,{data:{title:"Fractal Tree(3 iteration)",url:"https://0x-jerry.github.io/visual-experiment/#/fractal-tree?iteration=3&length=40"}}),e[3]||(e[3]=o('<p>这样根据第三个迭代的结果画出来的图，就是上面的样子，就像一棵树。</p><p>当迭代为 6 的时候，也就是文章最开始看到的样子，树枝变多了，看起来更加丰富了。</p><p><a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 还有很多玩法，更多实例可以参考 <a href="https://paulbourke.net/fractals/lsys/" target="_blank" rel="noreferrer">L-System Example</a>。</p><h2 id="核心逻辑" tabindex="-1">核心逻辑 <a class="header-anchor" href="#核心逻辑" aria-label="Permalink to &quot;核心逻辑&quot;">​</a></h2><p>至此，用 <a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 画一棵树也就结束了。<a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 的核心思想也可以看出来就是 <strong>递归</strong>，从上面第 1 个迭代到第 2 个迭代的过程，可以看到每个 <code>X</code> 都会变成 18 个符号，其中还包含 4 个 <code>X</code>，仅计算 <code>X</code> 从第二个迭代到第三个迭代，就增加到了 <code>4 * 18 = 60</code> 个符号。如此指数级的增长，在第 6 个迭代就已经有 25159 个字符了。</p><p>也是由于其引用到了本身 <code>X =&gt; F-[[X]+X]+F[+FX]-X</code>，这里的 <code>X</code> 经过一个迭代，又会产生的 <code>X</code>。也会导致局部和整体看起来有相似的结果。也就是 <strong>分形</strong>。</p><p>最后，再看看这个经过 8 个迭代生成的树长什么样子！</p>',7)),i(t,{data:{title:"Fractal Tree(8 iteration)",url:"https://0x-jerry.github.io/visual-experiment/#/fractal-tree?iteration=8&length=2"}}),e[4]||(e[4]=o('<h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ul><li><a href="https://www.wikiwand.com/en/Aristid_Lindenmayer" target="_blank" rel="noreferrer">Aristid Lindenmayer</a></li><li><a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a></li><li><a href="https://www.wikiwand.com/en/Formal_language" target="_blank" rel="noreferrer">Formal Language</a></li><li><a href="https://paulbourke.net/fractals/lsys/" target="_blank" rel="noreferrer">L-System Example</a></li></ul>',2))])}const V=w(T,[["render",P]]);export{C as __pageData,V as default};
