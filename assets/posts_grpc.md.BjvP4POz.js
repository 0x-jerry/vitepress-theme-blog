import{_ as i,b as a,o as n,a5 as p}from"./chunks/framework.CAaOUjTN.js";const y=JSON.parse('{"title":"gRPC 在 JS 中的应用","description":"","frontmatter":{"title":"gRPC 在 JS 中的应用","date":"2022-04-28T15:13:02.588Z","tags":["gRPC","TypeScript"],"read":{"text":"3 min read","minutes":2.92,"time":175200,"words":584}},"headers":[{"level":2,"title":"如何生成 TypeScript 类型文件","slug":"如何生成-typescript-类型文件","link":"#如何生成-typescript-类型文件","children":[]},{"level":2,"title":"怎么使用 @grpc/proto-loader 和 @grpc/grpc-js","slug":"怎么使用-grpc-proto-loader-和-grpc-grpc-js","link":"#怎么使用-grpc-proto-loader-和-grpc-grpc-js","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"posts/grpc.md","filePath":"posts/grpc.md"}'),h={name:"posts/grpc.md"};function t(k,s,l,e,r,g){return n(),a("div",null,s[0]||(s[0]=[p(`<p>简单记录一下在 NodeJS 中折腾 gRPC Client 端的相关事情。</p><p>目前，gRPC 官网关于 NodeJS 的相关资料并不是特别全，不过，参考 Example 也大概知道怎么用了。记录一下关键的几个点：</p><ol><li>如何根据 <code>.proto</code> 文件生成 TypeScript 的类型</li><li>怎么使用 <a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a> 以及 <a href="https://github.com/grpc/grpc-node/tree/master/packages/grpc-js" target="_blank" rel="noreferrer">@grpc/grpc-js</a></li></ol><p>准备文件，<a href="https://github.com/v2fly/v2ray-core/blob/master/app/stats/command/command.proto" target="_blank" rel="noreferrer">v2ray.proto</a>，源代码如下：</p><div class="language-proto vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">syntax</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> &quot;proto3&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">package</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> v2ray.core.app.stats.command</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">option</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> csharp_namespace</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> &quot;V2Ray.Core.App.Stats.Command&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">option</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> go_package</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> &quot;v2ray.com/core/app/stats/command&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">option</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> java_package</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> &quot;com.v2ray.core.app.stats.command&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">option</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> java_multiple_files</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> true</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> GetStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // Name of the stat counter.</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  string</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> name</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // Whether or not to reset the counter to fetching its value.</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  bool</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> reset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Stat</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  string</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> name</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  int64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> value</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> GetStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  Stat</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> stat</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> QueryStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  string</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> pattern</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  bool</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> reset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> QueryStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  repeated</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> Stat</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> stat</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> SysStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> SysStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint32</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> NumGoroutine</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint32</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> NumGC</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Alloc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 3</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> TotalAlloc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 4</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Sys</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 5</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Mallocs</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 6</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Frees</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 7</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> LiveObjects</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 8</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> PauseTotalNs</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 9</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint32</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Uptime</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 10</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">service</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> StatsService</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  rpc</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> GetStats</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">(</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">GetStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">returns</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> (</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">GetStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) {}</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  rpc</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> QueryStats</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">(</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">QueryStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">returns</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> (</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">QueryStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) {}</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  rpc</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> GetSysStats</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">(</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">SysStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">returns</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> (</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">SysStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) {}</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Config</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {}</span></span></code></pre></div><h2 id="如何生成-typescript-类型文件" tabindex="-1">如何生成 TypeScript 类型文件 <a class="header-anchor" href="#如何生成-typescript-类型文件" aria-label="Permalink to &quot;如何生成 TypeScript 类型文件&quot;">​</a></h2><p>我是 TypeScript 的重度使用者，现在都不太习惯写 JS 代码了。所以，没有类型提示怎么行呢！好在 gRPC 已经有现成的工具，<a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader#generating-typescript-types" target="_blank" rel="noreferrer">proto-loader-gen-types</a>。</p><p>这个工具是包含在 <a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a> 里的，因此安装 <a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a> 即可。因为必须指定 <code>-grpcLib</code> 参数，因此也需要安装 <a href="https://github.com/grpc/grpc-node/tree/master/packages/grpc-js" target="_blank" rel="noreferrer">@grpc/grpc-js</a>。</p><p>使用例子：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">$(</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> bin</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">/proto-loader-gen-types </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">--longs</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">=</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">String</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> --enums</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">=</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">String</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> --defaults</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --oneofs</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --grpcLib=@grpc/grpc-js</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --outDir=src/proto/</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> grpc/v2ray.proto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"># 根据 grpc/v2ray.proto 的内容，生成的类型文件，会存放在 src/proto 中</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"># 这里的路径，都是相对于执行的目录。</span></span></code></pre></div><h2 id="怎么使用-grpc-proto-loader-和-grpc-grpc-js" tabindex="-1">怎么使用 <a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a> 和 <a href="https://github.com/grpc/grpc-node/tree/master/packages/grpc-js" target="_blank" rel="noreferrer">@grpc/grpc-js</a> <a class="header-anchor" href="#怎么使用-grpc-proto-loader-和-grpc-grpc-js" aria-label="Permalink to &quot;怎么使用 [@grpc/proto-loader] 和 [@grpc/grpc-js]&quot;">​</a></h2><p>一个简单 <strong>Client</strong> 端的例子：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> *</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> as</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> protoLoader</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">@grpc/proto-loader</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> *</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> as</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> grpc</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">@grpc/grpc-js</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> path</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">path</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 上面生成好的类型文件</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> ProtoGrpcType</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> }</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">@/proto/v2ray</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 载入 proto 文件</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">protoFileName</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> path</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">resolve</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">grpc</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">v2ray.proto</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 加载 proto</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">packageDefinition</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> protoLoader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">loadSync</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">protoFileName</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {})</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 将 proto 定义 转换成 gRPC 对象</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">grpcObj</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> grpc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">loadPackageDefinition</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">packageDefinition</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> as</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;"> any</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> as</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;"> ProtoGrpcType</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 具体的实例</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">StatsService</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> grpcObj</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">v2ray</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">core</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">app</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">stats</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">command</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">StatsService</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 根据需要作出调整</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">host</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">localhost:10086</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">client</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new </span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">StatsService</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">host</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> grpc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">credentials</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">createInsecure</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">client</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">queryStats</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  {</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">    pattern</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">    reset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">false</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  },</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">err</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> val</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">    if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">err</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">      console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">error</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">err</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">      return</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">val</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">?.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">stat</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  },</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span></code></pre></div><p><strong>Server</strong> 端的示例可参考 <a href="https://grpc.io/docs/languages/node/basics/#server" target="_blank" rel="noreferrer">Create the server</a>。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://grpc.io/docs/languages/node/basics/" target="_blank" rel="noreferrer">gRPC Node Tutorial</a></li><li><a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a></li><li><a href="https://github.com/grpc/grpc-node/tree/master/packages/grpc-js" target="_blank" rel="noreferrer">@grpc/grpc-js</a></li></ul>`,16)]))}const c=i(h,[["render",t]]);export{y as __pageData,c as default};
