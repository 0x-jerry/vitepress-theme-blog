import{_ as i,b as a,o as n,a5 as t}from"./chunks/framework.CAaOUjTN.js";const g=JSON.parse('{"title":"Node 项目配置最佳实践","description":"","frontmatter":{"title":"Node 项目配置最佳实践","date":"2018-04-03T05:13:42.000Z","tags":["Nodejs","JavaScript"],"license":"CC BY-NC 4.0","read":{"text":"3 min read","minutes":2.53,"time":151800,"words":506}},"headers":[{"level":2,"title":"引文","slug":"引文","link":"#引文","children":[]},{"level":2,"title":"优雅的引入 config","slug":"优雅的引入-config","link":"#优雅的引入-config","children":[{"level":3,"title":"配置 config","slug":"配置-config","link":"#配置-config","children":[]},{"level":3,"title":"安装 config","slug":"安装-config","link":"#安装-config","children":[]},{"level":3,"title":"测试","slug":"测试","link":"#测试","children":[]}]},{"level":2,"title":"写在最后","slug":"写在最后","link":"#写在最后","children":[]}],"relativePath":"posts/node-best-practice.md","filePath":"posts/node-best-practice.md"}'),h={name:"posts/node-best-practice.md"};function e(l,s,p,k,d,o){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="引文" tabindex="-1">引文 <a class="header-anchor" href="#引文" aria-label="Permalink to &quot;引文&quot;">​</a></h2><p>在项目中，经常会有一堆配置文件，然后在其它文件里面引用的时候,如果层级比较多的时候，会出现路径很长的情况，例如在项目中有一个文件 <code>/a/b/c/index.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> require</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">../../../config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">doSomething</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">someConfig</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span></code></pre></div><p>就会出现很长的路径名。如果移动一下文件，那么就会涉及到 <strong>多个</strong> 文件的更改，而且每次引入 <code>config</code>，都会出现这么长的路径，比较容易出错。那么有没有一种优雅的方式来引入项目的 <code>config</code> 文件呢？</p><h2 id="优雅的引入-config" tabindex="-1">优雅的引入 <code>config</code> <a class="header-anchor" href="#优雅的引入-config" aria-label="Permalink to &quot;优雅的引入 \`config\`&quot;">​</a></h2><p>之前查看 <code>npm</code> 的一些问题的时候，偶然看到过，可以把本地文件夹当成 <code>package</code> 使用，如果可以这样的话，引入 <code>config</code> 就像这样</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> require</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span></code></pre></div><p>这样就很简单了，完全不需要知道 <code>config</code> 文件存放在哪个地方，只需要用就可以了。</p><p><strong>怎么能够实现这样呢？</strong></p><p>创建一个项目，目录类似下面这样</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>/config</span></span>
<span class="line"><span>  index.js</span></span>
<span class="line"><span>  package.json</span></span>
<span class="line"><span>index.js</span></span>
<span class="line"><span>package.json</span></span></code></pre></div><h3 id="配置-config" tabindex="-1">配置 <code>config</code> <a class="header-anchor" href="#配置-config" aria-label="Permalink to &quot;配置 \`config\`&quot;">​</a></h3><p>配置里面的东西就放在 <code>config/index.js</code> ，例如</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">module</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">exports</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  A</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  B</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  C</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">3</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><p>在 <code>config/package.json</code> 中定义这个 <code>module</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">{</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  &quot;</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">name</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &quot;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  &quot;</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">version</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &quot;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">1.0.0</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  &quot;</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">main</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &quot;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">index.js</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><h3 id="安装-config" tabindex="-1">安装 <code>config</code> <a class="header-anchor" href="#安装-config" aria-label="Permalink to &quot;安装 \`config\`&quot;">​</a></h3><p>然后在 <code>root</code> 目录下运行 <code>yarn add file:./config/</code>， <strong>注意最后有 <code>/</code></strong></p><p>在 <code>/package.json</code> 就会出现 <code>config</code> ，只不过对应的是 <strong>文件</strong>，而不是 <strong>版本号</strong> 或者 <strong>标签</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">{</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  &quot;</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">name</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &quot;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">test</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  &quot;</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">version</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &quot;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">1.0.0</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  &quot;</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">main</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &quot;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">index.js</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  &quot;</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">dependencies</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">    &quot;</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">config</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">&quot;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> &quot;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">file:./config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&quot;</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  }</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><h3 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h3><p>最后在 <code>/index.js</code> 里面测试</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> require</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">A</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">           \\\\</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">B</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">           \\\\</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">2</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">C</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">           \\\\</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">3</span></span></code></pre></div><h2 id="写在最后" tabindex="-1">写在最后 <a class="header-anchor" href="#写在最后" aria-label="Permalink to &quot;写在最后&quot;">​</a></h2><p>虽然这样可以更好的引入 <code>config</code> ，但也会出现不方便的时候，如果 <code>config</code> 文件频繁更改，那么每次更改都需要更新 <code>package</code></p><p>不过既然是配置文件，那么我想更新频率应该不会很好，不过也看具体的使用情况。</p>`,26)]))}const c=i(h,[["render",e]]);export{g as __pageData,c as default};
