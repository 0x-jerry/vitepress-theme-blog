import{_ as i,b as a,o as n,a5 as t}from"./chunks/framework.CAaOUjTN.js";const l="/assets/gen-new-token.B_gobvn0.png",e="/assets/settings.C9NSstEk.png",y=JSON.parse('{"title":"hexo+git+travis自动部署","description":"","frontmatter":{"title":"hexo+git+travis自动部署","date":"2018-11-08T05:41:11.000Z","tags":["Hexo","Git","Travis CI"],"license":"CC BY-NC 4.0","read":{"text":"3 min read","minutes":2.36,"time":141600,"words":472}},"headers":[{"level":2,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":2,"title":"流程","slug":"流程","link":"#流程","children":[]},{"level":2,"title":"生成 github token","slug":"生成-github-token","link":"#生成-github-token","children":[]},{"level":2,"title":"Travis Config","slug":"travis-config","link":"#travis-config","children":[]},{"level":2,"title":"坑","slug":"坑","link":"#坑","children":[]}],"relativePath":"posts/hexo-git-and-travis.md","filePath":"posts/hexo-git-and-travis.md"}'),p={name:"posts/hexo-git-and-travis.md"};function h(k,s,r,d,o,g){return n(),a("div",null,s[0]||(s[0]=[t('<blockquote><p>本文介绍如何使用 TravisCI 来实现 <code>git push</code> 之后，自动更新 GitHub Page</p></blockquote><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h2><p>本文章，默认读者已熟悉 travis 配置，以及 git 相关命令</p><h2 id="流程" tabindex="-1">流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;">​</a></h2><ol><li>git push</li><li>travis 执行脚本 <ol><li>安装依赖 <code>npm install</code> or <code>yarn</code></li><li>配置 git global config </li><li>clone git page 仓库</li><li>生成 html 静态文件</li><li>commit 更新时间</li><li>push</li></ol></li></ol><h2 id="生成-github-token" tabindex="-1">生成 github token <a class="header-anchor" href="#生成-github-token" aria-label="Permalink to &quot;生成 github token&quot;">​</a></h2><p>生成 token, 让 travis 可以根据 token 拿到 push 到 git 的权限</p><p><a href="https://github.com/settings/tokens" target="_blank" rel="noreferrer">生成 token 地址</a></p><figure><img src="'+l+'" alt="Generate new token" tabindex="0" loading="lazy"><figcaption>Generate new token</figcaption></figure><p>生成新的 token 之后，在 travis 对应的仓库里面设置环境变量</p><figure><img src="'+e+`" alt="settings" tabindex="0" loading="lazy"><figcaption>settings</figcaption></figure><p>之后就是写配置文件了</p><h2 id="travis-config" tabindex="-1">Travis Config <a class="header-anchor" href="#travis-config" aria-label="Permalink to &quot;Travis Config&quot;">​</a></h2><p>确定流程之后，就可以开始写配置文件 <code>.travis.yml</code>:</p><blockquote><p><code>date &#39;+%Y-%m-%d %H:%M:%S&#39;</code> 是获取系统时间，具体参考 <a href="http://manpages.ubuntu.com/manpages/cosmic/man1/date.1.html" target="_blank" rel="noreferrer">date command</a>, <a href="https://stackoverflow.com/questions/4651437/how-to-set-a-variable-to-the-output-of-a-command-in-bash" target="_blank" rel="noreferrer">set variable in bash</a></p></blockquote><ul><li>git commit -m &quot;Site updated - <code>date &#39;+%Y-%m-%d %H:%M:%S&#39;</code>&quot;</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">language</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> node_js</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">node_js</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> stable</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">before_install</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 配置 git global config</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git config user.name &quot;cwxyz007&quot;</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git config user.email &quot;jie844067636@gmail.com&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">install</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 安装依赖</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> yarn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">before_script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # clone git page 仓库到 public 文件夹</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> mkdir ./public</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> cd ./public</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git clone &quot;https://\${GitRepo}&quot; .</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> cd ..</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 生成 html 静态文件</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> hexo g</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">after_script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # commit 更新时间 以及 push</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> cd ./public</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git add .</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git commit -m &quot;Site updated - \`date &#39;+%Y-%m-%d %H:%M:%S&#39;\`&quot;</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  # GitToken 为上面配置的环境变量</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  # GitRepo 在 env.global 有配置</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git push &quot;https://\${GitToken}@\${GitRepo}&quot; master:master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">branches</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  only</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 只更新 master 分支</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">cache</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 缓存 node_module 加快更新速度</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  yarn</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> true</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  npm</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">env</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #环境变量</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  global</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    -</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> TZ</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    -</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> GitRepo</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> github.com/cwxyz007/cwxyz007.github.io.git</span></span></code></pre></div><h2 id="坑" tabindex="-1">坑 <a class="header-anchor" href="#坑" aria-label="Permalink to &quot;坑&quot;">​</a></h2><p>在配置 <code>git commit</code> 命令的时候，配置为</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git commit -m &quot;Site updated - \`date &#39;+%Y-%m-%d %H:%M:%S&#39;\`&quot;</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 正确</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> git commit -m &quot;Site updated</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> \`</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">date &#39;+%Y-%m-%d %H:%M:%S&#39;\`&quot;</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 错误</span></span></code></pre></div><p>提交上去之后，Travis 提示 command not found，通过查找，发现是 yaml 语法错误，因为 <code>Site updated</code> 后面的 <code>:</code> 没有转义，所以整句命令执行出错，谨记！</p>`,21)]))}const u=i(p,[["render",h]]);export{y as __pageData,u as default};
