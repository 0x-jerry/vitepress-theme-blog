import{_ as i,b as a,o as t,a5 as n}from"./chunks/framework.CAaOUjTN.js";const h="/assets/vscode-render-lines.Dsiqew5i.png",o=JSON.parse('{"title":"VSCode 如何渲染代码","description":"","frontmatter":{"title":"VSCode 如何渲染代码","tags":["VSCode","JavaScript","Virtual List","Performance"],"date":"2021-09-09T07:13:46.000Z","read":{"text":"7 min read","minutes":6.1,"time":366000,"words":1220}},"headers":[{"level":2,"title":"VSCode 的效果","slug":"vscode-的效果","link":"#vscode-的效果","children":[]},{"level":2,"title":"猜想以及尝试","slug":"猜想以及尝试","link":"#猜想以及尝试","children":[]},{"level":2,"title":"解密 VSCode 的做法","slug":"解密-vscode-的做法","link":"#解密-vscode-的做法","children":[]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"relativePath":"posts/render-line.md","filePath":"posts/render-line.md"}'),l={name:"posts/render-line.md"};function k(e,s,p,r,d,g){return t(),a("div",null,s[0]||(s[0]=[n('<p>本文主要探索， VSCode 是如何把 1w+ 行代码呈现出来，且做到滚动不卡顿的。</p><p>前不久，一同事与我探讨怎么解决渲染大列表的问题。第一个就想到虚拟列表，但是效果不是特别理想。随后想到 VSCode 在滚动大文件（约 1w 多行代码）的时候，很丝滑。随后便研究了一下。特此记录。</p><h2 id="vscode-的效果" tabindex="-1">VSCode 的效果 <a class="header-anchor" href="#vscode-的效果" aria-label="Permalink to &quot;VSCode 的效果&quot;">​</a></h2><p>用 VSCode 随便打开一个 1w+ 的文件，最初加载的时间，会稍微多一点点。但是之后的滚动，却能做到没有丝毫的白屏。无论是滚动还是拖动，效果都非常的丝滑，简直就像是吃过德芙一样。</p><h2 id="猜想以及尝试" tabindex="-1">猜想以及尝试 <a class="header-anchor" href="#猜想以及尝试" aria-label="Permalink to &quot;猜想以及尝试&quot;">​</a></h2><p>看到这个效果，的第一想法：VSCode 肯定用了虚拟列表，不然 1w+ 的 dom 节点，仅是渲染，都会让页面卡的不行。</p><p>为了验证这个想法，直接找了一个几个 <code>star</code> 较高的虚拟列表库，尝试用了用。例如 <a href="https://bvaughn.github.io/react-virtualized/#/components/List" target="_blank" rel="noreferrer">react-virtualized</a> 、<a href="https://tangbc.github.io/vue-virtual-scroll-list/#/keep-state" target="_blank" rel="noreferrer">vue-virtual-scroll-list</a>、<a href="https://rintoj.github.io/ngx-virtual-scroller/demo" target="_blank" rel="noreferrer">ngx-virtual-scroller</a>。</p><p>这三个都很优秀，但是在快速滚动的时候，都还是会出现一点点白屏的间隙。</p><p>效果都不是特别理想。看来 VSCode 的做法估计还有点不一样。只有啃啃 VSCode 的源代码才接揭晓答案了。</p><h2 id="解密-vscode-的做法" tabindex="-1">解密 VSCode 的做法 <a class="header-anchor" href="#解密-vscode-的做法" aria-label="Permalink to &quot;解密 VSCode 的做法&quot;">​</a></h2><p>打开 VSCode 的调试工具，看看具体的渲染效果，如下图：</p><figure><img src="'+h+`" alt="vscode render lines" tabindex="0" loading="lazy"><figcaption>vscode render lines</figcaption></figure><p>可以看出，的确是利用虚拟列表的技术，仅渲染了可视区域的代码。且是利用 <code>css</code> 的 <code>top</code> 值来确定每一行代码的相对坐标。</p><p><strong>那么它是怎么做到，快速滚动不白屏的呢？</strong></p><p>带着这个疑问，先试试自己去实现一个虚拟列表，差不多也是依葫芦画瓢，效果不是特别理想。快速滚动的时候也会出现白屏。</p><p>粗略分析一下，猜测原因是出在监听 <code>scroll</code> 事件上。因为 <code>scroll</code> 事件是在滚动时触发的。</p><blockquote><p>The <strong>scroll</strong> event fires when the document view has been scrolled. --- <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event" target="_blank" rel="noreferrer">MDN</a></p></blockquote><p>因此，为了验证这个猜想，把 <code>scroll</code> 事件，换成 <code>wheel</code> 事件。注：这样的做法并不严谨，但是为了验证猜想足以。</p><p>换成 <code>wheel</code> 之后，结果稍稍好了一点点，但是快速滚动依旧是有白屏。看来还是不对。</p><p>这下就越来越对 VSCode 的做法感兴趣了，那么，是时候展现 VSCode 的技术了。</p><p>经过不断的啃代码，总算找到渲染每一行代码的源代码了。 <a href="https://github.com/microsoft/vscode/blob/aa93eefe550167de3ca29aaa3d06f721a47594a3/src/vs/editor/browser/viewParts/lines/viewLines.ts#L559-L621" target="_blank" rel="noreferrer">source: viewLines.ts</a></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">	public</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> renderText</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">: </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">ViewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">: </span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">void</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line highlighted"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		// (1) render lines - ensures lines are in the DOM</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_visibleLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">renderLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_lastRenderedData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setCurrentVisibleRange</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">visibleRange</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">domNode</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setWidth</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewLayout</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getScrollWidth</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">());</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">domNode</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setHeight</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">Math</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">min</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewLayout</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getScrollHeight</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(),</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1000000</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		// (2) compute horizontal scroll position:</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		//  - this must happen after the lines are in the DOM since it might need a line that rendered just now</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		//  - it might change \`scrollWidth\` and \`scrollLeft\`</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">		if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">			const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">			// Check that we have the line that contains the horizontal range in the viewport</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">			if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">startLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;=</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">minLineNumber</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> &amp;&amp;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">maxLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;=</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">endLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">				this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> null</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">				// allow \`visibleRangesForRange2\` to work</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">				this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">onDidRender</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">				// compute new scroll position</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">				const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">newScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">_computeScrollLeftToReveal</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">				if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">newScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">					if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">!</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_isViewportWrapping</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">						// ensure \`scrollWidth\` is large enough</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">						this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">_ensureMaxLineWidth</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">newScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">maxHorizontalOffset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">					}</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">					// set \`scrollLeft\`</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">					this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">model</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setScrollPosition</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">({</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">						scrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">newScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">scrollLeft</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">					},</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">scrollType</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">				}</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">			}</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		// Update max line width (not so important, it is just so the horizontal scrollbar doesn&#39;t get too small)</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">		if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">!</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">_updateLineWidthsFast</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">())</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">			// Computing the width of some lines would be slow =&gt; delay it</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">			this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_asyncUpdateLineWidths</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">schedule</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">		if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">platform</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">isLinux</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> &amp;&amp;</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> !</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_asyncCheckMonospaceFontAssumptions</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">isScheduled</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">())</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">			const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">rendStartLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_visibleLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getStartLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">			const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">rendEndLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_visibleLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getEndLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">			for</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">let </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">lineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> rendStartLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> lineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;=</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> rendEndLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> lineNumber</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">++</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">				const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">visibleLine</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_visibleLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getVisibleLine</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">lineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">				if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">visibleLine</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">needsMonospaceFontCheck</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">())</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">					this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_asyncCheckMonospaceFontAssumptions</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">schedule</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">					break</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">				}</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">			}</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		// (3) handle scrolling</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_linesContent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setLayerHinting</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_canUseLayerHinting</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_linesContent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setContain</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">strict</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">&#39;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">		const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">adjustedScrollTop</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewLayout</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getCurrentScrollTop</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> - </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">bigNumbersDelta</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_linesContent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setTop</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">-</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">adjustedScrollTop</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_linesContent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">-</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewLayout</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getCurrentScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">());</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">	}</span></span></code></pre></div><p>从源代码可看出，其做法是确保在 <code>dom</code> 渲染完成之后，再更新滚动条。那么按照这个想法，就需要捕获所有可能的滚动操作，然后在更新滚动值之前，确保 <code>dom</code> 渲染完成。</p><p>从理论上来讲，这样的确能有效的防止白屏。</p><p>光讲理论怎么行呢，还是要试一下才行。尝试用这个方式，写了一个 <a href="https://0x-jerry.github.io/test-vscode-render-lines/" target="_blank" rel="noreferrer">demo: test-vscode-render-lines</a>，仅实现捕获 <code>wheel</code> 事件，效果还不错，无论滚动多快，都没有出现白屏。</p><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>至此，这次探究告一段论。目前仅尝试在固定每一行高度时，去计算出现在可视区域的 <code>dom</code> 元素，这样能在几乎 1 ms 之内完成。那么，问题来了。如果高度不是固定的，是可变的怎么办呢？计算时间会不会增加，如果列表元素太复杂了，渲染时间增加了，会不会出现滚动卡顿的情况？这些都还是需要测试。</p><p>目前看来，这种做法，在列表元素较少且高度固定时，表现比普通的虚拟列表好。除此之外的情况，或许还是普通的虚拟列表更优吧，这个就等之后再去探索了。</p>`,28)]))}const c=i(l,[["render",k]]);export{o as __pageData,c as default};
