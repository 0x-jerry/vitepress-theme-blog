<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>0x-Jerry's Blog</title>
        <link>https://blog.0x-jerry.icu</link>
        <description>undefined</description>
        <lastBuildDate>Sat, 01 Mar 2025 09:37:25 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[2024 的中间！？]]></title>
            <link>https://blog.0x-jerry.icu/posts/middle-of-2024</link>
            <guid>https://blog.0x-jerry.icu/posts/middle-of-2024</guid>
            <pubDate>Fri, 19 Jul 2024 18:58:17 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>2024 的中间！？</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_middle-of-2024.md.DXYqcGMl.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2024-07-20T02:58:17.578Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->2024 的中间！？<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>近日略闲，于是把之前挖的一些坑填了填，随之草草记录一下，好以此合影留念。</p><h2 id="一个工具库-silver" tabindex="-1">一个工具库 <a href="https://github.com/0x-jerry/silver" target="_blank" rel="noreferrer">Silver</a> <a class="header-anchor" href="#一个工具库-silver" aria-label="Permalink to &quot;一个工具库 [Silver]&quot;">​</a></h2><p><a href="https://github.com/0x-jerry/silver" target="_blank" rel="noreferrer">Silver</a> 允许你在写命令行工具的时候，像写文档一样顺畅。</p><p>这个库最开始的语法是用正则表达式匹配的，导致很多边界条件无法考虑到，写错了也很难排查。 最近用 <a href="https://ohmjs.org/" target="_blank" rel="noreferrer">ohm-js</a> 重写了语法模块，语法匹配起来更加健壮，如果有语法错误，也会有基础的提示，<s>虽然提示并不是很容易理解</s>。看个例子🌰：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> silver</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> }</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">@0x-jerry/silver</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// @autocompletion will enable `completion` subcommand to generate autocomplete script</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// Autocompletion only support zsh for now, and need to install manually</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// Manual install: you need to append `source &lt;(silver completion)` to `.zshrc`</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">ins</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> sliver</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">`</span></span>
<span class="line"><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">v1.0.0 @autocompletion</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">Silver, let you writing CLI like writing document. </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">${</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">defaultAction</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">-t --test @test:defaultValue, Test autocompletion.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">up/upgrade &lt;@test:dir&gt; [...other] #stopEarly, an sub command. </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">${</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">upgradeAction</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">-s --string @string:default, sub command option.</span></span>
<span class="line"><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">--small @bool, other option.</span></span>
<span class="line"><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// register autocomplete</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">ins</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">type</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">type</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> ()</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> [</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">t1</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">t2</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">t3</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> defaultAction</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">args</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> options</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">  console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">args</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> options</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> upgradeAction</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">([</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">dir</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> ..</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">other</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">],</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> options</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">  console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">dir</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> other</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> options</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><p>近期也趁机把一些很早就想做的优化补上了：</p><ul><li><code>-h --help</code> 现在显示的帮助文档更加漂亮，也支持显示版本号了</li><li>默认支持 <code>-h --help</code> 参数，不再需要显式声明</li><li>默认不再添加 <code>completion</code> 子命令，需要显式声明</li></ul><h2 id="一些公开的-serverless-接口-public-api" tabindex="-1">一些公开的 Serverless 接口 <a href="https://github.com/0x-jerry/public-apis" target="_blank" rel="noreferrer">Public API</a> <a class="header-anchor" href="#一些公开的-serverless-接口-public-api" aria-label="Permalink to &quot;一些公开的 Serverless 接口 [Public API][public-api]&quot;">​</a></h2><p>此项目是很早之前为了测试 <a href="https://deno.com/deploy" target="_blank" rel="noreferrer">deno deploy</a> 随手写的，很久没有用了。</p><p>最近遇到一个 <a href="https://www.wikiwand.com/zh-hans/rss" target="_blank" rel="noreferrer">RSS</a> 订阅文件(<a href="https://validator.w3.org/feed/check.cgi?url=https%3A%2F%2Fwww.jiqizhixin.com%2Frss" target="_blank" rel="noreferrer">问题 rss.xml</a>)不规范，导致 <a href="https://freshrss.org/index.html" target="_blank" rel="noreferrer">FreshRSS</a> 无法正常获取内容。 为了解决这个问题，所以把 <a href="https://github.com/0x-jerry/public-apis" target="_blank" rel="noreferrer">Public API</a> 这个项目宠幸了一番，用 <a href="https://hono.dev/" target="_blank" rel="noreferrer">hono</a> 重写了一遍，写了一个接口用于把有问题的 rss.xml <a href="https://validator.w3.org/feed/check.cgi?url=https%3A%2F%2Fapi.0x-jerry.icu%2Frss%2Fjiqizhixin.com" target="_blank" rel="noreferrer">转换成合法的 rss.xml</a></p><p>目前这个项目有一些可用的 API，具体可查看 <a href="https://github.com/0x-jerry/public-apis" target="_blank" rel="noreferrer">Public API</a>。</p><p>好久没有关注 <a href="https://deno.com/deploy" target="_blank" rel="noreferrer">Deno Deploy</a>，这次重写发现 <a href="https://deno.com/" target="_blank" rel="noreferrer">Deno</a> 已经完全兼容 Node 🎉🎉（但使用 Node 模块时，还是需要指定 <code>node:</code> 标识）。</p><p>配合 <a href="https://deno.com/" target="_blank" rel="noreferrer">Deno</a> 出现的是 <a href="https://jsr.io" target="_blank" rel="noreferrer">jsr.io</a>，虽然 <a href="https://jsr.io" target="_blank" rel="noreferrer">jsr.io</a> 说是支持 Node，不过在 Node 项目里使用 <a href="https://jsr.io" target="_blank" rel="noreferrer">jsr.io</a> 就像是在当面<a href="https://zh.moegirl.org.cn/zh-hans/NTR" target="_blank" rel="noreferrer">牛头人</a> npm 😂。还是在 <a href="https://deno.com/" target="_blank" rel="noreferrer">Deno</a> 项目里食用更佳。</p><p>不得不说，<a href="https://deno.com/deploy" target="_blank" rel="noreferrer">Deno Deploy</a> 整体使用起来非常流畅，非常适合用来做一些 MVP 项目，毕竟白嫖，且免费额度挺多的（目前 1M Request/month, 100G Bandwidth/month），开箱即用的 <a href="https://deno.com/kv" target="_blank" rel="noreferrer">KV</a> 模块也基本够用。</p><h2 id="typescript-openapi-schema-相互转换" tabindex="-1">Typescript &lt;=&gt; OpenAPI Schema 相互转换 <a class="header-anchor" href="#typescript-openapi-schema-相互转换" aria-label="Permalink to &quot;Typescript <=> OpenAPI Schema 相互转换&quot;">​</a></h2><p>这一块有两个工具：</p><ul><li><a href="https://github.com/0x-jerry/openapi-ts-define" target="_blank" rel="noreferrer">OpenAPI-TS-Define</a>: 根据 Typescript 声明的类型生成 OpenAPI Schema，用于后端。</li><li><a href="https://github.com/0x-jerry/openapi-ts" target="_blank" rel="noreferrer">OpenAPI-TS</a>: 根据 OpenAPI Schema 生成 Typescript 代码，用于前端。</li></ul><p><a href="https://github.com/0x-jerry/openapi-ts-define" target="_blank" rel="noreferrer">OpenAPI-TS-Define</a> 还在开发中，基本可用，但项目本身却还没有文档 😂，真是离谱！！！估计又是一个坑，毕竟我自己写后端的时候比较少。</p><p><a href="https://github.com/0x-jerry/openapi-ts" target="_blank" rel="noreferrer">OpenAPI-TS</a> 基本稳定，但还是有一些功能想做但还没有做，例如：</p><ul><li>提供更全面的 CLI，目前的 CLI 工具，就是近期刚加上的，基本够用吧 <s>够用了还不够？</s></li><li>提供平铺函数名称模式（主要区别在于调用方式不用 <code>ApiUserGet(params)</code> vs <code>api.user.$get(params)</code>），目前默认生成后者</li></ul><p>这个工具基本稳定，后续估计会补全一下使用文档，以及处理一些边界条件吧。</p><h2 id="其它只配一提的工具" tabindex="-1">其它只配一提的工具 <a class="header-anchor" href="#其它只配一提的工具" aria-label="Permalink to &quot;其它只配一提的工具&quot;">​</a></h2><ul><li><a href="https://github.com/0x-jerry/vscode-vitepress" target="_blank" rel="noreferrer">VSCode VitePress</a>: <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VSCode</a> 插件，方便实时预览 <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress</a> 页面。</li><li><a href="https://github.com/0x-jerry/vscode-ohm" target="_blank" rel="noreferrer">VSCode Ohm JS</a>: 增强 <a href="https://ohmjs.org/" target="_blank" rel="noreferrer">ohm-js</a> 在 <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VSCode</a> 中的体验，目前是个瘸子，很多想做的功能都没实现，🤔</li></ul><h2 id="中场小结" tabindex="-1">中场小结 <a class="header-anchor" href="#中场小结" aria-label="Permalink to &quot;中场小结&quot;">​</a></h2><p>在此时一个不上不下的时刻，在安安静静地搬砖之外，也应享受另一片自由的天空！</p><p>你好陌生人🤝，感谢你花时间看完尘封于世间角落的这片文章，祝你生活愉快，再见陌生人！👋</p><figure><img src="https://0x-jerry.icu/api/img" alt="此处应有张配图！" tabindex="0" loading="lazy"><figcaption>此处应有张配图！</figcaption></figure></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浅识 L-System]]></title>
            <link>https://blog.0x-jerry.icu/posts/l-system</link>
            <guid>https://blog.0x-jerry.icu/posts/l-system</guid>
            <pubDate>Sat, 01 Jun 2024 04:24:29 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>浅识 L-System</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_l-system.md.D-wBxIbL.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2024-06-01T12:24:29.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->浅识 L-System<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>分形，数学中的一个比较有趣的概念，是一种图形，却又和普通的图形有所区别。主要区分在于，分形的一部分，放大之后，和原来的形状一样。就像俄罗斯套娃一样，打开一个，出现一个新的套娃，再打开一个，又出现一个新的套娃，一直循环下去。这就是分形。</p><p>分形，可以用来创造很多有趣的图形，例如下面的一棵树：</p><div class="relative mb-12" style="aspect-ratio:16/9;width:100%;" data-v-0ffbb6f5=""><iframe src="https://0x-jerry.github.io/visual-experiment/#/fractal-tree" frameborder="0" class="absolute border-1 border-solid border-bGray-2" width="1920" height="1080" style="transform:scale(0);transform-origin:top left;" data-v-0ffbb6f5=""></iframe><div class="iframe-link" data-v-0ffbb6f5=""><a href="https://0x-jerry.github.io/visual-experiment/#/fractal-tree" target="_blank" data-v-0ffbb6f5="">Fractal Tree</a></div></div><p>接下来，就记录一下，如何实现这样的一棵树。在实现的过程中，需要用到 <a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a>，所以就来了解一下什么是 <a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 吧。</p><h2 id="l-system" tabindex="-1">L-System <a class="header-anchor" href="#l-system" aria-label="Permalink to &quot;L-System&quot;">​</a></h2><p><a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a>（Lindenmayer 系统） 是由 <a href="https://www.wikiwand.com/en/Aristid_Lindenmayer" target="_blank" rel="noreferrer">Aristid Lindenmayer</a> 发明的一种用于描述细胞生长的<a href="https://www.wikiwand.com/en/Formal_language" target="_blank" rel="noreferrer">形式语言</a>（可简单理解成一种简化版的编程语言）。</p><p>其主要是用递归的思想，来描述植物的形状。如一棵树的枝干和树本身具有一定的相似度：</p><figure><img src="https://upload.wikimedia.org/wikipedia/commons/a/af/Fractal_weeds.jpg" alt="https://www.wikiwand.com/en/L-system#L-system_structure" tabindex="0" loading="lazy"><figcaption><a href="https://www.wikiwand.com/en/L-system#L-system_structure" target="_blank" rel="noreferrer">https://www.wikiwand.com/en/L-system#L-system_structure</a></figcaption></figure><p>接下来再来了解一下 <a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 的三个组成部分</p><ol><li><code>V</code>，用字母标识的一组符号，用于后续递归计算</li><li><code>ω</code>，初始状态，由 <code>V</code> 中的符号组成</li><li><code>P</code>，转换规则，<code>V</code> 中的每个符号对应一个规则，用于表述转换的结果</li></ol><p>看起来比较抽象，就拿上面的生成的树来举个例子</p><ol><li>定义 <code>V</code> 由 <code>X F [ ] + -</code> 6 个符号组成</li><li>初始状态 <code>ω</code> 为 <code>X</code></li><li>规则转换规则 <code>P</code> 如下： <ol><li><code>X =&gt; F-[[X]+X]+F[+FX]-X</code></li><li><code>F =&gt; FF</code></li></ol></li></ol><p>则不同迭代的状态分别为</p><p><strong>第 0 个迭代</strong></p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>X</span></span></code></pre></div><p><strong>第 1 个迭代</strong></p><p>有规则 <code>P</code> 的第一个规则可知，<code>X =&gt; F-[[X]+X]+F[+FX]-X</code>, <code>X</code> 转换成 <code>F-[[X]+X]+F[+FX]-X</code>，因此结果为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>F-[[X]+X]+F[+FX]-X</span></span></code></pre></div><p><strong>第 2 个迭代</strong></p><p>同理，由 <code>P</code> 中的两个转换规则可知由如下转换过程，其中无对应转换规则的符号，则直接保留</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>F  -[[ X                  ]+ X                  ]+ F  [+ F  X                  ]- X</span></span>
<span class="line"><span>-  --- -                  -- -                  -- -  -- -  -                  -- -</span></span>
<span class="line"><span>|  |   |                  |  |                  |  |  |  |  |                  |  |</span></span>
<span class="line"><span>FF -[[ F-[[X]+X]+F[+FX]-X ]+ F-[[X]+X]+F[+FX]-X ]+ FF [+ FF F-[[X]+X]+F[+FX]-X ]- F-[[X]+X]+F[+FX]-X</span></span></code></pre></div><p>因此最后结果为:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>FF-[[F-[[X]+X]+F[+FX]-X]+F-[[X]+X]+F[+FX]-X]+FF[+FFF-[[X]+X]+F[+FX]-X]-F-[[X]+X]+F[+FX]-X</span></span></code></pre></div><p><strong>第 3 个迭代</strong></p><p>和从第 1 个迭代到第 2 个迭代类似，不断的替换，最后会生成 379 个符号。</p><h3 id="画图展示" tabindex="-1">画图展示 <a class="header-anchor" href="#画图展示" aria-label="Permalink to &quot;画图展示&quot;">​</a></h3><p><a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 的迭代完成之后，再给每一个字符定义一个对应的绘制规则：</p><ul><li><code>X</code>: 无实际含义</li><li><code>F</code>: 按照当前方向，画固定长度的直线</li><li><code>[</code>: 保存当前状态（位置、角度）</li><li><code>]</code>: 取出上一次保存的状态</li><li><code>+</code>: 当前状态左转 25°</li><li><code>-</code>: 状态状态右转 25°</li></ul><p>然后再按照从左往右的顺序，依照对应的绘制规则依次执行，则可以绘制出如下效果</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>下面演示过程中的相关参数有所不同，且加入了一定的随机性，因此，和上述表述的过程有所不同。</p></div><div class="relative mb-12" style="aspect-ratio:16/9;width:100%;" data-v-0ffbb6f5=""><iframe src="https://0x-jerry.github.io/visual-experiment/#/fractal-tree?iteration=3&amp;length=40" frameborder="0" class="absolute border-1 border-solid border-bGray-2" width="1920" height="1080" style="transform:scale(0);transform-origin:top left;" data-v-0ffbb6f5=""></iframe><div class="iframe-link" data-v-0ffbb6f5=""><a href="https://0x-jerry.github.io/visual-experiment/#/fractal-tree?iteration=3&amp;length=40" target="_blank" data-v-0ffbb6f5="">Fractal Tree(3 iteration)</a></div></div><p>这样根据第三个迭代的结果画出来的图，就是上面的样子，就像一棵树。</p><p>当迭代为 6 的时候，也就是文章最开始看到的样子，树枝变多了，看起来更加丰富了。</p><p><a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 还有很多玩法，更多实例可以参考 <a href="https://paulbourke.net/fractals/lsys/" target="_blank" rel="noreferrer">L-System Example</a>。</p><h2 id="核心逻辑" tabindex="-1">核心逻辑 <a class="header-anchor" href="#核心逻辑" aria-label="Permalink to &quot;核心逻辑&quot;">​</a></h2><p>至此，用 <a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 画一棵树也就结束了。<a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a> 的核心思想也可以看出来就是 <strong>递归</strong>，从上面第 1 个迭代到第 2 个迭代的过程，可以看到每个 <code>X</code> 都会变成 18 个符号，其中还包含 4 个 <code>X</code>，仅计算 <code>X</code> 从第二个迭代到第三个迭代，就增加到了 <code>4 * 18 = 60</code> 个符号。如此指数级的增长，在第 6 个迭代就已经有 25159 个字符了。</p><p>也是由于其引用到了本身 <code>X =&gt; F-[[X]+X]+F[+FX]-X</code>，这里的 <code>X</code> 经过一个迭代，又会产生的 <code>X</code>。也会导致局部和整体看起来有相似的结果。也就是 <strong>分形</strong>。</p><p>最后，再看看这个经过 8 个迭代生成的树长什么样子！</p><div class="relative mb-12" style="aspect-ratio:16/9;width:100%;" data-v-0ffbb6f5=""><iframe src="https://0x-jerry.github.io/visual-experiment/#/fractal-tree?iteration=8&amp;length=2" frameborder="0" class="absolute border-1 border-solid border-bGray-2" width="1920" height="1080" style="transform:scale(0);transform-origin:top left;" data-v-0ffbb6f5=""></iframe><div class="iframe-link" data-v-0ffbb6f5=""><a href="https://0x-jerry.github.io/visual-experiment/#/fractal-tree?iteration=8&amp;length=2" target="_blank" data-v-0ffbb6f5="">Fractal Tree(8 iteration)</a></div></div><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ul><li><a href="https://www.wikiwand.com/en/Aristid_Lindenmayer" target="_blank" rel="noreferrer">Aristid Lindenmayer</a></li><li><a href="https://www.wikiwand.com/en/L-system#/Example_7:_Fractal_plant" target="_blank" rel="noreferrer">L-System</a></li><li><a href="https://www.wikiwand.com/en/Formal_language" target="_blank" rel="noreferrer">Formal Language</a></li><li><a href="https://paulbourke.net/fractals/lsys/" target="_blank" rel="noreferrer">L-System Example</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[VitePress Mismatch 错误]]></title>
            <link>https://blog.0x-jerry.icu/posts/vitepress-mismatch</link>
            <guid>https://blog.0x-jerry.icu/posts/vitepress-mismatch</guid>
            <pubDate>Sat, 07 Oct 2023 19:18:46 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>VitePress Mismatch 错误</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_vitepress-mismatch.md.CC8QH-Jw.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2023-10-08T03:18:46.760Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->VitePress Mismatch 错误<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p><a href="https://vitepress.dev/" target="_blank" rel="noreferrer">Vitepress</a> 迎来了 RC 阶段，相信 <s>不久</s> 就会迎来 Stable 版本。于此，之前一直挖的坑，也是时候填上了。</p><p>之前用 <a href="https://deno.com/" target="_blank" rel="noreferrer">deno</a>、<a href="https://deno.com/" target="_blank" rel="noreferrer">fresh</a>、<a href="https://twind.dev/" target="_blank" rel="noreferrer">twind</a> 实现了一次博客的迁移，之后也就基本咕了。</p><p><a href="https://deno.com/" target="_blank" rel="noreferrer">fresh</a> 框架的 <a href="https://fresh.deno.dev/docs/concepts/islands" target="_blank" rel="noreferrer">island</a> 模式能够实现 js 最小化。仅加载动态的 js 部分，静态的部分（非 <a href="https://fresh.deno.dev/docs/concepts/islands" target="_blank" rel="noreferrer">island</a>）都是 html，非常利于 SEO，性能方面也非常好。但是 Deno Depoly 不支持动态加载（Dynamic import）导致在 markdown 扩展上很有限。且由于 Deno Depoly 是 Serverless，会有冷启动和热启动时间，所以对于加载时间上来说，并不是一件好事情。但是 Serverless 也有其好处，例如可以实现一些状态无关的 API，但貌似对博客来讲，没有什么优势。</p><p>其实，很久之前就在尝试把博客迁移到 <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">vitepress</a>，但是当时没有很好的搜索方案（其实这个功能可以没有，<s>主要是懒</s>），就搁置了，最近看到 <a href="https://pagefind.app/" target="_blank" rel="noreferrer">pagefind</a> 纯前端搜索方案，尝试了一下，效果还不错。就把博客主题又用 <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">vitepress</a> 写了一遍（加上这一次，博客应该总共重写了有 5，6 次了吧，接下来还是专注在内容上好点）。</p><p>然后记一记这次踩的一个坑，Vue 的 <code>hydration mismatch error</code>（指 SSG 生成的 HTML 结构在客户端混合时期望的 HTML 结构不一致，从而就会导致这个错误。讲人话就是 ssg 生成的 html 在浏览器里 vue 执行混合阶段时期望的 html 不一样）。一般发生在生成 html 时有一些动态内容，一般解决方案是用 <code>ClientOnly</code> 组件包裹包含动态内容的组件。</p><p>我遇到的情况呢，却不一般，因为我本地打包（build）之后，本地预览没有问题。放到 Github Actions 里面去打包，然后访问，就遇到了 <code>hydration mismatch</code> 错误，嗯...挺离谱的。</p><p>之后对比生成的 HTMl，发现两边生成的文件不一样，主要是日期不一样。破案了，原来是因为时区不一致（Github Actions 里的时区和我本地的时区不一致），<a href="https://day.js.org/" target="_blank" rel="noreferrer">dayjs</a> 在不同时区生成的 <code>YYYY-MM-DD</code> 格式的结果就不一样。知道原因之后，解决方案也就比较简单了，增加一个时区配置，用固定的时区生成对应的格式即可。</p><p>好了，写的差不多了，该吃饭了，完。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[gRPC 在 JS 中的应用]]></title>
            <link>https://blog.0x-jerry.icu/posts/grpc</link>
            <guid>https://blog.0x-jerry.icu/posts/grpc</guid>
            <pubDate>Thu, 28 Apr 2022 07:13:02 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>gRPC 在 JS 中的应用</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_grpc.md.BjvP4POz.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2022-04-28T15:13:02.588Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->gRPC 在 JS 中的应用<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>简单记录一下在 NodeJS 中折腾 gRPC Client 端的相关事情。</p><p>目前，gRPC 官网关于 NodeJS 的相关资料并不是特别全，不过，参考 Example 也大概知道怎么用了。记录一下关键的几个点：</p><ol><li>如何根据 <code>.proto</code> 文件生成 TypeScript 的类型</li><li>怎么使用 <a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a> 以及 <a href="https://github.com/grpc/grpc-node/tree/master/packages/grpc-js" target="_blank" rel="noreferrer">@grpc/grpc-js</a></li></ol><p>准备文件，<a href="https://github.com/v2fly/v2ray-core/blob/master/app/stats/command/command.proto" target="_blank" rel="noreferrer">v2ray.proto</a>，源代码如下：</p><div class="language-proto vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">syntax</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> "proto3"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">package</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> v2ray.core.app.stats.command</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">option</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> csharp_namespace</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> "V2Ray.Core.App.Stats.Command"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">option</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> go_package</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> "v2ray.com/core/app/stats/command"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">option</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> java_package</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> "com.v2ray.core.app.stats.command"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">option</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> java_multiple_files</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> true</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> GetStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // Name of the stat counter.</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  string</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> name</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // Whether or not to reset the counter to fetching its value.</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  bool</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> reset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Stat</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  string</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> name</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  int64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> value</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> GetStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  Stat</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> stat</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> QueryStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  string</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> pattern</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  bool</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> reset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> QueryStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  repeated</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> Stat</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> stat</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> SysStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> SysStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint32</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> NumGoroutine</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint32</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> NumGC</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Alloc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 3</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> TotalAlloc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 4</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Sys</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 5</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Mallocs</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 6</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Frees</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 7</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> LiveObjects</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 8</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint64</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> PauseTotalNs</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 9</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  uint32</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Uptime</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 10</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">service</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> StatsService</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  rpc</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> GetStats</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">(</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">GetStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">returns</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> (</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">GetStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) {}</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  rpc</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> QueryStats</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">(</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">QueryStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">returns</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> (</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">QueryStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) {}</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  rpc</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> GetSysStats</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">(</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">SysStatsRequest</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">returns</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> (</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">SysStatsResponse</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">) {}</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">message</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Config</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> {}</span></span></code></pre></div><h2 id="如何生成-typescript-类型文件" tabindex="-1">如何生成 TypeScript 类型文件 <a class="header-anchor" href="#如何生成-typescript-类型文件" aria-label="Permalink to &quot;如何生成 TypeScript 类型文件&quot;">​</a></h2><p>我是 TypeScript 的重度使用者，现在都不太习惯写 JS 代码了。所以，没有类型提示怎么行呢！好在 gRPC 已经有现成的工具，<a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader#generating-typescript-types" target="_blank" rel="noreferrer">proto-loader-gen-types</a>。</p><p>这个工具是包含在 <a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a> 里的，因此安装 <a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a> 即可。因为必须指定 <code>-grpcLib</code> 参数，因此也需要安装 <a href="https://github.com/grpc/grpc-node/tree/master/packages/grpc-js" target="_blank" rel="noreferrer">@grpc/grpc-js</a>。</p><p>使用例子：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">$(</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> bin</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">/proto-loader-gen-types </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">--longs</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">=</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">String</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> --enums</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">=</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">String</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> --defaults</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --oneofs</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --grpcLib=@grpc/grpc-js</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --outDir=src/proto/</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> grpc/v2ray.proto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"># 根据 grpc/v2ray.proto 的内容，生成的类型文件，会存放在 src/proto 中</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"># 这里的路径，都是相对于执行的目录。</span></span></code></pre></div><h2 id="怎么使用-grpc-proto-loader-和-grpc-grpc-js" tabindex="-1">怎么使用 <a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a> 和 <a href="https://github.com/grpc/grpc-node/tree/master/packages/grpc-js" target="_blank" rel="noreferrer">@grpc/grpc-js</a> <a class="header-anchor" href="#怎么使用-grpc-proto-loader-和-grpc-grpc-js" aria-label="Permalink to &quot;怎么使用 [@grpc/proto-loader] 和 [@grpc/grpc-js]&quot;">​</a></h2><p>一个简单 <strong>Client</strong> 端的例子：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> *</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> as</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> protoLoader</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">@grpc/proto-loader</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> *</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> as</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> grpc</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">@grpc/grpc-js</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> path</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">path</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 上面生成好的类型文件</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> ProtoGrpcType</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> }</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">@/proto/v2ray</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 载入 proto 文件</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">protoFileName</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> path</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">resolve</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">grpc</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">v2ray.proto</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 加载 proto</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">packageDefinition</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> protoLoader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">loadSync</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">protoFileName</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {})</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 将 proto 定义 转换成 gRPC 对象</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">grpcObj</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> grpc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">loadPackageDefinition</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">packageDefinition</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> as</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;"> any</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> as</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;"> ProtoGrpcType</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 具体的实例</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">StatsService</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> grpcObj</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">v2ray</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">core</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">app</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">stats</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">command</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">StatsService</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 根据需要作出调整</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">host</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">localhost:10086</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">client</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new </span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">StatsService</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">host</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> grpc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">credentials</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">createInsecure</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">client</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">queryStats</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  {</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">    pattern</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">''</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">    reset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">false</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  },</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">err</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> val</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">    if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">err</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">      console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">error</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">err</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">      return</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">val</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">?.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">stat</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  },</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span></code></pre></div><p><strong>Server</strong> 端的示例可参考 <a href="https://grpc.io/docs/languages/node/basics/#server" target="_blank" rel="noreferrer">Create the server</a>。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://grpc.io/docs/languages/node/basics/" target="_blank" rel="noreferrer">gRPC Node Tutorial</a></li><li><a href="https://github.com/grpc/grpc-node/tree/master/packages/proto-loader" target="_blank" rel="noreferrer">@grpc/proto-loader</a></li><li><a href="https://github.com/grpc/grpc-node/tree/master/packages/grpc-js" target="_blank" rel="noreferrer">@grpc/grpc-js</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[WebAssembly 入门]]></title>
            <link>https://blog.0x-jerry.icu/posts/intro-webassembly</link>
            <guid>https://blog.0x-jerry.icu/posts/intro-webassembly</guid>
            <pubDate>Sun, 27 Mar 2022 06:25:25 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>WebAssembly 入门</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_intro-webassembly.md.BpjFHPm1.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2022-03-27T14:25:25.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->WebAssembly 入门<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><blockquote><p>这篇文章本来是上个月就应该写好的，不过中途去准备晋升了，有点累，就拖了拖，现在总算是差不多了 Orz。</p></blockquote><p>这篇文章主要介绍一下 <a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a>，以及记录通过 <a href="https://www.rust-lang.org/" target="_blank" rel="noreferrer">Rust</a> 实践的结果。</p><h2 id="webassembly-简介" tabindex="-1"><a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a> 简介 <a class="header-anchor" href="#webassembly-简介" aria-label="Permalink to &quot;[WebAssembly] 简介&quot;">​</a></h2><p>借用官网的一段话：</p><blockquote><p>WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications. <br><br> WebAssembly（缩写为 Wasm）是一种用于基于堆栈的虚拟机的二进制指令格式。Wasm 被设计为编程语言的可移植编译目标，支持部署在 web 端以及服务器端。</p></blockquote><p>这么看来， <a href="https://webassembly.org/" target="_blank" rel="noreferrer">Wasm</a> 就是一个中间产物，不管你用什么编程语言写，只要编译成 <a href="https://webassembly.org/" target="_blank" rel="noreferrer">Wasm</a>，那么，其他应用程序，只要支持执行 <a href="https://webassembly.org/" target="_blank" rel="noreferrer">Wasm</a>，就可以执行你编写的程序。</p><p>而且，<a href="https://webassembly.org/" target="_blank" rel="noreferrer">Wasm</a> 的运行速度也非常不错，Talk is Cheap, Show me the speed.</p><h2 id="实践" tabindex="-1">实践 <a class="header-anchor" href="#实践" aria-label="Permalink to &quot;实践&quot;">​</a></h2><p><a href="https://webassembly.org/" target="_blank" rel="noreferrer">Wasm</a> 官网已经列举了有哪些编程语言支持编译到 <a href="https://webassembly.org/" target="_blank" rel="noreferrer">Wasm</a>，请参考 <a href="https://webassembly.org/getting-started/developers-guide/" target="_blank" rel="noreferrer">支持列表</a>。</p><p>我选择了 <a href="https://www.rust-lang.org/" target="_blank" rel="noreferrer">Rust</a>，主要是想趁机入门一下 <a href="https://www.rust-lang.org/" target="_blank" rel="noreferrer">Rust</a> 这门语言。毕竟这本语言已经被吹成是未来前端工具链的基石了。<a href="https://www.rust-lang.org/" target="_blank" rel="noreferrer">Rust</a> 相关的知识，可参考 <a href="https://github.com/sunface/rust-course" target="_blank" rel="noreferrer">Rust 语言圣经</a>。</p><p>具体相关的代码仓库 <a href="https://github.com/0x-jerry/mmcq.js" target="_blank" rel="noreferrer">mmcq.js</a>。这是一个提取图片主题色的库，计算量较大，所以用 <a href="https://webassembly.org/" target="_blank" rel="noreferrer">Wasm</a> 实现，速度上的对比应该 会比较明显。</p><p>就起结果来看，速度大概提升 75% 左右。JavaScript 实现 vs Rust 实现， 不同图片大小耗时对比：</p><table tabindex="0"><thead><tr><th>JavaScript</th><th>WebAssembly</th></tr></thead><tbody><tr><td>13 ms</td><td>3 ms</td></tr><tr><td>147 ms</td><td>17 ms</td></tr><tr><td>205 ms</td><td>34 ms</td></tr><tr><td>403 ms</td><td>103 ms</td></tr></tbody></table><p>由此可见，<a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a> 的提升效果还是蛮明显的。</p><p>不过，<a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a> 相关的工具链目前还不是特别完美，拿 <a href="https://github.com/rustwasm/wasm-pack" target="_blank" rel="noreferrer">wasm-pack</a> 来举例子，目前打包的产物，配合 Webpack 引入 Wasm 还需要一些额外的配置，无法做到无缝衔接。最佳实践，还需要探索。</p><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p><a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a> 应用的场景主要重在计算方面，在计算量不高的场景下，JS 已经足够了。另附一些相关参考的资料：</p><ul><li><a href="https://github.com/rustwasm/wasm-pack" target="_blank" rel="noreferrer">wasm-pack</a></li><li><a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a></li><li><a href="https://github.com/0x-jerry/mmcq.js" target="_blank" rel="noreferrer">mmcq.js</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[加密工作区的实现方案]]></title>
            <link>https://blog.0x-jerry.icu/posts/encrypt-workspace</link>
            <guid>https://blog.0x-jerry.icu/posts/encrypt-workspace</guid>
            <pubDate>Sat, 25 Dec 2021 07:48:57 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>加密工作区的实现方案</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_encrypt-workspace.md.C9bVnvxf.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-12-25T15:48:57.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->加密工作区的实现方案<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>自己有时候会写一些私人笔记，但又习惯用 <code>vscode</code> 来码字。也习惯了 <code>github</code> 来管理版本，存储也就直接选择同步到 <code>github</code> 了。</p><p>但是呢，存储服务发生数据泄漏，也是有可能的。所以呢，就自己用 <code>aes-256-gcm</code> 加密了一下，但这又导致 git 无法查看具体的变更，因为文件被加密了。</p><p>而且每次都需要解密 -&gt; 修改 -&gt; 加密 -&gt; 同步。太麻烦了。</p><p>所以，问题来了，如何在加密的同时，又能用 git 查看变更呢？</p><h2 id="思考" tabindex="-1">思考 <a class="header-anchor" href="#思考" aria-label="Permalink to &quot;思考&quot;">​</a></h2><p>先捋一捋条件：</p><ol><li>笔记内容需要密码才能查看，无法直接查看</li><li>需要一种方案显示具体的变更历史</li></ol><p>在同时满足以上两个条件下，想一想方案。</p><h3 id="有点笨的方案" tabindex="-1">有点笨的方案 <a class="header-anchor" href="#有点笨的方案" aria-label="Permalink to &quot;有点笨的方案&quot;">​</a></h3><p>这个方案的主要思想在于，每个文件，在每次提交修改的时候，都保存一个对应的加密版本。然后在查看记录的时候，解密对应的不同版本，然后再对比。</p><p>例如，文件 A，一共提交了两次修改，所以有两个加密的版本，分别为：</p><ul><li>A-1</li><li>A-2</li></ul><p>这两个版本都是加密的，同步到服务器。</p><p>在需要查看变更时，同步解密这两个版本，然后做对比，就可以查看到两个不同版本之间的具体变更了。</p><p>这个方案虽然可行，但是感觉有点蠢，存储的东西也比较多。</p><p>缺点：存储比较冗余，会重复多次存储没有修改过的内容。而且无法直接搜索，需要把每个文件解密之后才能搜索。</p><h3 id="有点瑕疵的方案" tabindex="-1">有点瑕疵的方案 <a class="header-anchor" href="#有点瑕疵的方案" aria-label="Permalink to &quot;有点瑕疵的方案&quot;">​</a></h3><p>这个方案的主要思想在于把整个 git 仓库加密，这个方案比较简单。</p><p>例如，先创建一个 git 仓库，做一些正常的提交记录。，在上传到云存储的时候，把整个 git 仓库加密保存成一个压缩文件，然后再保存到云端。</p><p>缺点比较明显，一是每次都需要全量同步，二是每次修改都需要全量 解密/加密。</p><h2 id="另外的一些限制" tabindex="-1">另外的一些限制 <a class="header-anchor" href="#另外的一些限制" aria-label="Permalink to &quot;另外的一些限制&quot;">​</a></h2><p>上面提到了两种方案，感觉都不是最佳方案。非要选一种的话，个人可能更倾向于第二种方案，原因是实现比较简单。</p><p>现在想想，除了最早提到的两个条件，想要一个比较好的方案，还需要以下限制条件才行：</p><ol><li>增量同步</li><li>支持 vscode，这是个个人需求。</li></ol><p>感觉比较困难，没有啥太好的方法，如果能扩展 git 的话，倒是有一个想法，给 git 写一个加密的插件，保存的时候，加密一下，进行其他操作的时候，再解密， 这一块不熟悉，感觉也不太可能，太多以来原生读取/写入操作。估计不容易实现。</p><h3 id="另辟蹊径" tabindex="-1">另辟蹊径 <a class="header-anchor" href="#另辟蹊径" aria-label="Permalink to &quot;另辟蹊径&quot;">​</a></h3><p>因为 git 支持 <a href="https://git-lfs.github.com/" target="_blank" rel="noreferrer">lfs</a>，所以，采用第一种方式来存储的话，应该会节省一些空间，相比第二种方案，会好一点点。</p><p>之前也抽空试了试给 vscode 写个插件来支持自动加解密文件。安装链接：<a href="https://github.com/0x-jerry/vscode-private-notes" target="_blank" rel="noreferrer">vscode-writing</a></p><p><a href="https://git-lfs.github.com/" target="_blank" rel="noreferrer">lfs</a> 在克隆等操作的时候，也是增量同步的，相对来讲，会好一点点。</p><p>缺点也是比较明显的，无法直接对比出历史修改记录。</p><p>如果能支持历史记录，那应该就比较好了。</p><p>记录一下解决方案，在对比的时候，读取两个不同的版本，解密之后再对比。</p><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>整体思考下来，利用 <a href="https://git-lfs.github.com/" target="_blank" rel="noreferrer">lfs</a> 实现第一种方案，也是一个不错的选择。但感觉还不是最好的方案。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[对于前端工程的思考]]></title>
            <link>https://blog.0x-jerry.icu/posts/fe-foundation</link>
            <guid>https://blog.0x-jerry.icu/posts/fe-foundation</guid>
            <pubDate>Mon, 13 Dec 2021 18:47:47 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>对于前端工程的思考</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_fe-foundation.md.CMfN4UpI.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-12-14T02:47:47.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->对于前端工程的思考<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p><em>此文，仅是自己对过去的一个梳理，其中的 <strong>最佳实践</strong> 和 <strong>总结</strong> 并不一定 <strong>正确</strong>，请酌情阅读，也欢迎讨论。</em></p><p>在当前的公司也有差不多两年了，项目接触了差不多十几个，自己搭建的项目也有不少。纵观之前接手的项目，以及现在的新项目， 多多少少有点沉淀，写一写，记一记。</p><p>因为公司没有架构师，而且前前后后接触了几个项目组，每个项目组都有自己的风格。有的用 Vue， 有的用 React，还有一些老项目 用的 jQuery 那一套。</p><h2 id="起因" tabindex="-1">起因 <a class="header-anchor" href="#起因" aria-label="Permalink to &quot;起因&quot;">​</a></h2><p>因为接触的项目多了，做的事情自然有一些重复的，而于我个人来讲，最烦的事情莫过于同样的事情做三遍。</p><p>于此，记一记关于 <strong>工程项目</strong> 相关的思考。包括：</p><ol><li>规范，包括项目结构规范，代码规范，前后端协议（接口）规范</li><li>项目编译，如 Webpack 等编译工具</li><li>持续集成，包括自动化测试，发布，回滚</li></ol><h2 id="规范" tabindex="-1">规范 <a class="header-anchor" href="#规范" aria-label="Permalink to &quot;规范&quot;">​</a></h2><p>规范，一定是根据项目一直在变的，只是变动不会特别大，也不会特别频繁。</p><p>对规范目的的思考。我认为规范的目的是为了让一个项目，中途换一拨人来继续开发，也能很快上手。换句话是，也就是提高项目的维护性。</p><h3 id="项目规范" tabindex="-1">项目规范 <a class="header-anchor" href="#项目规范" aria-label="Permalink to &quot;项目规范&quot;">​</a></h3><p>基于自身的经历，捋一捋项目的规范。基本都在做业务相关的代码，所以，本篇所说的项目，也就是指业务型项目。</p><p>基于一个业务，本身包含基础的结构，例如无论使用的是什么框架，都会包含例如 <code>api/utils/components</code> 等通用的结构。在此之上，再添加其他目录结构。</p><p>对于 <code>components</code>，我倾向于分为 <code>components</code> 和 <code>biz-components</code>，前者表示通用组件（与业务无关），后者表示业务共享组件，主要用于复用业务逻辑。</p><p>除了基础结构，还可以添加 <code>lib</code> 目录，用于一些自己沉淀的无关业务的相关库，其作用和 <code>utils</code> 类似，只不过代码量比 <code>utils</code> 要大一些， 通常是一整块逻辑。<code>utils</code> 适合放一些小函数（代码不超过 30 行）。</p><p>另外的一些规范，可根据具体的框架和工具链进行调整。例如基于 <a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a> 工具链的开源模板 <a href="https://github.com/antfu/Vitesse" target="_blank" rel="noreferrer">Vitesse</a>。</p><p>其实具体的目录名称倒并不是特别的重要，重要的是，要有这些规范，且要根据项目，适当的增加规范。这样，写或者看代码的人，才知道对应的代码，放什么位置。</p><h3 id="代码规范" tabindex="-1">代码规范 <a class="header-anchor" href="#代码规范" aria-label="Permalink to &quot;代码规范&quot;">​</a></h3><p>个人认为，能避免错误的代码风格约束一定要有，至于其他的约束，最好配合代码格式化程序，例如 <a href="https://github.com/Standard/ESLint-config-Standard" target="_blank" rel="noreferrer">ESLint-Standard</a> + <a href="https://github.com/Prettier/ESLint-config-Prettier" target="_blank" rel="noreferrer">ESLint-Prettier</a></p><p>这一块，主要目的有两个：</p><ol><li>避免低级错误，在错误出现之前，就发现错误</li><li>格式化之后的代码，更好看</li></ol><h3 id="前后端之间的规范" tabindex="-1">前后端之间的规范 <a class="header-anchor" href="#前后端之间的规范" aria-label="Permalink to &quot;前后端之间的规范&quot;">​</a></h3><p>这一块并不好定制，因为业务时常再变，有时候，甚至要直接调用第三方的服务，并不直接对接我们自己的后端。</p><p>这个时候，建议利用 <code>axios</code> 的 <code>interceptors</code>，统一一下，相关的响应参数。</p><p>对于这一块规范，主要需要明确的是怎么处理错误码，以及错误信息。</p><h2 id="项目编译" tabindex="-1">项目编译 <a class="header-anchor" href="#项目编译" aria-label="Permalink to &quot;项目编译&quot;">​</a></h2><p>这两年，编译工具领域可谓是百花齐放，<a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a>，<a href="https://ESBuild.github.io/" target="_blank" rel="noreferrer">ESBuild</a>, <a href="https://SWC.rs/" target="_blank" rel="noreferrer">SWC</a>, <a href="https://github.com/rome/tools" target="_blank" rel="noreferrer">rome</a> 这些工具一起冒了出来。 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 也更新到 5.x，一堆破坏性的变更。总算是加上了一堆默认配置，可以开箱即用（但是感觉很鸡肋）。 简单介绍一下，这些工具</p><ul><li><a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a>，一个新起之秀，基于 <a href="https://ESBuild.github.io/" target="_blank" rel="noreferrer">ESBuild</a> + <a href="https://rollupjs.org/" target="_blank" rel="noreferrer">Rollup</a> 的编译工具</li><li><a href="https://ESBuild.github.io/" target="_blank" rel="noreferrer">ESBuild</a>，一个基于 Golang 的 <code>js/ts</code> 编译器，功能与 <code>Babel/Rollup</code> 相同</li><li><a href="https://SWC.rs/" target="_blank" rel="noreferrer">SWC</a>，一个基于 Rust 的 <code>js/ts</code> 编译器，功能与 <code>Babel/Rollup</code> 相同</li><li><a href="https://github.com/rome/tools" target="_blank" rel="noreferrer">rome</a>，一个新的前端工程工具链，目标是集成所有前端用到的工具，可以理解成，集成 <code>Webpack/ESLint/Prettier</code> 等这些工具的功能于一体，目前正在用 <code>Rust</code> 重写（个人不是特别看好）</li></ul><p>在这些工具出来之前，有一个开玩笑的职称叫 <strong>Webpack 配置工程师</strong>，可见 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 的配置还是很复杂的。</p><p>在此，讲讲我与 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 5.x 的故事，在 <a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a> 刚出来的时候，<a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 也更新到了 5.x，当时公司的项目都还是用的 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 4.x。 我的一个业余目标，就是想统一一下公司的打包工具，公司之前的项目，都是一个项目一个 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 配置，就想写一个库支持打包所有的项目，就当练手。借此机会，研究了一下 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 5.x 的并写了一个 <code>xxx-compile</code>（脱敏处理一下） 的内部工具，开箱支持 <code>TS/Vue/React</code>，以及热更新。</p><p>说着也巧，正是在我差不多写完这个库之后，<a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a> 1.0 出来了！之后，开始接触 <a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a>，真香！今年 10 月左右的时候，换了一个项目组，接手了几个新项目， 看到是新项目，接手的第一件事情，就是把项目从 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 切换到 <a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a>。真香！</p><p>从我的经历来看，<a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a> 的配置相比 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 要简单很多。</p><p>但即使是这样，我也更倾向于使用类似 <a href="https://parceljs.org/" target="_blank" rel="noreferrer">Parcel</a> 这样的一键打包工具。为什么没选 <a href="https://parceljs.org/" target="_blank" rel="noreferrer">Parcel</a> 呢？因为定制天花板不是特别高。</p><p>基于此，我更倾向于，公司基于 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 或者 <a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a> 这样的工具，自己封装一个编译工具，自己根据规范抽象一套配置。 封装的编译工具也能根据规范去实现对应的功能，这样就几乎不需要配置项。</p><p>为什么要抽象一套配置，而不是基于已有的 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 配置或者 <a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a> 配置。支持抽象一套配置的好处有两点：</p><ol><li>因为是根据规范抽象的配置，所以配置应当非常简单，最好是不需要配置</li><li>将来如果要更换编译工具，例如从 <a href="https://Webpack.js.org/" target="_blank" rel="noreferrer">Webpack</a> 切换到 <a href="https://Vitejs.dev" target="_blank" rel="noreferrer">Vite</a>，项目不需要做大的更新，只需更新一下封装的编译工具即可</li></ol><h2 id="持续集成" tabindex="-1">持续集成 <a class="header-anchor" href="#持续集成" aria-label="Permalink to &quot;持续集成&quot;">​</a></h2><p>一个项目一定要有一个自动化相关的辅助系统，例如 <code>Github Actions</code></p><p>必要的相关集成：</p><ol><li>自动化测试</li><li>测试环境自动部署</li><li>发布控制</li><li>回滚控制</li></ol><p>可选的集成</p><ol><li>金丝雀发布</li></ol><p>虽然上面说的是必要的，但其实也可以都没有。毕竟前端的发布，都是一些静态资源，并没有后端那么多需要注意的点。</p><p>测试代码也可以直接在本地跑一遍。如果能集成在一起，当然是最好的。</p><p>关于这一块，之后整理一个基于 Docker 搭建的一系列内网服务，再仔细记录一下。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>最后记录一下，目前自己的最佳实践吧，基于 <a href="https://github.com/antfu/Vitesse" target="_blank" rel="noreferrer">Vitesse</a> 改造的模板：<a href="https://github.com/0x-jerry/project-v" target="_blank" rel="noreferrer">project-v</a></p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[对内容与技术的思考]]></title>
            <link>https://blog.0x-jerry.icu/posts/tech-and-content</link>
            <guid>https://blog.0x-jerry.icu/posts/tech-and-content</guid>
            <pubDate>Tue, 30 Nov 2021 17:58:48 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>对内容与技术的思考</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_tech-and-content.md.BO3wMr_M.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-12-01T01:58:48.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->对内容与技术的思考<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>对于稍微有点洁癖的技术人来说，总是想不断的改善现有的 Code、UI/UX，却忽略了更具有价值的东西 --- 内容。</p><p>在大学的时候，就开始捣腾博客相关的东西。最开始，没什么技术，直接一个 html 放到 Github，博客也就完成了。</p><p>后来看到其他博客，特别漂亮，精美，功能也很多。也就接触到了 <code>Hexo</code> 等博客系统。</p><p>刚接触 <code>Hexo</code> 的时候，还在好好的写文章，可能是因为当时比较菜，不会写主题吧。</p><p>之后，开始研究 <code>Hexo</code> 主题，就一发不可收拾，然后就走上了写博客主题不归之路。</p><h2 id="主题不归路" tabindex="-1">主题不归路 <a class="header-anchor" href="#主题不归路" aria-label="Permalink to &quot;主题不归路&quot;">​</a></h2><p><a href="https://github.com/0x-jerry/hexo-theme-simple" target="_blank" rel="noreferrer">hexo-simple-theme</a>，这个主题，目前已经归档，上一次提交日期还是 <code>2020-08-08</code>。</p><p>在写这个主题的期间，博客的内容，基本都没有怎么更新，每次打开自己的博客，第一反应基本都是，这个地方有个 bug！那个地方的样式不太对！移动端的支持好像不太行！还却缺少一个音乐播放功能呀！</p><p>然后就屁颠屁颠的跑去修 bug，或者添加新的功能了，完完全全的没有心思写文章。</p><h2 id="hexo-vscode-插件" tabindex="-1">Hexo vscode 插件 <a class="header-anchor" href="#hexo-vscode-插件" aria-label="Permalink to &quot;Hexo vscode 插件&quot;">​</a></h2><p>在写主题的期间，偶尔也会写写博客，主要工具也就是 <code>vscode</code>，为了方便些博文，又挖了另外一个坑。</p><p><a href="https://github.com/0x-jerry/vscode-hexo-utils" target="_blank" rel="noreferrer">vscode-hexo-utils</a>，一个 <code>vscode</code> 插件，主要是方便查看/撰写 以 <code>Hexo</code> 为基础的文章。</p><p>自从写了这个插件之后，每次打开 <code>hexo</code> 项目，正准备写一下文章的时候，都会先测试一下 <code>vscode-hexo-utils</code> 这个插件， 然后就走上了和写主题一样的不归路，这个地方有个 bug！这个功能还不完善！总是会跳出一些问题，让我放下写文章的想法，转而 去码代码。</p><h2 id="后知后觉" tabindex="-1">后知后觉 <a class="header-anchor" href="#后知后觉" aria-label="Permalink to &quot;后知后觉&quot;">​</a></h2><p>虽然，写代码的过程是幸福的，完成项目之后的成就感也是不可替代的。</p><p>但是，码代码之后的产物，却成为了一个空壳，并没有什么太大的用处。</p><p>如果仅仅是为了打发时间，让自己的业余生活充实起来，这样也挺好的。</p><p>现在，回头看过去的两年，实质性的输出却是比较少。同理，有时候在做一件事情的时候，找工具却喧宾夺主了，占据了主要的时间， 导致实际想做的事情后置了。</p><p>虽然这个事实早些时候就已经发现，但当具体执行的时候，却还是会陷入这个陷阱。</p><p>遂，记录于此，铭记于心。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[设计一个像 hexo 的博客系统(4)]]></title>
            <link>https://blog.0x-jerry.icu/posts/design-blog-system-4</link>
            <guid>https://blog.0x-jerry.icu/posts/design-blog-system-4</guid>
            <pubDate>Mon, 25 Oct 2021 23:43:57 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>设计一个像 hexo 的博客系统(4)</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_design-blog-system-4.md.CSzOZHhh.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-10-26T07:43:57.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->设计一个像 hexo 的博客系统(4)<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>接 <a href="./design-blog-system-3">前篇</a>，距离上一次更新，差不多快一个月了，咕咕咕 😃。</p><p>现在这个博客，也就是建立在 <a href="https://github.com/0x-jerry/vite-plugin-blog" target="_blank" rel="noreferrer">vite-plugin-blog</a> 这个插件之上的。也就是前篇提到的 <code>v-blog</code>。粗略的尝试了一下之前的想法。</p><h2 id="vite-plugin-blog" tabindex="-1">Vite Plugin Blog <a class="header-anchor" href="#vite-plugin-blog" aria-label="Permalink to &quot;Vite Plugin Blog&quot;">​</a></h2><p>这个库，主要是利用 <a href="https://github.com/markedjs/marked" target="_blank" rel="noreferrer">marked</a> 把 <code>.md</code> 转换成 <code>.vue</code> 文件并保存在硬盘上。</p><p>一点点优点：</p><ol><li>建立在 vite 之上，所以还是比较快的</li><li>可利用 vite 插件</li><li>写主题更加方便</li><li>支持在 <code>markdown</code> 中直接用 <code>vue</code> 组件</li></ol><p>结合 <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">vite</a> 插件系统，实现了 <a href="https://hexo.io/docs/front-matter#Settings-amp-Their-Default-Values" target="_blank" rel="noreferrer">Hexo 的 layout</a> 功能。</p><p>结合 <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">vite</a> 的 <a href="https://vitejs.dev/guide/features.html#glob-import" target="_blank" rel="noreferrer">glob-import</a> 功能，可把 <code>markdown</code> 当做排版工具来使用，例如，<a href="https://blog.0x-jerry.icu/timeline" target="_blank" rel="noreferrer">timeline</a> 这个页面，就是把 <code>markdown</code> 当成排版工具，生成出来的。</p><p>再结合 <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">vite</a> 的 <a href="https://github.com/antfu/unplugin-auto-import" target="_blank" rel="noreferrer">auto-import</a> 插件，可实现在 <code>markdown</code> 中直接使用 <code>vue</code> 组件。</p><p>例如：</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">v-count</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> /&gt;</span></span></code></pre></div><p>展示的效果如下：</p><div class="count" data-v-3c416986=""><h3 data-v-3c416986="">count 组件</h3><div data-v-3c416986=""> count: 0 <button class="btn" data-v-3c416986="">+</button><button class="btn" data-v-3c416986="">-</button></div></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>现在差不多能用了，本来还想搞搞主题相关的东西，但是并没有太多的精力。先就这样吧。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[尝试设计一个高度复用的系统]]></title>
            <link>https://blog.0x-jerry.icu/posts/design-reuse-system</link>
            <guid>https://blog.0x-jerry.icu/posts/design-reuse-system</guid>
            <pubDate>Tue, 28 Sep 2021 03:10:46 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>尝试设计一个高度复用的系统</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_design-reuse-system.md.DfmocIhn.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-09-28T11:10:46.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->尝试设计一个高度复用的系统<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>哎，接手公司的项目接的有点烦了，唠嗑两句，随便看看就行啦。</p><p>目前在公司负责一个组合项目，有点像个是大杂烩，把各种各样的功能从其它团队那里直接拿过来用。</p><p>做 <a href="https://www.wikiwand.com/en/Software_as_a_service" target="_blank" rel="noreferrer">SaaS</a> 服务的公司，大概都会遇到这个问题吧。为了节省开发成本，就想直接从其它团队那里，把一个功能直接拿过来，稍稍兼容一下，然后直接上线。</p><p>这合理吗？这当然合理的不得了。</p><p>无容置疑，这是一个非常合理的想法，但是呢，在执行的过程中，没有统一的框架来协调每个模块之间的工作方式，这就像硬是要把两个脚的插头插到三个孔的插板上。</p><p>你说插不上去吧，使点劲也不是不能插上去。</p><p>吐槽吐的差不多了，怎么解决呢？</p><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><p>要解决问题，首先肯定是找找问题是啥。<strong>复用</strong> 的想法肯定是好，那么问题是什么呢？</p><p>讲讲我遇到的问题吧。</p><p>我遇到的最主要的问题就是，对接的过程中没有统一的规范。每个项目拿过来之后，都需要单独出一套对接方案。我们还只是第一个接的，后面也许还会有第二个，第三个（如果能坚持下去话，但我觉得不太可能）。</p><p>想到后面对接的人还要经历一遍我们这样的痛苦，光是想想，我就想替他们流两滴眼泪。</p><h2 id="怎么解决问题" tabindex="-1">怎么解决问题 <a class="header-anchor" href="#怎么解决问题" aria-label="Permalink to &quot;怎么解决问题&quot;">​</a></h2><p>上面提到了问题是没有规范。具体点是什么呢？是哪些对接的点需要规范呢？</p><p>在回答这个问题之前，先简单介绍一下我们的对接方式。</p><h3 id="组合方式" tabindex="-1">组合方式 <a class="header-anchor" href="#组合方式" aria-label="Permalink to &quot;组合方式&quot;">​</a></h3><p>我们多个产品，例如 A、B、C 三个产品，每个产品呢，都提供了 X、Y、Z 三个功能。之前的做法就是三个团队，维护三套代码，虽然功能相似，但是因为服务的平台不一样，所以还是有一点点的差别， 例如一个是服务于淘宝的，另外一个是服务于拼多多的。接口参数啥的肯定都是不一样的。</p><p>现在呢，我们要做一个 D 产品，这个产品呢，是服务于另外一个平台的，例如抖音。但是这个产品提供的功能呢，和 X、Y、Z 差不多。</p><p>所以，就有之前 <strong>复用</strong> 的想法了。想法没问题，但是做法呢，感觉有点蠢。</p><p>现在的做法，是以现成的产品 A 作为参考，提取其中的 X、Y、Z 功能，单独独立出来，给 D 这个新产品用。</p><h3 id="哪些点需要规范" tabindex="-1">哪些点需要规范 <a class="header-anchor" href="#哪些点需要规范" aria-label="Permalink to &quot;哪些点需要规范&quot;">​</a></h3><p>理想是丰满的，现实是骨感的。就上面的做法，我认为就有很大的问题，本来 A 平台就是特定的，以 A 平台为标准提取出来的组件，太具个性化了。如果不磨平个性化的菱角。势必是没办法复用的。</p><p>实现也证实了这一点。现在就回答一下上面的问题，我们需要哪些对接的困难点呢？</p><p>我们遇到的第一个问题，就是技术栈不统一。这个倒也是可以解决，<a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">qiankun</a> 或者 <code>iframe</code> 都是可行方案。最终权衡下来，我们选择了 <code>iframe</code>。</p><p>然后是第二个问题，授权，因为是 iframe，所以需要把授权信息传递进去。但是每个提取出来功能的授权方式不一样。 例如 X 功能的授权方式是通过后端跳转，然后把授权信息放在 <code>cookie</code> 里， Y 功能的授权却又是前端直接把 <code>token</code> 通过 <code>query</code> 的方式，传递到 <code>iframe</code> 过去。</p><p>然后是第三个问题，细节，因为 A 产品和 D 产品，不是服务于同一个平台，所以，在 D 产品中，需要修改一些特殊的细节点，例如某些文案以及某些表单选项等。</p><p>先记一记这三个问题，那么这些能通过规范来解决吗？</p><h2 id="尝试设计一个方案" tabindex="-1">尝试设计一个方案 <a class="header-anchor" href="#尝试设计一个方案" aria-label="Permalink to &quot;尝试设计一个方案&quot;">​</a></h2><p>问题有了，怎么解决呢？</p><p>针对第一个问题，统一技术栈。理由到也是很充分，因为这并不是一个简单的功能，需要涉及到一些细节的修改，如果技术栈不统一，那么修改起来，成本维护就相对比较高。 对应的，针对开发规范，也需要对应的定制几套规范。</p><p>第二个问题，授权，这个通过规范，即可解决，规定一套授权方式，都按这个实现即可解决。</p><p>第三个问题，细节的修改，这个从产品的角度来讲，是肯定存在的，而且无法避免的。那么怎么解决呢？ 这个问题也是目前遇到的最棘手的问题。</p><p>目前针对第三个问题，并没有太好的方案，能想到大概是组件颗粒度更细一点，通过细化组件，让这种修改影响的范围尽可能的减少。</p><h2 id="其它问题" tabindex="-1">其它问题 <a class="header-anchor" href="#其它问题" aria-label="Permalink to &quot;其它问题&quot;">​</a></h2><p>除了上述记录的三个问题，还有一些后端的问题。</p><p>目前有一个问题，就是数据不一致，D 平台和 A 平台的数据源提供的数据格式不一致。在我们接手 X、Y、Z 功能的同时，还需要处理一遍数据。真是心疼后端一秒钟。</p><p>针对这个问题，可以在设计的时候，设计一个标准的数据层，然后通过适配器模式，把 D 平台和 A 平台的数据适配成标准数据格式。</p><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>大概就是这些吧，貌似也没有一个完整的方案。算了，懒得改标题了。针对遇到的第三个问题「功能的细节需要特殊化」这个问题上，应该还能有更好的方案。大概吧 😃</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[设计一个像 hexo 的博客系统(3)]]></title>
            <link>https://blog.0x-jerry.icu/posts/design-blog-system-3</link>
            <guid>https://blog.0x-jerry.icu/posts/design-blog-system-3</guid>
            <pubDate>Mon, 27 Sep 2021 19:11:43 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>设计一个像 hexo 的博客系统(3)</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_design-blog-system-3.md.DoB91O3l.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-09-28T03:11:43.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->设计一个像 hexo 的博客系统(3)<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>接 <a href="./design-blog-system-2">前篇</a>，在利用 <code>Vite</code> 系统的虚拟文件时，碰到一些小问题。所以抛弃虚拟文件， 采用直接生成文件的方式，这样肯定在开发的时候，肯定会慢一点点，利用缓存等技术，影响倒也还能接受。</p><h2 id="为什么抛弃虚拟文件" tabindex="-1">为什么抛弃虚拟文件 <a class="header-anchor" href="#为什么抛弃虚拟文件" aria-label="Permalink to &quot;为什么抛弃虚拟文件&quot;">​</a></h2><p>要回答这个问题，先看看 <code>v-blog</code> 目的，<code>v-blog</code> 的目的就是为了利用更加现代化的系统来开发博客系统。</p><p>在开发的时候，尝试去实现一个 <code>layout</code> 的功能，使用方式 <a href="https://hexo.io/docs/front-matter#Settings-amp-Their-Default-Values" target="_blank" rel="noreferrer">Hexo:layout</a>。</p><p>初步尝试，是利用 <a href="https://github.com/hannoeru/vite-plugin-pages" target="_blank" rel="noreferrer">vite-plugin-pages</a> 以及 <a href="https://github.com/JohnCampionJr/vite-plugin-vue-layouts" target="_blank" rel="noreferrer">vite-plugin-vue-layout</a> 这两个插件，但是 <a href="https://github.com/hannoeru/vite-plugin-pages" target="_blank" rel="noreferrer">vite-plugin-pages</a> 处理 <code>route</code> 自定义块 是用 <code>fs</code> 读取文件的方式，也就是说，无法利用虚拟文件的方式，去生成 <code>route</code> 自定义块。</p><p>考虑到之后，可能还有类似使用 <code>fs</code> 读取文件的插件。因此，放弃使用虚拟文件的方式，采用直接生成文件。</p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><p>现在已经比较可以确定，是可以实现的。</p><p>目前的方案：监听特殊的文件夹，例如 <code>posts</code> 文件夹，借鉴 <code>vite-plugin-md</code> 的转换方式，把 <code>md</code> 文件，动态转换成 <code>vue</code> 文件。</p><p>未完待续...</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[设计一个像 hexo 的博客系统(2)]]></title>
            <link>https://blog.0x-jerry.icu/posts/design-blog-system-2</link>
            <guid>https://blog.0x-jerry.icu/posts/design-blog-system-2</guid>
            <pubDate>Sun, 26 Sep 2021 18:16:47 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>设计一个像 hexo 的博客系统(2)</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_design-blog-system-2.md.DZ3ivYwq.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-09-27T02:16:47.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->设计一个像 hexo 的博客系统(2)<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p><a href="./design-blog-system">前篇</a> 中的想法，貌似有点行不通，其中一个难点则是怎么去动态的传输 <code>Markdown</code> 文件的数据。</p><p>为什么要动态加载 <code>Markdown</code> 文件呢？<a href="https://github.com/antfu/vite-plugin-md" target="_blank" rel="noreferrer">vite-plugin-md</a> 这个插件，可以自定义 <code>Markdown</code> 渲染，以及包裹一层 <code>Vue</code> 组件，一个比较好用的场景， 则是通过修改 <code>Markdown</code> 渲染的标签，改成自定义标签，例如 <code>a</code> 标签修改成 <code>v-link</code> 组件，这样，<code>v-link</code> 组件的实现，则可以替换原有 <code>a</code> 的功能， 实现一些差异化的功能，例如外链和页内链接做不同的显示。我知道这个通过 <code>markdown-it</code> 插件也可以做到，但是 <code>markdown-it</code> 插件，并不能混合 <code>js</code> 代码。</p><p>例如想实现图片的一些交互，如果用 <code>markdown-it</code> 插件来实现，则需要分离这部分 <code>js</code> 代码。如果通过自定义标签，则可以更加方便的处理这个功能。</p><h2 id="尝试利用-vite-plugin-ssr" tabindex="-1">尝试利用 Vite-Plugin-SSR <a class="header-anchor" href="#尝试利用-vite-plugin-ssr" aria-label="Permalink to &quot;尝试利用 Vite-Plugin-SSR&quot;">​</a></h2><p>尝试用 <a href="https://github.com/brillout/vite-plugin-ssr/tree/master/examples/vue-full" target="_blank" rel="noreferrer">vite-plugin-ssr:pre-render</a> 这个例子来验证 <code>v-blog</code> 的想法，这能完美的解决部分问题，分页显示，标签页等，但也遇到一个难点。</p><p>例如，通过 <code>Markdown</code> 写一篇文章，一般会用 <code>&lt;!-- more --&gt;</code> 这样的注释来分割摘要内容，然后在文章列表渲染出来，那么怎么解决摘要的渲染呢？</p><h3 id="基础解决方案" tabindex="-1">基础解决方案 <a class="header-anchor" href="#基础解决方案" aria-label="Permalink to &quot;基础解决方案&quot;">​</a></h3><p>最开始的想法是，在渲染之前，通过 <code>markdown-it</code> 渲染，然后注入到当前页面的 状态（state） 里，但又需要另外一个问题，如果摘要里面，有自定义组件， 或者引入了图片资源，怎么办呢？</p><p>图片的链接问题，还是可以解决的，通过计算图片的相对地址以及用 <code>Vite</code> 计算哈希值的方式，替换图片链接即可。</p><p>比较困难的是，自定义组件怎么办呢？这个貌似必须要经过 <code>Vite</code> 编译才行。</p><p>真的是太难了 QAQ。</p><h2 id="下一个方案" tabindex="-1">下一个方案 <a class="header-anchor" href="#下一个方案" aria-label="Permalink to &quot;下一个方案&quot;">​</a></h2><p>目前看来，最困难的问题，也就是怎么通过 <code>Vite</code> 去渲染摘要内容。主要难点是摘要内容不是一个文件，是一个在内存中提取出来的 <code>Markdown</code> 文本。</p><p>如果要通过 <code>Vite</code> 编译过程，这需要一个载体，也许是 <code>Vite</code> 的虚拟文件，也许是写一个脚本，直接生成对应的文件。</p><p>两种方案原理一样，也就体验上有一点点不同。找个时间，验证一下这个方案是否可行。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[设计一个像 hexo 的博客系统(1)]]></title>
            <link>https://blog.0x-jerry.icu/posts/design-blog-system</link>
            <guid>https://blog.0x-jerry.icu/posts/design-blog-system</guid>
            <pubDate>Sat, 25 Sep 2021 23:37:40 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>设计一个像 hexo 的博客系统(1)</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_design-blog-system.md.DW_MDupZ.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-09-26T07:37:40.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->设计一个像 hexo 的博客系统(1)<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>本文尝试设计一个博客框架，以解决在使用 <a href="https://hexo.io/" target="_blank" rel="noreferrer">Hexo</a> 时不痛快的点。</p><h2 id="为什么造轮子" tabindex="-1">为什么造轮子 <a class="header-anchor" href="#为什么造轮子" aria-label="Permalink to &quot;为什么造轮子&quot;">​</a></h2><p><a href="https://hexo.io/" target="_blank" rel="noreferrer">Hexo</a> 是一个偏向传统的博客系统，通过模板系统，把每一篇文章渲染出来。主题，插件都非常多。也非常优秀。</p><p>既然 <a href="https://hexo.io/" target="_blank" rel="noreferrer">Hexo</a> 有这么多优点，为什么还要造轮子呢？</p><p>几年前也写过 <a href="https://hexo.io/" target="_blank" rel="noreferrer">Hexo</a> 主题 <a href="https://github.com/0x-jerry/hexo-theme-simple" target="_blank" rel="noreferrer">hexo-theme-simple</a>，后来也不维护了。原因比较简单，我更加喜欢用 <code>Vue</code> 来写前端，用 <code>JQuery</code> 配合模板来写，总是写的碍手碍脚的。</p><p>前不久，尝试用 <a href="https://vitejs.dev" target="_blank" rel="noreferrer">vite</a> 配合 <a href="https://github.com/antfu/vite-ssg" target="_blank" rel="noreferrer">vite-ssg</a>，重构了一次博客，效果还不错。</p><p>用起来舒服了很多，但是也遇到一些问题，例如 <strong>分页</strong> 就没有很好的解决方案。</p><p>先尝试以前后端分离 + <code>SSG</code> 的方式来设计一套博客系统。</p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>为了方便描述，暂定名称 <code>v-blog</code>。</p><p><code>v-blog</code> 的诞生时为了让静态博客能利用更加现代化的系统来开发，如 <a href="https://vitejs.dev" target="_blank" rel="noreferrer">vite</a>。</p><h2 id="v-blog-系统设计" tabindex="-1"><code>v-blog</code> 系统设计 <a class="header-anchor" href="#v-blog-系统设计" aria-label="Permalink to &quot;`v-blog` 系统设计&quot;">​</a></h2><p>初步想法，采用 <strong>前后端分离</strong> 的方式。</p><p>一个 <code>main-server</code> 服务器，用于处理 <code>markdown</code> 文件，以及分页等信息。</p><p>一个 <code>render-server</code> 服务器，用于服务端渲染/生成，开发时，用作服务端渲染，部署时，用作服务端生成。</p><h3 id="main-server-设计" tabindex="-1">main-server 设计 <a class="header-anchor" href="#main-server-设计" aria-label="Permalink to &quot;main-server 设计&quot;">​</a></h3><p><code>main-server</code> 仅提供 API 供 <code>render-server</code> 消费。可采用 <code>koa</code> 的洋葱模式，提供插件开发。</p><p>核心提供 <code>markdown</code> 文件处理，分页信息，标签信息，以及默认渲染。</p><h3 id="render-server-设计" tabindex="-1">render-server 设计 <a class="header-anchor" href="#render-server-设计" aria-label="Permalink to &quot;render-server 设计&quot;">​</a></h3><p><code>render-server</code> 由 <a href="https://vitejs.dev" target="_blank" rel="noreferrer">vite</a> 驱动，主要提供一些插件，以提供更好的开发体验。</p><h2 id="实践" tabindex="-1">实践 <a class="header-anchor" href="#实践" aria-label="Permalink to &quot;实践&quot;">​</a></h2><p>先记录一下这个想法，接下来尝试做一个验证，追踪地址： <a href="https://github.com/0x-jerry/v-blog-system" target="_blank" rel="noreferrer">v-blog-system</a></p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[VSCode 如何渲染代码]]></title>
            <link>https://blog.0x-jerry.icu/posts/render-line</link>
            <guid>https://blog.0x-jerry.icu/posts/render-line</guid>
            <pubDate>Wed, 08 Sep 2021 23:13:46 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>VSCode 如何渲染代码</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_render-line.md.DakZ4pho.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-09-09T07:13:46.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->VSCode 如何渲染代码<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>本文主要探索， VSCode 是如何把 1w+ 行代码呈现出来，且做到滚动不卡顿的。</p><p>前不久，一同事与我探讨怎么解决渲染大列表的问题。第一个就想到虚拟列表，但是效果不是特别理想。随后想到 VSCode 在滚动大文件（约 1w 多行代码）的时候，很丝滑。随后便研究了一下。特此记录。</p><h2 id="vscode-的效果" tabindex="-1">VSCode 的效果 <a class="header-anchor" href="#vscode-的效果" aria-label="Permalink to &quot;VSCode 的效果&quot;">​</a></h2><p>用 VSCode 随便打开一个 1w+ 的文件，最初加载的时间，会稍微多一点点。但是之后的滚动，却能做到没有丝毫的白屏。无论是滚动还是拖动，效果都非常的丝滑，简直就像是吃过德芙一样。</p><h2 id="猜想以及尝试" tabindex="-1">猜想以及尝试 <a class="header-anchor" href="#猜想以及尝试" aria-label="Permalink to &quot;猜想以及尝试&quot;">​</a></h2><p>看到这个效果，的第一想法：VSCode 肯定用了虚拟列表，不然 1w+ 的 dom 节点，仅是渲染，都会让页面卡的不行。</p><p>为了验证这个想法，直接找了一个几个 <code>star</code> 较高的虚拟列表库，尝试用了用。例如 <a href="https://bvaughn.github.io/react-virtualized/#/components/List" target="_blank" rel="noreferrer">react-virtualized</a> 、<a href="https://tangbc.github.io/vue-virtual-scroll-list/#/keep-state" target="_blank" rel="noreferrer">vue-virtual-scroll-list</a>、<a href="https://rintoj.github.io/ngx-virtual-scroller/demo" target="_blank" rel="noreferrer">ngx-virtual-scroller</a>。</p><p>这三个都很优秀，但是在快速滚动的时候，都还是会出现一点点白屏的间隙。</p><p>效果都不是特别理想。看来 VSCode 的做法估计还有点不一样。只有啃啃 VSCode 的源代码才接揭晓答案了。</p><h2 id="解密-vscode-的做法" tabindex="-1">解密 VSCode 的做法 <a class="header-anchor" href="#解密-vscode-的做法" aria-label="Permalink to &quot;解密 VSCode 的做法&quot;">​</a></h2><p>打开 VSCode 的调试工具，看看具体的渲染效果，如下图：</p><figure><img src="/assets/vscode-render-lines.Dsiqew5i.png" alt="vscode render lines" tabindex="0" loading="lazy"><figcaption>vscode render lines</figcaption></figure><p>可以看出，的确是利用虚拟列表的技术，仅渲染了可视区域的代码。且是利用 <code>css</code> 的 <code>top</code> 值来确定每一行代码的相对坐标。</p><p><strong>那么它是怎么做到，快速滚动不白屏的呢？</strong></p><p>带着这个疑问，先试试自己去实现一个虚拟列表，差不多也是依葫芦画瓢，效果不是特别理想。快速滚动的时候也会出现白屏。</p><p>粗略分析一下，猜测原因是出在监听 <code>scroll</code> 事件上。因为 <code>scroll</code> 事件是在滚动时触发的。</p><blockquote><p>The <strong>scroll</strong> event fires when the document view has been scrolled. --- <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event" target="_blank" rel="noreferrer">MDN</a></p></blockquote><p>因此，为了验证这个猜想，把 <code>scroll</code> 事件，换成 <code>wheel</code> 事件。注：这样的做法并不严谨，但是为了验证猜想足以。</p><p>换成 <code>wheel</code> 之后，结果稍稍好了一点点，但是快速滚动依旧是有白屏。看来还是不对。</p><p>这下就越来越对 VSCode 的做法感兴趣了，那么，是时候展现 VSCode 的技术了。</p><p>经过不断的啃代码，总算找到渲染每一行代码的源代码了。 <a href="https://github.com/microsoft/vscode/blob/aa93eefe550167de3ca29aaa3d06f721a47594a3/src/vs/editor/browser/viewParts/lines/viewLines.ts#L559-L621" target="_blank" rel="noreferrer">source: viewLines.ts</a></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">	public</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> renderText</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">: </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">ViewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">: </span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">void</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line highlighted"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		// (1) render lines - ensures lines are in the DOM</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_visibleLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">renderLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_lastRenderedData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setCurrentVisibleRange</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">visibleRange</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">domNode</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setWidth</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewLayout</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getScrollWidth</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">());</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">domNode</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setHeight</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">Math</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">min</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewLayout</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getScrollHeight</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(),</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 1000000</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		// (2) compute horizontal scroll position:</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		//  - this must happen after the lines are in the DOM since it might need a line that rendered just now</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		//  - it might change `scrollWidth` and `scrollLeft`</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">		if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">			const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">			// Check that we have the line that contains the horizontal range in the viewport</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">			if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">startLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;=</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">minLineNumber</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> &amp;&amp;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">maxLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;=</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">endLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">				this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> null</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">				// allow `visibleRangesForRange2` to work</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">				this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">onDidRender</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">				// compute new scroll position</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">				const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">newScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">_computeScrollLeftToReveal</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">				if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">newScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">					if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">!</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_isViewportWrapping</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">						// ensure `scrollWidth` is large enough</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">						this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">_ensureMaxLineWidth</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">newScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">maxHorizontalOffset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">					}</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">					// set `scrollLeft`</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">					this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">model</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setScrollPosition</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">({</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">						scrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">newScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">scrollLeft</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">					},</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> horizontalRevealRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">scrollType</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">				}</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">			}</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		// Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">		if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">!</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">_updateLineWidthsFast</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">())</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">			// Computing the width of some lines would be slow =&gt; delay it</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">			this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_asyncUpdateLineWidths</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">schedule</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">		if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">platform</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">isLinux</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> &amp;&amp;</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> !</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_asyncCheckMonospaceFontAssumptions</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">isScheduled</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">())</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">			const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">rendStartLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_visibleLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getStartLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">			const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">rendEndLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_visibleLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getEndLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">			for</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">let </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">lineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> rendStartLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> lineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;=</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> rendEndLineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> lineNumber</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">++</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">				const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">visibleLine</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_visibleLines</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getVisibleLine</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">lineNumber</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">				if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">visibleLine</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">needsMonospaceFontCheck</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">())</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">					this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_asyncCheckMonospaceFontAssumptions</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">schedule</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">					break</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">				}</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">			}</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">		// (3) handle scrolling</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_linesContent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setLayerHinting</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_canUseLayerHinting</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_linesContent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setContain</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">strict</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">		const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">adjustedScrollTop</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewLayout</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getCurrentScrollTop</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> - </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewportData</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">bigNumbersDelta</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_linesContent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setTop</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">-</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">adjustedScrollTop</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">		this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_linesContent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">setLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">-</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_context</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">viewLayout</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">getCurrentScrollLeft</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">());</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">	}</span></span></code></pre></div><p>从源代码可看出，其做法是确保在 <code>dom</code> 渲染完成之后，再更新滚动条。那么按照这个想法，就需要捕获所有可能的滚动操作，然后在更新滚动值之前，确保 <code>dom</code> 渲染完成。</p><p>从理论上来讲，这样的确能有效的防止白屏。</p><p>光讲理论怎么行呢，还是要试一下才行。尝试用这个方式，写了一个 <a href="https://0x-jerry.github.io/test-vscode-render-lines/" target="_blank" rel="noreferrer">demo: test-vscode-render-lines</a>，仅实现捕获 <code>wheel</code> 事件，效果还不错，无论滚动多快，都没有出现白屏。</p><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>至此，这次探究告一段论。目前仅尝试在固定每一行高度时，去计算出现在可视区域的 <code>dom</code> 元素，这样能在几乎 1 ms 之内完成。那么，问题来了。如果高度不是固定的，是可变的怎么办呢？计算时间会不会增加，如果列表元素太复杂了，渲染时间增加了，会不会出现滚动卡顿的情况？这些都还是需要测试。</p><p>目前看来，这种做法，在列表元素较少且高度固定时，表现比普通的虚拟列表好。除此之外的情况，或许还是普通的虚拟列表更优吧，这个就等之后再去探索了。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[机器学习 ML]]></title>
            <link>https://blog.0x-jerry.icu/posts/machine-learning</link>
            <guid>https://blog.0x-jerry.icu/posts/machine-learning</guid>
            <pubDate>Mon, 09 Aug 2021 23:13:46 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>机器学习 ML</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_machine-learning.md.kkOEOjxr.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-08-10T07:13:46.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->机器学习 ML<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>这是一篇没有高等数学基础的初学者的笔记，除非你仅仅是想了解一下机器学习的概念，否则不建议继续下读去。</p><p>本文主要记录在学习 <a href="https://github.com/microsoft/ML-For-Beginners" target="_blank" rel="noreferrer">ML-For-Beginner</a> 课程中的一些笔记和总结。</p><h2 id="ml-简介" tabindex="-1">ML 简介 <a class="header-anchor" href="#ml-简介" aria-label="Permalink to &quot;ML 简介&quot;">​</a></h2><blockquote><p>机器学习 关注的是使用专门的算法来发现有意义的信息，并从感知的数据中找到隐藏的模式，以佐证理性的决策过程。</p><p>ML is concerned with using specialized algorithms to uncover meaningful information and find hidden patterns from perceived data to corroborate the rational decision-making process.</p></blockquote><h3 id="构建机器学习的过程" tabindex="-1">构建机器学习的过程 <a class="header-anchor" href="#构建机器学习的过程" aria-label="Permalink to &quot;构建机器学习的过程&quot;">​</a></h3><p>通常来讲，机器善于在大量的数据中发现其中隐藏的规则。</p><p>宏观上来讲，可以分为以下几个步骤：</p><ol><li>取决于具体的问题：<strong>简单的程序</strong> 或者 <strong>基于规则的引擎</strong> 无法解决的问题，通常就是机器学习需要解决的问题</li><li>收集以及准备数据：数据的好坏直接决定机器学习的结果</li><li>选择一个训练方法：这一步通常需要专业的知识</li><li>用数据去训练模型：通过各种各样的算法去识别数据中隐藏的模式</li><li>评估训练好的模型：用一些模型未知的数据（测试数据），去检测模型的质量</li><li>调节模型中的参数：不断的调节模型中的参数，以此找出更好的模型</li><li>预测未知数据：让训练好的模型去预测输入的数据</li></ol><h3 id="特征" tabindex="-1">特征 <a class="header-anchor" href="#特征" aria-label="Permalink to &quot;特征&quot;">​</a></h3><p>通常指一个数据集中的每一个属性，详情参考 <a href="https://www.datasciencecentral.com/profiles/blogs/an-introduction-to-variable-and-feature-selection" target="_blank" rel="noreferrer">Introduction to Feature</a>。</p><ol><li>特征选择：特征选择是从已有的特征中，选择一个子集</li><li>特征提取：根据已有特征，创建一个新的特征</li></ol><h3 id="数据可视化" tabindex="-1">数据可视化 <a class="header-anchor" href="#数据可视化" aria-label="Permalink to &quot;数据可视化&quot;">​</a></h3><p>通过代码，可视化的显示数据与数据之间的关系。这可以帮忙我们更好的发现数据之间隐藏的关系。</p><h3 id="分离数据集" tabindex="-1">分离数据集 <a class="header-anchor" href="#分离数据集" aria-label="Permalink to &quot;分离数据集&quot;">​</a></h3><p>把准备的数据集分割成一下几个部分：</p><ul><li>训练数据：占据数据集中的大部分，用于训练模型</li><li>测试数据：占据数据集中的小部分，用户测试训练的效果</li><li>待预测数据：用于让训练好的模型去预测的数据，可以没有，例如预测天气，就不需要这部分数据</li></ul><h3 id="构建模型" tabindex="-1">构建模型 <a class="header-anchor" href="#构建模型" aria-label="Permalink to &quot;构建模型&quot;">​</a></h3><ol><li>选择训练方法</li><li>训练模型</li><li>评估模型 <ol><li>模型拟合</li><li>过拟合/欠拟合</li></ol></li><li>参数调优</li><li>预测</li></ol><h2 id="监督式学习-supervised-learning" tabindex="-1"><a href="https://wikipedia.org/wiki/Supervised_learning" target="_blank" rel="noreferrer">监督式学习 Supervised Learning</a> <a class="header-anchor" href="#监督式学习-supervised-learning" aria-label="Permalink to &quot;[监督式学习 Supervised Learning][supervised-learning]&quot;">​</a></h2><blockquote><p>Supervised learning (SL) is the machine learning task of learning a function that maps an input to an output based on example input-output pairs. ----- <a href="https://wikipedia.org/wiki/Supervised_learning" target="_blank" rel="noreferrer">wiki</a></p><p>监督式学习是基于实例的输入-输出对，来构建一个映射函数。</p></blockquote><p>监督式学习适用于 已经做过标记(labeled) 的数据。</p><p>通过标记的数据，构建一个映射函数。此映射函数可用来预测对应的特征值。</p><p>监督式学习的一些方法：</p><ol><li><a href="https://www.wikiwand.com/en/Linear_regression" target="_blank" rel="noreferrer">线性回归</a></li></ol><p>用一个或者多个变量去表示目标值，常用于预测某个特征的值。 两种常见的线性回归模型</p><ul><li><a href="https://www.wikiwand.com/en/Lasso_(statistics)" target="_blank" rel="noreferrer">Lasso</a></li><li><a href="https://www.wikiwand.com/en/Tikhonov_regularization" target="_blank" rel="noreferrer">Tikhonov</a></li></ul><ol start="2"><li><a href="https://www.wikiwand.com/en/Logistic_regression" target="_blank" rel="noreferrer">逻辑回归</a></li></ol><p>常用于分类，目标特征值需要是已知的有限个数。</p><h2 id="onnx-open-neural-network-exchange" tabindex="-1"><a href="https://www.wikiwand.com/en/Open_Neural_Network_Exchange" target="_blank" rel="noreferrer">ONNX（Open Neural Network Exchange）</a> <a class="header-anchor" href="#onnx-open-neural-network-exchange" aria-label="Permalink to &quot;[ONNX（Open Neural Network Exchange）][onnx]&quot;">​</a></h2><p><code>ONNX</code> 是一种机器学习通用数据模型结构，主要用于不同框架采用相同格式存储模型数据并交互。源码 <a href="https://github.com/onnx/onnx" target="_blank" rel="noreferrer">Github - ONNX</a>。</p><p>这让训练好的模型，可复用于多个不同场景。</p><h2 id="数据处理" tabindex="-1">数据处理 <a class="header-anchor" href="#数据处理" aria-label="Permalink to &quot;数据处理&quot;">​</a></h2><p>在训练之前，需要先对数据进行处理。主要提取以下几点：</p><ol><li>除去用不到的数据。</li><li>除去部分缺失的数据。</li><li>对于监督式学习中的分类学习算法，有时候需要用 <a href="https://imbalanced-learn.org/dev/references/generated/imblearn.over_sampling.SMOTE.html" target="_blank" rel="noreferrer">SMOTE</a> 补充数据，使数据平衡。这样训练出来的模型就不会有偏向性。</li></ol><h2 id="无监督学习-unsupervised-learning" tabindex="-1"><a href="https://www.wikiwand.com/en/Unsupervised_learning" target="_blank" rel="noreferrer">无监督学习 Unsupervised Learning</a> <a class="header-anchor" href="#无监督学习-unsupervised-learning" aria-label="Permalink to &quot;[无监督学习 Unsupervised Learning][unsupervised-learning]&quot;">​</a></h2><blockquote><p>Unsupervised learning is a type of machine learning in which the algorithm is not provided with any pre-assigned labels or scores for the training data. -- <a href="https://www.wikiwand.com/en/Unsupervised_learning" target="_blank" rel="noreferrer">wiki</a></p><p>无监督学习一种用于无标签数据(Data without labels)的机器学习的算法。</p></blockquote><p>根据定义可看出，无监督式学习并不需要数据的标签，因此，无监督学习需要自己发现数据之间隐藏的关系。</p><p><a href="https://www.wikiwand.com/en/Cluster_analysis" target="_blank" rel="noreferrer">聚类 Clustering</a>，无监督学习的一个类别。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>在了解机器学习的过程，发现没有数学基础，好多机器学习的算法，在我眼中，全都是天书，仅仅能从代码的角度，去寻找成就感。</p><p>虽然，这很难，但也不妨碍我站在巨人的肩膀上做事情。</p><p>通过，这个阶段的学习，已经清楚，传统的机器学习，就是通过算法，去构建一个数据集和特征值之间的映射。利用构建好的这个映射关系， 去预测或者归类未知的数据。</p><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://github.com/microsoft/ML-For-Beginners" target="_blank" rel="noreferrer">ML For Beginner</a></li><li><a href="https://www.datasciencecentral.com/profiles/blogs/an-introduction-to-variable-and-feature-selection" target="_blank" rel="noreferrer">introduction To Feature</a></li><li><a href="https://www.wikiwand.com/en/Linear_regression" target="_blank" rel="noreferrer">Linear Regression</a></li><li><a href="https://www.wikiwand.com/en/Lasso_(statistics)" target="_blank" rel="noreferrer">Lasso Regression</a></li><li><a href="https://www.wikiwand.com/en/Tikhonov_regularization" target="_blank" rel="noreferrer">Tikhonov Regression</a></li><li><a href="https://scikit-learn.org/stable/supervised_learning.html" target="_blank" rel="noreferrer">Scikit Supervised Learning</a></li><li><a href="https://wikipedia.org/wiki/Supervised_learning" target="_blank" rel="noreferrer">Supervised Learning</a></li><li><a href="https://www.wikiwand.com/en/Unsupervised_learning" target="_blank" rel="noreferrer">Unsupervised Learning</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[微前端]]></title>
            <link>https://blog.0x-jerry.icu/posts/micro-frontend</link>
            <guid>https://blog.0x-jerry.icu/posts/micro-frontend</guid>
            <pubDate>Mon, 31 May 2021 10:03:01 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>微前端</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_micro-frontend.md.Dd9C_Ty5.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2021-05-31T18:03:01.122Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->微前端<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>本文尝试分享一下「微前端」这个概念，以及目前（2021-06-01）主要的几种实现方案。</p><h2 id="什么是微前端" tabindex="-1">什么是微前端？ <a class="header-anchor" href="#什么是微前端" aria-label="Permalink to &quot;什么是微前端？&quot;">​</a></h2><p>引用一句 <a href="https://micro-frontends.org/" target="_blank" rel="noreferrer">micro-frontends</a> 的一句话</p><blockquote><p>Techniques, strategies and recipes for building <strong>a modern web app</strong> with <strong>multiple teams</strong> that can <strong>ship features independently</strong>.</p></blockquote><p>简单翻译一下，大概意思是：用技术、策略和方法隔离不同 <strong>团队</strong> 开发的 <strong>功能</strong>，并构建 <strong>现代化的 web 应用</strong>。</p><p>经常有听到「微前端框架」这个词，那「微前端」是一门技术？不，微前端并不是一门技术，微前端仅仅是一种手段，通过制定一些标准，合作开发这个项目的团队都遵守这些标准。再通过这些标准整合起来的架构，也就成了「微前端」。</p><h2 id="那么微前端到底解决的是什么问题" tabindex="-1">那么微前端到底解决的是什么问题？ <a class="header-anchor" href="#那么微前端到底解决的是什么问题" aria-label="Permalink to &quot;那么微前端到底解决的是什么问题？&quot;">​</a></h2><p>想想我最初接触微前端，还是第一份正式工作的时候，当时是在一个创业公司，刚刚成立几个月。我进去的时候，公司有两个应用，一个 A 应用，一个 B 应用，分别对应两个域名。现在公司想做整合，把两个应用的功能整合在一起，组合起来，举个栗子。A 应用有两个页面，分别是 A-1，A-2。现在 B 应用，想要 A-1 这个功能，也就是这个页面，而且想要保持同步更新，也就是，只发布一次，就能同时更新 A 应用中的 A-1 和 B 应用中的 A-1。</p><p>当时的想法比较简单，因为公司用的 vue 框架，而 vue 组件可以打包成一个 js 文件。所以，一个简单的做法，就是把 A 应用中所有功能做成组件，然后打包成一个 js 文件，然后在 B 应用中，引用这个 js 文件，取其中的 A-1 组件，这样也就解决了问题。</p><p>其中核心的代码，大概是这样：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// &lt;script src="//xxx.A.js"/&gt;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const </span><span style="--shiki-dark:#666666;--shiki-light:#999999;">{</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> A1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> }</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> window</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">_A</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">export</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> const </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">routes</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> [</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  {</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">    path</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">/a-1</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">    component</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">: </span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">A1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  },</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">]</span></span></code></pre></div><p>从这个栗子中，可以看到，解决的问题也就是：如何在一个应用中引入一个不需要自己维护的能力或者功能。</p><p>进而拓展一下，可以理解成，我简单写一个模板，然后配置其中每个模块的功能，这样，一个应用就完成了。每个模板的功能，都交由不同的团队去维护。如果能实现这样的一个工具，那么就能大大的缩短一款产品的开发成本（想想就开心，做梦真好）。</p><p>在写这片文章的时候，有幸读到 <a href="https://www.yuque.com/kuitos/gky7yw/rhduwc" target="_blank" rel="noreferrer">微前端的核心价值</a>。</p><p>文中用了一整个章节来讨论「微前端」的价值，我简单的总结一下文中的概念，大致是：「微前端」解决的是如何让一个应用存活 3-5 年之后，开发者还能继续为其赋能，就像文章结尾所讲。</p><blockquote><p>那么微前端的使命我认为是：「让天下没有短命的控制台」。</p></blockquote><p>至此，我想，你应该大致对「微前端」有了一个了解。接下来就我们就唠嗑一下怎么解决这些问题。</p><h2 id="微前端怎么解决这些问题的" tabindex="-1">微前端怎么解决这些问题的？ <a class="header-anchor" href="#微前端怎么解决这些问题的" aria-label="Permalink to &quot;微前端怎么解决这些问题的？&quot;">​</a></h2><p>微前端，可看作是「微服务」派生出来的一个概念。也有点像 OOP(Object-Oriented Programing) 中的单一原则（Single Responsibility Principle），一个类、方法只做一件事情。</p><p>讲到一件事情，我们就不得不分析业务，把业务剥离开来，抽成一个一个的服务。然后再通过一些技术手段，来整合不同的服务。</p><p>先简单分享一下我想到的几种方式：</p><ol><li>用 npm package / git submodule 来管理</li><li>用 iframe 加载</li><li>开发 micro frontend 框架</li></ol><h3 id="npm-package-git-submodule" tabindex="-1">npm package / git submodule <a class="header-anchor" href="#npm-package-git-submodule" aria-label="Permalink to &quot;npm package / git submodule&quot;">​</a></h3><p>这种方式，用起来就比较简单，就和用普通的 js 模块一样，除了分离出代码，没有任何其它优势。</p><h3 id="iframe" tabindex="-1">iframe <a class="header-anchor" href="#iframe" aria-label="Permalink to &quot;iframe&quot;">​</a></h3><p>因为 iframe 的特性，天然的隔离性，优势也比较明显：运行环境隔离、独立发布。但同时缺点也很多：加载慢，性能堪忧、隔离性太强，以至于 会话状态共享都成了一个问题。</p><p>整体思考下来，iframe 除了隔离性好之外，也没有什么优势。</p><h3 id="micro-frontend-框架" tabindex="-1">micro frontend 框架 <a class="header-anchor" href="#micro-frontend-框架" aria-label="Permalink to &quot;micro frontend 框架&quot;">​</a></h3><p>框架就有很多啦，不同的框架，优势也各不相同。我选了三个不同的轮子，简单的捋一捋里面的原理。</p><ul><li>Luigi: <a href="https://github.com/SAP/luigi" target="_blank" rel="noreferrer">https://github.com/SAP/luigi</a> ，利用 iframe 构建的微服务框架</li><li>EMP: <a href="https://github.com/efoxTeam/emp" target="_blank" rel="noreferrer">https://github.com/efoxTeam/emp</a> ，使用 webpack5 的 module federation 技术</li><li>Single-SPA: <a href="https://github.com/Single-SPA/Single-SPA" target="_blank" rel="noreferrer">https://github.com/Single-SPA/Single-SPA</a> ，路由框架</li><li>qiankun: <a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">https://github.com/umijs/qiankun</a> ，建立在 Single-SPA 之上的解决方案</li></ul><p>接下来，就看看不同框架之间的优劣。</p><h2 id="微前端框架体验" tabindex="-1">微前端框架体验 <a class="header-anchor" href="#微前端框架体验" aria-label="Permalink to &quot;微前端框架体验&quot;">​</a></h2><p>简单的写写每个框架的处理方式，不一定全对，但一定不会全错 😃。</p><h3 id="luigi" tabindex="-1">Luigi <a class="header-anchor" href="#luigi" aria-label="Permalink to &quot;Luigi&quot;">​</a></h3><p>先看看 <a href="https://github.com/SAP/luigi" target="_blank" rel="noreferrer">Luigi</a>，一个利用 <code>iframe</code> 构建的后台微服务框架。可看作是一个路由框架，主要用于构建后台配置页面。</p><p>通过 <a href="https://docs.luigi-project.io/docs/luigi-core-api?section=luigi-config" target="_blank" rel="noreferrer"><code>Luigi.setConfig</code></a> API 来配置网站的路由、授权、导航、本地化等。然后 <a href="https://github.com/SAP/luigi" target="_blank" rel="noreferrer">Luigi</a> 框架通过 <code>iframe</code> 切换不同的路由。</p><p>消息机制也是通过 <code>window.postMessage</code> 实现，源代码 <a href="https://github.com/SAP/luigi/blob/883c3924cf2ae83fce400cbfd7bf84f8c11359d7/client/src/helpers.js#L111-L119" target="_blank" rel="noreferrer">source</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">  sendPostMessageToLuigiCore</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">msg</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">    if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">origin</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">      window</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">parent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">postMessage</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">msg</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">origin</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> else</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">      console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">warn</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span></span>
<span class="line"><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">        '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">There is no target origin set. You can specify the target origin by calling LuigiClient.setTargetOrigin("targetorigin") in your micro frontend.</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">      );</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  }</span></span></code></pre></div><p>路由也是通过封装的 <code>LuigiClient.linkManager</code>、<code>Luigi.navigation</code> 来管理跳转，实际原理也是通过发送消息来实现的，源代码 <a href="https://github.com/SAP/luigi/blob/883c3924cf2ae83fce400cbfd7bf84f8c11359d7/client/src/linkManager.js#L56-L83" target="_blank" rel="noreferrer">source</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">  navigate</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">path</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sessionId</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> preserveView</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> modalSettings</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> splitViewSettings</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> drawerSettings</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">    if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">options</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">errorSkipNavigation</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">      this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">options</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">errorSkipNavigation</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> false</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">      return</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">    if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">modalSettings</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> &amp;&amp;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> splitViewSettings</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> &amp;&amp;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> drawerSettings</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">      console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">warn</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span></span>
<span class="line"><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">        '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">modalSettings, splitViewSettings and drawerSettings cannot be used together. Only modal setting will be taken into account.</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">      );</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">    this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">options</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">preserveView</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> preserveView</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> relativePath</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> path</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">]</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> !==</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">/</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> hasIntent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> path</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">toLowerCase</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">().</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">includes</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">?intent=</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> navigationOpenMsg</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">      msg</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">luigi.navigation.open</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">      sessionId</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sessionId</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">      params</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> Object</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">assign</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">this</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">options</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">        link</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> path</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">        relative</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> relativePath</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">        intent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> hasIntent</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">        modal</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> modalSettings</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">        splitView</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> splitViewSettings</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">        drawer</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> drawerSettings</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">      })</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    };</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    helpers</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">sendPostMessageToLuigiCore</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">navigationOpenMsg</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  }</span></span></code></pre></div><p>其它，如生命周期等，也是类似通过发送消息的方式来实现的。</p><p>整体体验下来，不是特别方便，代码有一定的侵入性。由于 <code>iframe</code> 的特性，每次切换，都要请求一下资源，略慢。</p><p><a href="https://github.com/SAP/luigi" target="_blank" rel="noreferrer">Luigi</a> 体验的差不多了，下一个 <a href="https://github.com/efoxTeam/emp" target="_blank" rel="noreferrer">EMP</a></p><h3 id="emp" tabindex="-1">EMP <a class="header-anchor" href="#emp" aria-label="Permalink to &quot;EMP&quot;">​</a></h3><p>通过官方仓库 <a href="https://github.com/efoxTeam/emp" target="_blank" rel="noreferrer">EMP</a>，中<code>projects</code> 里面的示例，体验了一下。</p><p>整体体验下来，开发比较流畅，但是文档目前不太完善。</p><p>主要原理是通过 <a href="https://webpack.js.org/" target="_blank" rel="noreferrer">webpack5</a> 的 <a href="https://webpack.js.org/concepts/module-federation/" target="_blank" rel="noreferrer">module-federation</a> 来加载远程模块。</p><p>因此高度依赖 <a href="https://webpack.js.org/" target="_blank" rel="noreferrer">webpack5</a>，对于其它打包工具,目前还不能很好的兼容。如果仅仅是当做路由框架，也是可行的。</p><p>因为直接暴露模块，因此没有通信和生命周期的的问题。但是样式隔离问题依旧存在，全局变量污染问题也存在。</p><p>下一个 <a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">Single-SPA</a></p><h3 id="single-spa" tabindex="-1">Single-SPA <a class="header-anchor" href="#single-spa" aria-label="Permalink to &quot;Single-SPA&quot;">​</a></h3><p>粗略体验，文档完善，社区也很活跃。而且有 <a href="https://single-spa.js.org/docs/ssr-overview" target="_blank" rel="noreferrer">SSR</a> 方案。</p><p><a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">Single-SPA</a> 整个文档，都在强调 <a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">Single-SPA</a> 是一种思路，具体实现方案，可自行选择。例如 <a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">qiankun</a> 和 <a href="https://github.com/efoxTeam/emp" target="_blank" rel="noreferrer">EMP</a> 都可看作其一种具体的实现方案。</p><p><a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">Single-SPA</a> 建议用加载 运行时模块(runtime module) 的方式，来组织「微前端」中不同的服务，例如用，尚在提案阶段的 <a href="https://github.com/WICG/import-maps" target="_blank" rel="noreferrer">import-maps</a>，<a href="https://caniuse.com/import-maps" target="_blank" rel="noreferrer">import-maps 兼容性</a> 或者 <a href="https://webpack.js.org/concepts/module-federation/" target="_blank" rel="noreferrer">webpack-module-federation</a> 功能。</p><p>官方会在处理「微前端」相关问题时，都会推荐一种实现方案，具体方案建议阅读 <a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">Single-SPA</a> 文档。</p><p>下一个 <a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">QianKun</a>，一个 <a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">Single-SPA</a> 的具体实现方案。</p><h3 id="qiankun" tabindex="-1">QianKun <a class="header-anchor" href="#qiankun" aria-label="Permalink to &quot;QianKun&quot;">​</a></h3><p>通过官方的示例，简单体验了一下，相比前几个框架，这个体验下来是最流畅的。接下来，看看 <a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">QianKun</a> 中具体细节的一些处理方式。</p><p>关于资源加载部分，乾坤用的是 <a href="https://github.com/kuitos/import-html-entry" target="_blank" rel="noreferrer">import-html-entry</a> 的方式。配置就比较简单，直接给一个 <code>html</code> 入口即可。基本原理是把 html 中的标签转移在当前需要挂载的 <code>div</code> 上，如果浏览器环境支持 <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM" target="_blank" rel="noreferrer">Shadow-Dom</a>，则会用 <code>shadow dom</code> 来处理环境隔离，具体代码 <a href="https://github.com/umijs/qiankun/blob/972872f5fe62ca87b6911fbe8c62b389ac65f9c5/src/loader.ts#L75-L92" target="_blank" rel="noreferrer">source: Shadow-Dom</a>。</p><p>关于 <code>JavaScript</code> 执行环境，用的是 <a href="https://github.com/kuitos/import-html-entry" target="_blank" rel="noreferrer">import-html-entry</a> 的 <code>sandbox</code>，可保证不会污染全局变量。</p><p>关于样式隔离，则是通过自动给每一条样式添加一个 <code>scoped</code> 来实现隔离 <a href="https://github.com/umijs/qiankun/blob/972872f5fe62ca87b6911fbe8c62b389ac65f9c5/src/loader.ts#L95-L105" target="_blank" rel="noreferrer">source: Css-Scoped</a>，如果支持 <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM" target="_blank" rel="noreferrer">Shadow-Dom</a> 则不需要处理。</p><p>虽然支持 <code>shadow-dom</code>，但是建议不要使用 <code>shadow dom</code>，因为这会导致一些其它问题，例如第三方库中的 <code>Modal</code> 无法使用。</p><p>关于通信，<a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">QianKun</a> 实现了一套基本的状态管理方案 <a href="https://qiankun.umijs.org/api#initglobalstatestate" target="_blank" rel="noreferrer">Global-State</a>。具体原理，则是通过 全局 实例来处理的。<a href="https://github.com/umijs/qiankun/blob/HEAD/src/globalState.ts#" target="_blank" rel="noreferrer">source: Global-State</a></p><h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h3><p>准确来讲，仅有三个框架，因为 <a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">Single-SPA</a> 主要介绍的是理念。</p><p>三个框架，各有千秋，但是 <a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">QianKun</a> 目前看来是相对比较好的方案，代码侵入少，环境隔离好。</p><p>具体的代码看了，接下来聊聊 「微前端」 具体解决了哪些问题。</p><h2 id="微前端需要解决的问题" tabindex="-1">微前端需要解决的问题 <a class="header-anchor" href="#微前端需要解决的问题" aria-label="Permalink to &quot;微前端需要解决的问题&quot;">​</a></h2><ol><li>服务更新问题</li><li>通信问题</li><li>样式隔离问题</li><li>环境隔离问题</li></ol><h3 id="服务更新问题" tabindex="-1">服务更新问题 <a class="header-anchor" href="#服务更新问题" aria-label="Permalink to &quot;服务更新问题&quot;">​</a></h3><p>关于更新的问题，进一步的问题可以提炼成：关于「微前端」中的不同服务，是否需要主应用来控制版本呢？</p><p>我认为这个答案是否定的，不需要主应用来控制里面服务的版本，也就是主应用里面的服务，无论什么时候都是最新的版本，主应用不关心里面的服务的版本。</p><p>由此，也可确定，服务之间，应该尽可能的减少通信。因为频繁的通信，即可导致耦合较大，就必须要有版本控制，否则，出问题的概率就比较大。</p><h3 id="通信问题" tabindex="-1">通信问题 <a class="header-anchor" href="#通信问题" aria-label="Permalink to &quot;通信问题&quot;">​</a></h3><p>有上一个问题的讨论结果，可得出，通信功能只要满足能用即可。并不要实现特别复杂的机制。</p><p>由不同「微前端」方案，也衍生出不同的通信方案：</p><ol><li><a href="https://github.com/SAP/luigi" target="_blank" rel="noreferrer">Luigi</a> 用到的 <code>window.postMessage</code></li><li><a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">Single-SPA</a> 提到的 <code>window.addEventListener/dispatchEvent</code> <a href="https://single-spa.js.org/docs/recommended-setup/#ui-state" target="_blank" rel="noreferrer">source</a></li><li><a href="https://github.com/efoxTeam/emp" target="_blank" rel="noreferrer">EMP</a> 中自定义的模块，则可直接暴露函数</li><li><a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">QianKun</a> 中自己实现一个 <a href="https://qiankun.umijs.org/api#initglobalstatestate" target="_blank" rel="noreferrer">Global-State</a></li></ol><h3 id="样式隔离问题" tabindex="-1">样式隔离问题 <a class="header-anchor" href="#样式隔离问题" aria-label="Permalink to &quot;样式隔离问题&quot;">​</a></h3><p>推荐阅读 <a href="https://single-spa.js.org/docs/ecosystem-css" target="_blank" rel="noreferrer">Single-SPA-CSS</a>，样式隔离的一些指导和分析。</p><p><a href="https://single-spa.js.org/docs/ecosystem-css" target="_blank" rel="noreferrer">Single-SPA-CSS</a> 推荐 一份公用的样式，然后每个服务的样式，都自己去借助工具或者一些技术做到自我隔离。例如 <a href="https://github.com/css-modules/css-modules" target="_blank" rel="noreferrer">css-module</a> 技术，或者 <code>Vue</code> 的 <code>scoped</code> 方案。</p><p>但如果使用像 <a href="https://github.com/SAP/luigi" target="_blank" rel="noreferrer">Luigi</a> 这样利用 <code>iframe</code> 的框架，则天然支持样式隔离。</p><p>或者是 <a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">QianKun</a> 那样，加载的时候，自动添加上一层 <code>scope</code>。</p><h3 id="环境隔离问题" tabindex="-1">环境隔离问题 <a class="header-anchor" href="#环境隔离问题" aria-label="Permalink to &quot;环境隔离问题&quot;">​</a></h3><p>环境隔离，主要问题是全局环境变量的问题。要处理这个问题，第一个想到的肯定就是，人工约定一个格式，先到先得。这种方式够用，但不够友好。</p><p>如果是用 <code>iframe</code>，则没有这个问题。</p><p>看 <a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">QianKun</a> 的源代码的时候，看到其用到了 <code>Sandbox</code> 这个东西。仔细读了读，实际上是通过 <a href="https://github.com/kuitos/import-html-entry" target="_blank" rel="noreferrer">import-html-entry</a> 的 <a href="https://github.com/kuitos/import-html-entry/blob/ab3e788ee868177ecf407f79b00d52ca2e2cdd47/src/index.js#L52-L63" target="_blank" rel="noreferrer">source: getExecutableScript</a> 实现的。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> getExecutableScript</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">scriptSrc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> scriptText</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> proxy</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> strictGlobal</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sourceUrl</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> isInlineCode</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">scriptSrc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> ?</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> ''</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> :</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> `</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">//# sourceURL=</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">${</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">scriptSrc</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">}</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">\n</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // 通过这种方式获取全局 window，因为 script 也是在全局作用域下运行的，所以我们通过 window.proxy 绑定时也必须确保绑定到全局 window 上</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // 否则在嵌套场景下， window.proxy 设置的是内层应用的 window，而代码其实是在全局作用域运行的，会导致闭包里的 window.proxy 取的是最外层的微应用的 proxy</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> globalWindow</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> eval</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">window</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">  globalWindow</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">proxy</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> proxy</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  // TODO 通过 strictGlobal 方式切换 with 闭包，待 with 方式坑趟平后再合并</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  return</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> strictGlobal</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    ?</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> `</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">;(function(window, self, globalThis){with(window){;</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">${</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">scriptText</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">}</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">\n</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">${</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">sourceUrl</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">}</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">}}).bind(window.proxy)(window.proxy, window.proxy, window.proxy);</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">`</span></span>
<span class="line highlighted"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    :</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> `</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">;(function(window, self, globalThis){;</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">${</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">scriptText</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">}</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;">\n</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">${</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">sourceUrl</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">}</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">}).bind(window.proxy)(window.proxy, window.proxy, window.proxy);</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">`</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><p>核心代码，就是 <code>;(function(window, self, globalThis){;${scriptText}\n${sourceUrl}}).bind(window.proxy)(window.proxy, window.proxy, window.proxy)</code> 这一句了。在运行代码的时候，通过闭包机制，替换 <code>window,self,globalThis</code> 三个变量。</p><p>我个人认为，这个方面就看情况了，如果开箱支持，那就用。如果不支持，那也没有必要非得用这种方式，就「约定」的方式也挺好的， 也没什么大问题。</p><h2 id="需要微前端吗" tabindex="-1">需要微前端吗？ <a class="header-anchor" href="#需要微前端吗" aria-label="Permalink to &quot;需要微前端吗？&quot;">​</a></h2><p>现在，对微前端有了一个整体的认识，我们真的需要微前端吗？</p><p>这个问题，每个人的看法不一样，<strong>这里我就随便聊聊，看看就完事了，当真就输了。是否真的需要，还需自己考虑。</strong></p><p>整体来讲，「微前端」在我看来，应用场景有限，入门需要一定的成本，虽然可以分离业务，也有很多优点。</p><p>但是缺点也很明显，成本上去了，团队交流成本，开发成本都上升了。举一个小例子，有个需求需要应用 A 支持一下，但是应用 A 是其它团队负责，原本估计一天就能搞定的事情，经过交流，确认，最后开发，要三天才能搞定。 在 <a href="https://www.yuque.com/kuitos/gky7yw/rhduwc" target="_blank" rel="noreferrer">qiankun-技术圆桌</a> 中也提到过，「微前端」的目的是为了支持不同的技术栈（这点可推导出是为了支持不同的开发团队）。</p><p>因此，在我看来，在项目没有大到一定程度（必须要跨团队）的时候，没必要考虑「微前端」。</p><h2 id="推荐阅读" tabindex="-1">推荐阅读 <a class="header-anchor" href="#推荐阅读" aria-label="Permalink to &quot;推荐阅读&quot;">​</a></h2><ul><li><a href="https://micro-frontends.org/" target="_blank" rel="noreferrer">micro-frontends</a>，一篇对「微前端」简单介绍的文章。</li><li><a href="https://martinfowler.com/articles/micro-frontends.html" target="_blank" rel="noreferrer">martinfowler-micro-frontends</a>，分析「微前端」的优劣势，和一些实现方案以及细节处理方式。</li><li><a href="https://www.yuque.com/kuitos/gky7yw/rhduwc" target="_blank" rel="noreferrer">qiankun-技术圆桌</a>，探讨「微前端」的目的，使命。</li><li><a href="https://single-spa.js.org/docs/microfrontends-concept" target="_blank" rel="noreferrer">Single-SPA Concept</a>，「微前端」概念介绍，以及开发方向指导。</li><li><a href="https://single-spa.js.org/docs/recommended-setup" target="_blank" rel="noreferrer">Single-SPA Recommended-setup</a>，「微前端」推荐实现方案。</li></ul><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://micro-frontends.org/" target="_blank" rel="noreferrer">micro-frontends</a></li><li><a href="https://martinfowler.com/articles/micro-frontends.html" target="_blank" rel="noreferrer">martinfowler-micro-frontends</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" target="_blank" rel="noreferrer">web-component</a></li><li><a href="https://www.yuque.com/kuitos/gky7yw/rhduwc" target="_blank" rel="noreferrer">qiankun-技术圆桌</a></li><li><a href="https://webpack.js.org/concepts/module-federation/" target="_blank" rel="noreferrer">webpack-module-federation</a></li><li><a href="https://github.com/SAP/luigi" target="_blank" rel="noreferrer">luigi</a></li><li><a href="https://github.com/efoxTeam/emp" target="_blank" rel="noreferrer">emp</a></li><li><a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">single-spa</a></li><li><a href="https://github.com/umijs/qiankun" target="_blank" rel="noreferrer">qiankun</a></li><li><a href="https://webpack.js.org/" target="_blank" rel="noreferrer">webpack5</a></li><li><a href="https://single-spa.js.org/docs/ecosystem-css" target="_blank" rel="noreferrer">single-spa-css</a></li><li><a href="https://github.com/kuitos/import-html-entry" target="_blank" rel="noreferrer">import-html-entry</a></li><li><a href="https://qiankun.umijs.org/api#initglobalstatestate" target="_blank" rel="noreferrer">global-state</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM" target="_blank" rel="noreferrer">shadow-dom</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Nginx-Location]]></title>
            <link>https://blog.0x-jerry.icu/posts/nginx-with-location</link>
            <guid>https://blog.0x-jerry.icu/posts/nginx-with-location</guid>
            <pubDate>Wed, 16 Dec 2020 10:57:15 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Nginx-Location</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_nginx-with-location.md.Dy752-cR.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2020-12-16T18:57:15.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Nginx-Location<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><blockquote><p>文档：<a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#location" target="_blank" rel="noreferrer">http://nginx.org/en/docs/http/ngx_http_core_module.html#location</a></p></blockquote><p>规则:</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">location</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> [ = | ~ | ~* | ^~] url </span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">{ ... }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">location</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> @name </span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">{ ... }</span></span></code></pre></div><p>修饰符：</p><ul><li><code>=</code>: 一模一样的等于</li><li><code>~</code>: 区分 url 大小写</li><li><code>~*</code>: 不区分 url 大小写</li><li><code>^~</code>: 标志 location 后面的 url 不是正则表达式。如果 url 是正则的形式，则会以字符串的形式匹配。</li></ul><p>如，无修饰符，默认匹配最长前缀。</p><p>示例：</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">location</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> =</span><span style="--shiki-dark:#C4704F;--shiki-light:#AB5E3F;"> / </span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">{</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">    [ </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">configuration</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> A ]</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">location</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> / </span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">{</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">    [ </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">configuration</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> B ]</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">location</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> /documents/ </span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">{</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">    [ </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">configuration</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> C ]</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">location</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> ^~</span><span style="--shiki-dark:#C4704F;--shiki-light:#AB5E3F;"> /images/ </span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">{</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">    [ </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">configuration</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> D ]</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">location</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> ~*</span><span style="--shiki-dark:#C4704F;--shiki-light:#AB5E3F;"> \.(gif|jpg|jpeg)$ </span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">{</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">    [ </span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">configuration</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> E ]</span></span>
<span class="line"><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">}</span></span></code></pre></div><table tabindex="0"><thead><tr><th>路径</th><th>配置</th></tr></thead><tbody><tr><td>/</td><td>A</td></tr><tr><td>/index.html</td><td>B</td></tr><tr><td>/documents/document.html</td><td>C</td></tr><tr><td>/images/1.gif</td><td>D</td></tr><tr><td>/documents/1.jpg</td><td>E</td></tr></tbody></table><p>问：为什么 <code>/documents/1.jpg</code> 匹配到的是 E 二不是 C ？</p><p>答：因为 E 中 url 表达式比 C 中长。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[树莓派之 Docker]]></title>
            <link>https://blog.0x-jerry.icu/posts/docker-on-raspberrypi</link>
            <guid>https://blog.0x-jerry.icu/posts/docker-on-raspberrypi</guid>
            <pubDate>Sat, 30 May 2020 21:06:43 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>树莓派之 Docker</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_docker-on-raspberrypi.md.DkAazsLm.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2020-05-31T05:06:43.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->树莓派之 Docker<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>一直都想部署一个局域网服务，保存自己下载的电影、图片等等。空闲的时候，还能挂着下载东西。</p><p>一直没空，刚好这个周末有空，就尝试在树莓派 4 上面部署 Docker 服务。配合路由器修改 hosts 用着还不错。</p><p>所需硬件：</p><ul><li>树莓派 4B 1GB x1</li><li>斐讯 K2 路由器 x1</li><li>一台电脑（笔记本/台式机都行）</li></ul><h2 id="路由器刷固件" tabindex="-1">路由器刷固件 <a class="header-anchor" href="#路由器刷固件" aria-label="Permalink to &quot;路由器刷固件&quot;">​</a></h2><p>路由器刷 Padavan 固件(默认用户名/密码是: admin/admin)，可以刷其它固件，只要又绑定 mac 地址功能，和自定义 hosts 功能即可。</p><figure><img src="/assets/2020-05-31T211438.QhxPIx0p.png" alt="2020-05-31T211438" tabindex="0" loading="lazy"><figcaption>2020-05-31T211438</figcaption></figure><p>树莓派的地址是 192.168.123.26, 记住后面有用</p><figure><img src="/assets/2020-05-31T211735.fjqakdM5.png" alt="2020-05-31T211735" tabindex="0" loading="lazy"><figcaption>2020-05-31T211735</figcaption></figure><p>在「内部网络 -&gt; DHCP 配置」中绑定 MAC 地址，以及设置 hosts，到这里，路由器的配置就结束啦。重头戏还是在树莓派里面。</p><h2 id="树莓派-docker-服务" tabindex="-1">树莓派 Docker 服务 <a class="header-anchor" href="#树莓派-docker-服务" aria-label="Permalink to &quot;树莓派 Docker 服务&quot;">​</a></h2><p>树莓派刷入官方固件</p><p>下载地址：<a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noreferrer">https://www.raspberrypi.org/downloads/raspbian/</a></p><p>建议下载 recommend 版本，有 GUI 好用一点点。我就用联了个网，后面基本也没用过 GUI 😃</p><p>安装好之后，联入路由器，开启 ssh 登陆，然后就可以在电脑上用 ssh 工具登录树莓派。</p><figure><img src="/assets/2020-05-31T212029.D03igIka.png" alt="2020-05-31T212029" tabindex="0" loading="lazy"><figcaption>2020-05-31T212029</figcaption></figure><p>准备工作，由于在国内，安装软件，以及拉取镜像等操作都可能因为网络原因失败，所以第一步就是替换软件源地址</p><ol><li>替换树莓派 Debian 软件源，替换成清华的源地址</li></ol><p>修改方式参考：<a href="https://mirror.tuna.tsinghua.edu.cn/help/raspbian/" target="_blank" rel="noreferrer">https://mirror.tuna.tsinghua.edu.cn/help/raspbian/</a></p><ol start="2"><li>安装 Docker</li></ol><p>使用官网的安装脚本：<a href="https://github.com/docker/docker-install" target="_blank" rel="noreferrer">https://github.com/docker/docker-install</a></p><p>国内可用阿里云的镜像地址来安装：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">curl</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -fsSL</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> https://get.docker.com</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -o</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> get-docker.sh</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">sh</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> get-docker.sh</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --mirror</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> Aliyun</span></span></code></pre></div><p>安装完之后，再安装 Docker-Compose：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">sudo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> apt</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> update</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">sudo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> apt</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> install</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> docker-compose</span></span></code></pre></div><p>安装完之后，记得修改 Docker Hub 的镜像地址：</p><p>修改成中科大的地址，修改方式：<a href="https://mirrors.ustc.edu.cn/help/dockerhub.html" target="_blank" rel="noreferrer">https://mirrors.ustc.edu.cn/help/dockerhub.html</a></p><p>到此，Docker 环境就安装好啦。</p><h2 id="部署-docker-服务" tabindex="-1">部署 Docker 服务 <a class="header-anchor" href="#部署-docker-服务" aria-label="Permalink to &quot;部署 Docker 服务&quot;">​</a></h2><p>推荐使用 Docker-compose 来部署服务，因为 docker-compose 可以把配置写到文件中，不用每次启动都输入一遍配置。</p><p>可选在树莓派上安装 Nginx 反向代理服务，如果不安装在树莓派上，可以在 Docker 中运行 Nginx，只不过，因此 Docker 中其它服务都必须在同一 network 上。</p><p>Docker 相关配置参考：<a href="https://github.com/cwxyz007/Dockerfiles" target="_blank" rel="noreferrer">https://github.com/cwxyz007/Dockerfiles</a></p><h2 id="最终效果" tabindex="-1">最终效果 <a class="header-anchor" href="#最终效果" aria-label="Permalink to &quot;最终效果&quot;">​</a></h2><p>以下服务只能在局域网里面访问，而且因为 Nginx 反向代理加上路由器 hosts 的原因，需要正确的域名才能访问到对应的服务。注意需要用路由器默认 dns，否则 hosts 不会生效。</p><p>看看部署好的服务吧：</p><p>netdata 监控服务</p><figure><img src="/assets/2020-05-31T214154.BUBgvVu-.png" alt="2020-05-31T214154" tabindex="0" loading="lazy"><figcaption>2020-05-31T214154</figcaption></figure><p>aria2 下载服务</p><figure><img src="/assets/2020-05-31T214257.C_FZEDus.png" alt="2020-05-31T214257" tabindex="0" loading="lazy"><figcaption>2020-05-31T214257</figcaption></figure><p>百度网盘服务</p><figure><img src="/assets/2020-05-31T220348.BG7yYL2o.png" alt="2020-05-31T220348" tabindex="0" loading="lazy"><figcaption>2020-05-31T220348</figcaption></figure><p>文件浏览服务</p><figure><img src="/assets/2020-05-31T215710.ByWa4i2t.png" alt="2020-05-31T215710" tabindex="0" loading="lazy"><figcaption>2020-05-31T215710</figcaption></figure><p>到此就可以愉快的玩耍啦</p><p>Docker 配置和操作请参考：<a href="https://docs.docker.com/reference/" target="_blank" rel="noreferrer">https://docs.docker.com/reference/</a></p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[NuxtJS 初识]]></title>
            <link>https://blog.0x-jerry.icu/posts/basic-nuxtjs</link>
            <guid>https://blog.0x-jerry.icu/posts/basic-nuxtjs</guid>
            <pubDate>Fri, 27 Mar 2020 23:13:46 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>NuxtJS 初识</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_basic-nuxtjs.md.DBVZw-4_.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2020-03-28T07:13:46.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->NuxtJS 初识<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>NuxtJS 框架是一款基于 Vue.js 的渐进式框架，主要整合了 Vue.js 的 SSR 功能，提供了很多服务端渲染的功能，以及开箱即用的打包等配置。</p><p>NuxtJS 中提供两种方式 SSR 或者 SPA 的方式:</p><ul><li>SPA: 普通的单页应用模式，仅仅是处理了路由导航，Vue 的 history 模式。</li><li>SSR: 服务端渲染，同构模式，服务端提前渲染，然后和配合客户端的路由合并（优势）</li></ul><p>NuxtJS 也就在使用 SSR 模式的时候具有很多优势，如果是普通的 SPA，则可以用前后端分离开发模式更方便。</p><p>NuxtJS 的应用场景可以是需要 SEO 优化，需要减少渲染时间的网站。一般来说，这两个需求是在一起的。</p><p>如果没有以上的两个需求，则不需要使用 NuxtJS，使用 Vue.js 的 SPA 模式，配合动态路由，普通场景下也能满足需求。</p><p>记录一下 VueJS 的 SSR 流程:</p><ol><li>服务端预渲染开始，暂停数据响应式，服务端不需要响应式</li><li>传入需要预渲染需要的 data，或者使用 Vuex</li><li>根据 VueRouter 匹配路由组件</li><li>预渲染整个 App，输出 html</li><li>客户端接受 html 以及客户端 js</li><li>客户端混合 html 和 js，使 app 的数据具有响应式</li></ol></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[首屏优化]]></title>
            <link>https://blog.0x-jerry.icu/posts/first-page</link>
            <guid>https://blog.0x-jerry.icu/posts/first-page</guid>
            <pubDate>Mon, 09 Mar 2020 21:26:32 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>首屏优化</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_first-page.md.B6sJQiIz.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2020-03-10T05:26:32.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->首屏优化<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>首屏优化，主要考虑怎么减少首页加载的时间。那么什么是可以减少的呢？</p><p>那么 怎么考虑 这个问题呢？那就从用户有什么开始吧，毕竟是用户在体验呢。</p><p>用户有什么呢？手机？电脑？浏览器？网络？</p><p>那么就从这几个方面开始思考吧。</p><h2 id="从那些方面减少首屏时间" tabindex="-1">从那些方面减少首屏时间 <a class="header-anchor" href="#从那些方面减少首屏时间" aria-label="Permalink to &quot;从那些方面减少首屏时间&quot;">​</a></h2><ol><li>手机 或者电脑，这个我们管不着，pass</li><li>浏览器，这个我们也管不着，pass</li><li>网络，这个可以有，我们可以减少下载的东西，那么就加快了</li></ol><p>那么从用户的角度来看的话，就只有网络这里的减少下载的大小可以优化了</p><p>那么用 怎么减少下载的大小呢？</p><ol><li>压缩，把写好的代码，打包压缩，那么文件大小就变小了，这里就用到 webpack，rollup 这些工具</li><li>服务器资源压缩，使用 gzip 压缩传输，这里大小又变小了</li></ol><p>那么从 程序员 的角度呢？</p><p>网络是有 连接时间 的，那么减少连接数量，就可以减少用户下载的时间了。所以，这里可以</p><ol><li>合并多个 js 文件为一个 js 文件</li><li>合并多个 css 文件为一个 css 文件</li></ol><p>这样，连接数量就减少了，时间也就减少了</p><p>那么还有什么地方可以减少呢？</p><p>从业务的角度思考，是不是所有的代码必须在下载的时候加载呢？</p><p>例如首屏看不到的内容，是不是可以推迟加载？是的，因为看不到嘛，你下下来也，用户也看不到呀，所以，初了首屏的内容，其它的内容都可以用异步加载的方式下载，这个首屏的下载数据量又变少了</p><p>如果做到极致的优化的话，那么可以第一次加载可以只下载首屏需要的 html,css,js 其它的 html,css,js 都在首屏加载完了之后异步下载即可</p><p>那么有没有方法再减少呢？</p><p>有，cdn，因为用户直接连接我们自己的服务器，速度肯定比从 cdn 下载慢。所以我们可以把 静态资源(html,css,js 等)部署到 cdn，这样，用户下载的速度又增加了，时间又减少了</p><p>还有没有其它方法呢？</p><p>嗯...暂时只想到这些，想到了再补充吧</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>总结一下，优化的方式有：</p><ol><li>打包代码，减少下载的文件数量以及文件大小，为了减少连接次数</li><li>服务器开启 gzip，压缩文件大小，减少下载时间</li><li>只加载首屏代码，减少首次下载的文件大小</li><li>部署 cdn，减少用户下载时间</li></ol></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Vue3 - Runtime Core]]></title>
            <link>https://blog.0x-jerry.icu/posts/vue-runtime-core</link>
            <guid>https://blog.0x-jerry.icu/posts/vue-runtime-core</guid>
            <pubDate>Sun, 08 Mar 2020 18:42:19 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Vue3 - Runtime Core</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_vue-runtime-core.md.CMMn83VS.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2020-03-09T02:42:19.967Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Vue3 - Runtime Core<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>Vue 3.0 系列之 Runtime Core，对应代码版本 <a href="https://github.com/vuejs/vue-next/tree/fb4856b36375fcf3eecaf89f260b272052a0b432" target="_blank" rel="noreferrer">vue-next</a></p><p>这一节的内容太多了，看了两天，也才刚刚把源码读完，还有很多细节的地方没有看。先记录一下从创建一个 App 开始，Vue 做了那些事情吧。这一部分主要包括 各个 hook 的处理，异步依赖的处理以及更新虚拟 Dom 的处理。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> createApp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> }</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">vue</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> App</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">./App.vue</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">createApp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">App</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">).</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">mount</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">#app</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span></code></pre></div><h2 id="一图胜千言" tabindex="-1">一图胜千言 <a class="header-anchor" href="#一图胜千言" aria-label="Permalink to &quot;一图胜千言&quot;">​</a></h2><p>本来想写一些过程的，但是光画脑图，都花了半天时间。还是直接贴脑图结果吧。剩下的发下一篇文章</p><figure><img src="/assets/Vue3.CuD88LY9.png" alt="Vue 3" tabindex="0" loading="lazy"><figcaption>Vue 3</figcaption></figure><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h2><p>对应文件的一些说明</p><ul><li>components: 原生组件 <ul><li>BaseTransition.ts: HOC，Transition 组件，处理 transition 相关 hook</li><li>KeepAlive.ts: HOC，Keep Alive 组件，添加 actived、deactived hook，缓存组件</li><li>Portal.ts: 特殊组件，在 patch 的时候调用 Portal.process 函数</li><li>Suspense.ts: 特殊组件，主要用于处理 setup 为异步函数的情况。在 patch 的时候做特殊处理</li></ul></li><li>helpers: renderer 相关辅助函数 <ul><li>createSlots.ts: 创建 Slot</li><li>renderList.ts: 创建 列表 负责函数</li><li>renderSlot.ts: 创建 Slot VNode</li><li>resolveAssets.ts: 查找当前实例上注册的的 component 或者 directive</li><li>scopeId.ts: SFC 样式作用域 id 管理</li><li>toHandlers.ts: v-on Object 格式的 key 转换成 on* 格式</li><li>useCssModule.ts: 获取当前实例的 css</li><li>useSsrContext.ts: 注入 SSRContext</li></ul></li><li>apiComputed.ts: 代码很少，两行代码，主要用于 track 依赖项</li><li>apiCreateApp.ts: 创建 App 实例，实例相关配置和 mount 操作都在此处</li><li>apiDefineComponent.ts: 嗯...，实现的函数，就一行，统一 component 的定义。其它代码都是为了服务 TypeScript 的 类型处理</li><li>apiInject.ts: 保存自定义变量在当前实例上，并继承父实例的自定义变量，并在需要的时候注入到目标实例(provide/inject)</li><li>apiLifecycle.ts: 向向前实例注入生命周期钩子，SSR 的时候不处理</li><li>apiOptions.ts: 处理 2.x 的组件书写格式，把各个参数以 3.x 的方式处理，生命周期转换成 hook</li><li>apiWatch.ts: 创建 watch，主要执行 source 的 getter，然后在 effect 里面开启 track，这样，就可以采集到所有的依赖项，然后当依赖项更改时，触发 callback</li><li>component.ts: 主要处理 Vue 组件的 setup 函数</li><li>componentProps.ts: 处理传给组件 props ，统一成 NormalizedProp。特殊处理了 boolean 类型的 prop，和 directive 的生命周期 hook</li><li>componentProxy.ts: 定义 componentInternal 的 Proxy</li><li>componentRenderUtils.ts: 创建组件的根节点渲染结果。对比两个 vNode，判断是否需要更新。更新高阶组件的 el 对象</li><li>componentSlots.ts: 对 vNode 的 slots 做统一化处理，统一成 Slot</li><li>directives.ts: 向 vNode 注入 directive 相关处理，以及执行 directive 相关的生命周期 hook</li><li>errorHandling.ts: Vue 错误处理</li><li>h.ts: jsx 的 createElement 函数</li><li>hmr.ts: 调试开发时，动态更新相关内容，build 版本无关</li><li>hydration.ts: 混合应用的相关 Dom 的创建</li><li>index.ts: 入口，负责导出公共 api</li><li>renderer.ts: 主要负责 diff vDom 以及执行 diff 之后的 patch</li><li>scheduler.ts: 任务调度，主要用于在一个 tick 中执行所有数据的更新</li><li>vnode.ts: 创建一个空的 Virtual Node</li><li>warning.ts: 运行时警告提示，报错 vue 自己的 trace</li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Vue3 - Reactivity]]></title>
            <link>https://blog.0x-jerry.icu/posts/vue-reactivity</link>
            <guid>https://blog.0x-jerry.icu/posts/vue-reactivity</guid>
            <pubDate>Thu, 05 Mar 2020 13:37:20 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Vue3 - Reactivity</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_vue-reactivity.md.Cv3xxytv.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2020-03-05T21:37:20.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Vue3 - Reactivity<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>Vue 3.0 系列之 Reactivity，对应代码版本 <a href="https://github.com/vuejs/vue-next/tree/fb4856b36375fcf3eecaf89f260b272052a0b432" target="_blank" rel="noreferrer">vue-next</a></p><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h2><ul><li>baseHandlers.ts: Proxy 的基础 handler</li><li>collectionHandlers.ts: Set,Map,WeakMap,WeakSet 的 Proxy handler</li><li>computed.ts: getter 负责 track 响应式变量，setter 负责 trigger 响应式</li><li>effect.ts: 负责 追踪、分发 响应式变量的各种更改，包括增加、删除、设置、清除</li><li>index.ts: 入口，负责 export 接口</li><li>lock.ts: 全局锁</li><li>operations.ts: 定义 Proxy 操作常量</li><li>reactive.ts: 监听对象，添加响应式函数</li><li>ref.ts: 主要把非 Reactive 对象转换成 Reactive 对象，以及 wrap 和 unwrap 一层 get/set</li></ul><p>通过浏览各个文件，可以发现 operations.ts 没有依赖。然后是 effect.ts，只依赖 reactivity 中的 operation.ts ，那么就可以先从这两个文件开始看，然后再找依赖最少的文件，这样源码读起来，就会相对容易一点。</p><h3 id="basehandlers-ts" tabindex="-1">baseHandlers.ts <a class="header-anchor" href="#basehandlers-ts" aria-label="Permalink to &quot;baseHandlers.ts&quot;">​</a></h3><p>主要创建 <code>mutableHandlers, readonlyHandlers, shallowReactiveHandlers, shallowReadonlyHandlers</code> 四种 ProxyHandler</p><h3 id="collectionhandlers-ts" tabindex="-1">collectionHandlers.ts <a class="header-anchor" href="#collectionhandlers-ts" aria-label="Permalink to &quot;collectionHandlers.ts&quot;">​</a></h3><p>主要是在 <code>get, size, has, add, set, delete, clear, forEach</code> 的时候添加 track 和 trigger 使其具有响应式</p><h3 id="computed-ts" tabindex="-1">computed.ts <a class="header-anchor" href="#computed-ts" aria-label="Permalink to &quot;computed.ts&quot;">​</a></h3><p>功能不多，就是在变量的 getter 里面 添加 track，setter 里面 trigger 对应的 reactive</p><h3 id="reactive-ts" tabindex="-1">reactive.ts <a class="header-anchor" href="#reactive-ts" aria-label="Permalink to &quot;reactive.ts&quot;">​</a></h3><p>主要函数 <code>createReactiveObject</code>，用 Proxy 代理 target，分别存在 toProxy 和 toRaw 里面</p><h3 id="ref-ts" tabindex="-1">ref.ts <a class="header-anchor" href="#ref-ts" aria-label="Permalink to &quot;ref.ts&quot;">​</a></h3><p>就像<a href="#目录结构">目录结构</a>里面介绍的一样，主要把非 Reactive 对象转换成 Reactive 对象</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>Reactivity 主要是负责给变量添加相应式，给 Vue 的 mutable 打下基础</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Vue3 - Runtime Dom]]></title>
            <link>https://blog.0x-jerry.icu/posts/vue-runtime-dom</link>
            <guid>https://blog.0x-jerry.icu/posts/vue-runtime-dom</guid>
            <pubDate>Wed, 04 Mar 2020 16:46:31 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Vue3 - Runtime Dom</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_vue-runtime-dom.md.OkU2Gybu.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2020-03-05T00:46:31.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Vue3 - Runtime Dom<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>Vue 3.0 系列之 Runtime Dom，对应代码版本 <a href="https://github.com/vuejs/vue-next/tree/fb4856b36375fcf3eecaf89f260b272052a0b432" target="_blank" rel="noreferrer">vue-next</a></p><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h2><ul><li>components: 两个 transition 相关的 Vue 组件</li><li>directives: v- 指令相关处理</li><li>modules: Element 属性对比，替换相关处理</li><li>index.ts: 挂载 Vue 到 Host 上，Host 有可能是 Document 有可能是 Hydration App</li><li>nodeOps.ts: 封装 Element 相关操作，统一不同平台上的操作</li><li>patchProp.ts: 对比 Element 上的属性，执行替换操作</li></ul><h3 id="components" tabindex="-1">components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;components&quot;">​</a></h3><p><strong>Transition.ts</strong> 组件主要处理 Element 的 class 在适当的时候添加以及删除，实际实现是 runtime-core 中的 <strong>BaseTransition</strong> 组件</p><p><strong>TransitionGroup.ts</strong> 组件主要给子组件添加 transition hook，以及子组件在添加/删除/移动的时候，添加 transition class</p><h3 id="directives" tabindex="-1">directives <a class="header-anchor" href="#directives" aria-label="Permalink to &quot;directives&quot;">​</a></h3><p><strong>vModel.ts</strong> 主要用于给 <code>select,textarea,input</code> 添加各种事件，例如 <code>change, input</code> 等，再根据 modifiers 执行对应的功能代码</p><p><strong>vOn.ts</strong> 中 <strong>withKeys</strong> 是为了兼容 2.x 的语法，<strong>withModifiers</strong> 则是 3.0 的新版本，主要处理 modifiers</p><p><strong>vShow.ts</strong> 中的代码很少，也很简单，就是处理 el.style.display，还考虑到了 transition，原始 display 值保存在 <code>el._vod</code>(Vue original display)</p><h3 id="modules" tabindex="-1">modules <a class="header-anchor" href="#modules" aria-label="Permalink to &quot;modules&quot;">​</a></h3><p>modules 文件夹是为处理 Element 原生属性</p><p><strong>attrs.ts</strong> 分别处理了 svg 和 非 svg 的 attr 设置，特殊处理了 boolean 值，因为 Vue 会把所有非字符串 attr 的值转换成字符串，所以 boolean 值需要特殊处理</p><p><strong>class.ts</strong> 处理 className，一样分 svg 和 非 svg，特别注意 transition 相关的 className，transition 相关 classes 保存到 <code>el._vtc</code>(vue transition classes) 中的</p><p><strong>events.ts</strong> 在原生回调函数上 wrapper 了一层 invoker，invoker 只要在监听参数不变的情况下，实现重用</p><p><strong>prop.ts</strong> 处理 element 上的 props，特殊处理了 <code>InnerHTML,textContent</code>，progress 的 <code>value</code> 和 boolean 值的 prop</p><p><strong>style.ts</strong> 处理了 css 变量，自动添加前缀，特殊处理了 <code>!important</code> 语法</p><h3 id="nodeops-ts" tabindex="-1">nodeOps.ts <a class="header-anchor" href="#nodeops-ts" aria-label="Permalink to &quot;nodeOps.ts&quot;">​</a></h3><p>本文件主要封装了 Element 的常用函数，主要为了分开 svg 和非 svg 的相关操作，统一 api</p><h3 id="patchprop-ts" tabindex="-1">patchProp.ts <a class="header-anchor" href="#patchprop-ts" aria-label="Permalink to &quot;patchProp.ts&quot;">​</a></h3><p>本文件主要是统一一个 api 来管理 patch 操作，特殊处理了 <code>:true-value, :false-value</code> 语法，保存到 <code>el._trueValue, el._falseValue</code> 中</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>Runtime Dom 主要就是为了执行 dom diff 之后的 patch 操作，代码看起来相对比较简单，另外添加了两个原生组件 <code>Transition</code> 和 <code>TransitionGroup</code></p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloudflare 加速 Github Pages]]></title>
            <link>https://blog.0x-jerry.icu/posts/cloudflare-and-github-pages</link>
            <guid>https://blog.0x-jerry.icu/posts/cloudflare-and-github-pages</guid>
            <pubDate>Wed, 18 Dec 2019 20:29:17 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Cloudflare 加速 Github Pages</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_cloudflare-and-github-pages.md.CWq-47l-.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2019-12-19T04:29:17.273Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Cloudflare 加速 Github Pages<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>由于墙的原因，国内访问 Github Pages 的速度就是个迷，那么如何利用 CDN 加速呢？</p><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><ul><li>域名 (<a href="https://my.freenom.com/" target="_blank" rel="noreferrer">https://my.freenom.com/</a> 可申请免费域名)</li><li>Cloudflare 账号</li><li>Github Pages 设置</li></ul><h2 id="相关配置" tabindex="-1">相关配置 <a class="header-anchor" href="#相关配置" aria-label="Permalink to &quot;相关配置&quot;">​</a></h2><p>就拿本域名来举例子，<code>xligem.ml</code>，对应原来的 Github Pages <code>cwxyz007.github.io</code></p><p>在 Cloudflare 中添加域名，然后在 freenom 中设置 nameserver</p><p>在 Cloudflare 的 SSL/TLS -&gt; Edge Certificates 中，打开 Always Use Https</p><p>在 Cloudflare 的 DNS 中添加 CNAME -&gt; @, cwxyz007.github.io</p><p>在 Github Pages 的仓库设置中，找到 Custom domain，修改成 xligem.ml</p><p>然后就完成啦，现在通过 xligem.ml 访问 Github Pages 就会有 Cloudflare 的加速效果</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[V2Ray+Nginx+TLS]]></title>
            <link>https://blog.0x-jerry.icu/posts/v2ray+nginx+https</link>
            <guid>https://blog.0x-jerry.icu/posts/v2ray+nginx+https</guid>
            <pubDate>Tue, 13 Aug 2019 23:08:11 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>V2Ray+Nginx+TLS</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_v2ray_nginx_https.md.BXIG1rPR.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2019-08-14T07:08:11.906Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->V2Ray+Nginx+TLS<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p><strong>这是一篇技术性文章，读者需要掌握基础的 Linux 基础，关于安装等一些简单的操作不做详细介绍</strong></p><p>这是一个比较复杂的配置，但是如果拆分开来，也就都一些比较简单的配置堆在一起而已。拆分如下：</p><ol><li>申请域名</li><li>DNS 配置</li><li>Nginx Https 配置</li><li>V2Ray 配合 TLS 配置</li></ol><p>服务器，博主用的 Debian 10，其它类型服务器大同小异</p><h2 id="域名申请" tabindex="-1">域名申请 <a class="header-anchor" href="#域名申请" aria-label="Permalink to &quot;域名申请&quot;">​</a></h2><p>请自行 Google，不做讲解，假设申请的域名是 <code>test.v2ray.cn</code></p><h2 id="dns-配置" tabindex="-1">DNS 配置 <a class="header-anchor" href="#dns-配置" aria-label="Permalink to &quot;DNS 配置&quot;">​</a></h2><p>这里用 <a href="https://www.cloudflare.com/" target="_blank" rel="noreferrer">Cloudflare</a> 的免费 DNS 解析服务，登录上去，添加域名</p><p>然后在 DNS 里面配置服务器地址</p><p><strong>这里注意一下</strong> Crypto 里面的配置，由于 Cloudflare 自带 SSL 服务，默认会选择 <code>Flexible</code> 方案，这可能会 <a href="https://support.cloudflare.com/hc/en-us/articles/115000219871" target="_blank" rel="noreferrer">导致无限重定向的问题</a>。所以这里需要改成 <code>Full(strict)</code> 方案</p><p>然后在对应的域名服务商那里配上 Cloudflare 的域名服务器(nameservers)</p><p>到此 DNS 就配置完了</p><h2 id="nginx-https-配置" tabindex="-1">Nginx Https 配置 <a class="header-anchor" href="#nginx-https-配置" aria-label="Permalink to &quot;Nginx Https 配置&quot;">​</a></h2><p>DNS 配置完了，当然还需要配置 Https 才行</p><p>第一步当然是 <a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/install/" target="_blank" rel="noreferrer">安装 Nginx</a></p><p>然后是安装 TLS 证书，这里使用 <a href="https://certbot.eff.org/lets-encrypt/debianother-nginx" target="_blank" rel="noreferrer">Certbot</a> 傻瓜式一键安装，安装完之后，应该就可以用 Https 访问申请的域名了</p><h2 id="v2ray-配合-nginx" tabindex="-1">V2Ray 配合 Nginx <a class="header-anchor" href="#v2ray-配合-nginx" aria-label="Permalink to &quot;V2Ray 配合 Nginx&quot;">​</a></h2><p>这里直接参考 <a href="https://guide.v2fly.org/advanced/wss_and_web.html#%E9%85%8D%E7%BD%AE" target="_blank" rel="noreferrer">V2Ray 白话文</a></p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Docker 编译 ScratchBlocks]]></title>
            <link>https://blog.0x-jerry.icu/posts/cocker-compile-scratchblocks</link>
            <guid>https://blog.0x-jerry.icu/posts/cocker-compile-scratchblocks</guid>
            <pubDate>Fri, 26 Apr 2019 13:51:30 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Docker 编译 ScratchBlocks</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_cocker-compile-scratchblocks.md.CV2c7rN9.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2019-04-26T21:51:30.459Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Docker 编译 ScratchBlocks<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>很久之前就研究过 Docker，苦于一直没有找到应用场景（毕竟经常写的是前端）</p><p>最近在研究 <code>Scratch-Blocks</code> ，每次打包都需要在虚拟机里面打包（因为需要 Python 和 Java 环境），还比较慢。 今天就尝试了一下是不是可以用 Docker 来打包，这样就可以直接挂服务器上一键打包了。结果是肯定的，当然没问题</p><h2 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">​</a></h2><p>既然是 Docker， 那第一步肯定是写 Dockerfile 和 Dockerignore 了，Dockerignore 根据项目写就完了，语法和 gitignore 一样</p><p>需要注意的是，要缓存 node_modules，所以在执行 build 命令之前需要先单独复制 yarn.lock 文件，然后执行 <code>yarn install --ignore-scripts</code> 达到缓存 node_modules 的目的</p><p>这是因为 <code>RUN, COPY, ADD</code> 指令每次都会创建中间容器（缓存用），这样每次 yarn.lock 改变才会执行 <code>yarn install</code> 命令，这样也就达到了缓存 node_modules 的目的</p><p>有时候可能还需要 <code>package.json</code> 文件，这里也加上</p><div class="language-Dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Dockerfile</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"># linux core, only 5M</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">FROM</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">WORKDIR</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"># install nodejs python java</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">RUN</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> apk update &amp;&amp; apk add python nodejs yarn openjdk8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"># cache node_modules accord by yarn.lock</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">COPY</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> yarn.lock /app</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">COPY</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> package.json /app</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">RUN</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> yarn install --ignore-scripts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">COPY</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> . /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"># build</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">RUN</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> yarn build</span></span></code></pre></div><p>然后打包 <code>docker build --rm -f "Dockerfile" -t scratch-blocks:latest .</code>，收工完成</p><p>文中提到的命令以及参数请参考 <a href="https://docs.docker.com/engine/reference/commandline/build/" target="_blank" rel="noreferrer">docker build 文档</a>、<a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noreferrer">Dockerfile 文档</a></p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Base64 和 Blob]]></title>
            <link>https://blog.0x-jerry.icu/posts/base64-and-blob</link>
            <guid>https://blog.0x-jerry.icu/posts/base64-and-blob</guid>
            <pubDate>Thu, 25 Apr 2019 11:04:19 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Base64 和 Blob</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_base64-and-blob.md.C4tvfrKo.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2019-04-25T19:04:19.979Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Base64 和 Blob<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>利用 Base64 可以非常方便的存储/读取二进制文件，本文介绍如何在 Base64 和 Blob 之间转换</p><p>为什么要转换成 Blob 呢？ 因为 Blob 可以非常方便的转换成其他格式(文本，二进制，ArrayBuffer 等等)</p><blockquote><p>Base64 是一组相似的二进制到文本(binary-to-text)的编码规则，使得二进制数据在解释成 radix-64 的表现形式后能够用 ASCII 字符串的格式表示出来。Base64 这个词出自一种 MIME 数据传输编码。</p></blockquote><blockquote><p>Blob 对象表示一个不可变、原始数据的类文件对象。Blob 表示的不一定是 JavaScript 原生格式的数据。File 接口基于 Blob，继承了 blob 的功能并将其扩展使其支持用户系统上的文件。</p></blockquote><h2 id="base64-to-blob" tabindex="-1">Base64 To Blob <a class="header-anchor" href="#base64-to-blob" aria-label="Permalink to &quot;Base64 To Blob&quot;">​</a></h2><ol><li>用 <code>atob</code> 解码一个 Base64 字符串 (<code>btoa</code> 可以把二进制数据编码成 Base64 格式)</li><li>把转换后的字符串写进 Unit8Array 数组里面</li><li>把 Unit8Array 数组转换成 Blob</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">/**</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> * https://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> *</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> * </span><span style="--shiki-dark:#666666;--shiki-light:#999999;">@</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">param</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;">string</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> dataURI</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> * </span><span style="--shiki-dark:#666666;--shiki-light:#999999;">@</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">param</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;">number</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sliceSize</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> */</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> dataURIToBlob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">dataURI</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sliceSize</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 512</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> b64Data</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> dataURI</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">trim</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">().</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">split</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">,</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">]</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> contentType</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> dataURI</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">split</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">,</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">].</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">split</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">].</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">split</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">;</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)[</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteCharacters</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> atob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">b64Data</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteArrays</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  for</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">let</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> offset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> offset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteCharacters</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">length</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> offset</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> +=</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sliceSize</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteCharacters</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">offset</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> offset</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> +</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> sliceSize</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteNumbers</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Array</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">length</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">    for</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">let</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> i</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 0</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> i</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &lt;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">length</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> i</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">++</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">      byteNumbers</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">[</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">i</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">]</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> slice</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">charCodeAt</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">i</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> byteArray</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Uint8Array</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">byteNumbers</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    byteArrays</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">push</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">byteArray</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">  const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> Blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">byteArrays</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> type</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> contentType</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> })</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  return</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> blob</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><h2 id="blob-to-base64" tabindex="-1">Blob To Base64 <a class="header-anchor" href="#blob-to-base64" aria-label="Permalink to &quot;Blob To Base64&quot;">​</a></h2><ol><li>直接利用 FileReader 把 Blob 转换成 Base64</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">/**</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> * </span><span style="--shiki-dark:#666666;--shiki-light:#999999;">@</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">param</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#5DA994;--shiki-light:#2E8F82;">Blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> blob</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> */</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> readBlob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">  return</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> Promise</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">((</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">resolve</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> reader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> FileReader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    reader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">onload</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">evt</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> resolve</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">evt</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">target</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">result</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    reader</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">readAsDataURL</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">blob</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  })</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/API/Blob</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Mozilla/Add-ons/SDK/High-Level_APIs/base64" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Mozilla/Add-ons/SDK/High-Level_APIs/base64</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WindowBase64/Base64_encoding_and_decoding" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/API/WindowBase64/Base64_encoding_and_decoding</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[hexo+git+travis自动部署]]></title>
            <link>https://blog.0x-jerry.icu/posts/hexo-git-and-travis</link>
            <guid>https://blog.0x-jerry.icu/posts/hexo-git-and-travis</guid>
            <pubDate>Wed, 07 Nov 2018 21:41:11 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>hexo+git+travis自动部署</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_hexo-git-and-travis.md.DECR__jh.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2018-11-08T05:41:11.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->hexo+git+travis自动部署<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><blockquote><p>本文介绍如何使用 TravisCI 来实现 <code>git push</code> 之后，自动更新 GitHub Page</p></blockquote><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h2><p>本文章，默认读者已熟悉 travis 配置，以及 git 相关命令</p><h2 id="流程" tabindex="-1">流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;">​</a></h2><ol><li>git push</li><li>travis 执行脚本 <ol><li>安装依赖 <code>npm install</code> or <code>yarn</code></li><li>配置 git global config </li><li>clone git page 仓库</li><li>生成 html 静态文件</li><li>commit 更新时间</li><li>push</li></ol></li></ol><h2 id="生成-github-token" tabindex="-1">生成 github token <a class="header-anchor" href="#生成-github-token" aria-label="Permalink to &quot;生成 github token&quot;">​</a></h2><p>生成 token, 让 travis 可以根据 token 拿到 push 到 git 的权限</p><p><a href="https://github.com/settings/tokens" target="_blank" rel="noreferrer">生成 token 地址</a></p><figure><img src="/assets/gen-new-token.B_gobvn0.png" alt="Generate new token" tabindex="0" loading="lazy"><figcaption>Generate new token</figcaption></figure><p>生成新的 token 之后，在 travis 对应的仓库里面设置环境变量</p><figure><img src="/assets/settings.C9NSstEk.png" alt="settings" tabindex="0" loading="lazy"><figcaption>settings</figcaption></figure><p>之后就是写配置文件了</p><h2 id="travis-config" tabindex="-1">Travis Config <a class="header-anchor" href="#travis-config" aria-label="Permalink to &quot;Travis Config&quot;">​</a></h2><p>确定流程之后，就可以开始写配置文件 <code>.travis.yml</code>:</p><blockquote><p><code>date '+%Y-%m-%d %H:%M:%S'</code> 是获取系统时间，具体参考 <a href="http://manpages.ubuntu.com/manpages/cosmic/man1/date.1.html" target="_blank" rel="noreferrer">date command</a>, <a href="https://stackoverflow.com/questions/4651437/how-to-set-a-variable-to-the-output-of-a-command-in-bash" target="_blank" rel="noreferrer">set variable in bash</a></p></blockquote><ul><li>git commit -m "Site updated - <code>date '+%Y-%m-%d %H:%M:%S'</code>"</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">language</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> node_js</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">node_js</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> stable</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">before_install</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 配置 git global config</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git config user.name "cwxyz007"</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git config user.email "jie844067636@gmail.com"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">install</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 安装依赖</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> yarn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">before_script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # clone git page 仓库到 public 文件夹</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> mkdir ./public</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> cd ./public</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git clone "https://${GitRepo}" .</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> cd ..</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 生成 html 静态文件</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> hexo g</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">after_script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # commit 更新时间 以及 push</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> cd ./public</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git add .</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git commit -m "Site updated - `date '+%Y-%m-%d %H:%M:%S'`"</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  # GitToken 为上面配置的环境变量</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">  # GitRepo 在 env.global 有配置</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git push "https://${GitToken}@${GitRepo}" master:master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">branches</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  only</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 只更新 master 分支</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">cache</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 缓存 node_module 加快更新速度</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  yarn</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> true</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  npm</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">env</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #环境变量</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  global</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    -</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> TZ</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    -</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> GitRepo</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> github.com/cwxyz007/cwxyz007.github.io.git</span></span></code></pre></div><h2 id="坑" tabindex="-1">坑 <a class="header-anchor" href="#坑" aria-label="Permalink to &quot;坑&quot;">​</a></h2><p>在配置 <code>git commit</code> 命令的时候，配置为</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">script</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git commit -m "Site updated - `date '+%Y-%m-%d %H:%M:%S'`"</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 正确</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;"> git commit -m "Site updated</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;"> `</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">date '+%Y-%m-%d %H:%M:%S'`"</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 错误</span></span></code></pre></div><p>提交上去之后，Travis 提示 command not found，通过查找，发现是 yaml 语法错误，因为 <code>Site updated</code> 后面的 <code>:</code> 没有转义，所以整句命令执行出错，谨记！</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Node 项目配置最佳实践]]></title>
            <link>https://blog.0x-jerry.icu/posts/node-best-practice</link>
            <guid>https://blog.0x-jerry.icu/posts/node-best-practice</guid>
            <pubDate>Mon, 02 Apr 2018 21:13:42 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Node 项目配置最佳实践</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_node-best-practice.md.COEOXh3o.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2018-04-03T05:13:42.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Node 项目配置最佳实践<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><h2 id="引文" tabindex="-1">引文 <a class="header-anchor" href="#引文" aria-label="Permalink to &quot;引文&quot;">​</a></h2><p>在项目中，经常会有一堆配置文件，然后在其它文件里面引用的时候,如果层级比较多的时候，会出现路径很长的情况，例如在项目中有一个文件 <code>/a/b/c/index.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> require</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">../../../config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">doSomething</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">someConfig</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span></code></pre></div><p>就会出现很长的路径名。如果移动一下文件，那么就会涉及到 <strong>多个</strong> 文件的更改，而且每次引入 <code>config</code>，都会出现这么长的路径，比较容易出错。那么有没有一种优雅的方式来引入项目的 <code>config</code> 文件呢？</p><h2 id="优雅的引入-config" tabindex="-1">优雅的引入 <code>config</code> <a class="header-anchor" href="#优雅的引入-config" aria-label="Permalink to &quot;优雅的引入 `config`&quot;">​</a></h2><p>之前查看 <code>npm</code> 的一些问题的时候，偶然看到过，可以把本地文件夹当成 <code>package</code> 使用，如果可以这样的话，引入 <code>config</code> 就像这样</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> require</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span></code></pre></div><p>这样就很简单了，完全不需要知道 <code>config</code> 文件存放在哪个地方，只需要用就可以了。</p><p><strong>怎么能够实现这样呢？</strong></p><p>创建一个项目，目录类似下面这样</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>/config</span></span>
<span class="line"><span>  index.js</span></span>
<span class="line"><span>  package.json</span></span>
<span class="line"><span>index.js</span></span>
<span class="line"><span>package.json</span></span></code></pre></div><h3 id="配置-config" tabindex="-1">配置 <code>config</code> <a class="header-anchor" href="#配置-config" aria-label="Permalink to &quot;配置 `config`&quot;">​</a></h3><p>配置里面的东西就放在 <code>config/index.js</code> ，例如</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">module</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">exports</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  A</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  B</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">2</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  C</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">3</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><p>在 <code>config/package.json</code> 中定义这个 <code>module</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">{</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  "</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">name</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> "</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  "</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">version</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> "</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">1.0.0</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  "</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">main</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> "</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">index.js</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><h3 id="安装-config" tabindex="-1">安装 <code>config</code> <a class="header-anchor" href="#安装-config" aria-label="Permalink to &quot;安装 `config`&quot;">​</a></h3><p>然后在 <code>root</code> 目录下运行 <code>yarn add file:./config/</code>， <strong>注意最后有 <code>/</code></strong></p><p>在 <code>/package.json</code> 就会出现 <code>config</code> ，只不过对应的是 <strong>文件</strong>，而不是 <strong>版本号</strong> 或者 <strong>标签</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">{</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  "</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">name</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> "</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">test</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  "</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">version</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> "</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">1.0.0</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  "</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">main</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> "</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">index.js</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">  "</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">dependencies</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">    "</span><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">config</span><span style="--shiki-dark:#B8A96577;--shiki-light:#99841877;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> "</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">file:./config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  }</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><h3 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h3><p>最后在 <code>/index.js</code> 里面测试</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">const</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> require</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">config</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">A</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">           \\</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">1</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">B</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">           \\</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">2</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">console</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">log</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">config</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">C</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#DBD7CAEE;--shiki-light:#393A34;">           \\</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;">3</span></span></code></pre></div><h2 id="写在最后" tabindex="-1">写在最后 <a class="header-anchor" href="#写在最后" aria-label="Permalink to &quot;写在最后&quot;">​</a></h2><p>虽然这样可以更好的引入 <code>config</code> ，但也会出现不方便的时候，如果 <code>config</code> 文件频繁更改，那么每次更改都需要更新 <code>package</code></p><p>不过既然是配置文件，那么我想更新频率应该不会很好，不过也看具体的使用情况。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[AJAX 基础]]></title>
            <link>https://blog.0x-jerry.icu/posts/basic-ajax</link>
            <guid>https://blog.0x-jerry.icu/posts/basic-ajax</guid>
            <pubDate>Fri, 27 Oct 2017 05:08:27 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>AJAX 基础</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_basic-ajax.md.BVS2ccKC.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2017-10-27T13:08:27.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->AJAX 基础<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><blockquote><p>一种在无需重新加载整个网页的情况下，能够更新部分网页的技术</p></blockquote><h2 id="ajax-的核心部分" tabindex="-1">AJAX 的核心部分 <a class="header-anchor" href="#ajax-的核心部分" aria-label="Permalink to &quot;AJAX 的核心部分&quot;">​</a></h2><p>AJAX 的核心逻辑代码真心少的可怜～，总结一下，一共就三部分。</p><ol><li>创建 <code>XMLHttpRequest</code> 对象</li><li>创建 <code>XMLHttpRequest</code> 在 <code>readyState</code> 发生变化时的回调函数</li><li>使用 <code>XMLHttpRequest</code> 发送请求</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> loadXMLDoc</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">url</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> callback</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">    // 创建对象</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">    let</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> xmlhttp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> window</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">XMLHttpRequest</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> ?</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> XMLHttpRequest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> :</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> new</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> ActiveXObject</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">Microsoft.XMLHTTP</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">    // 接收到数据之后的处理</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    xmlhttp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">onreadystatechange</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> function</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">()</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">        callback</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">xmlhttp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">    // 发送请求</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    xmlhttp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">open</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">GET</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> url</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">,</span><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;"> true</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">);</span></span>
<span class="line"><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">    xmlhttp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">send</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">();</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">// 处理函数</span></span>
<span class="line"><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> callbackTest</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">(</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">xmlhttp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">    // 请求成功</span></span>
<span class="line"><span style="--shiki-dark:#4D9375;--shiki-light:#1E754F;">    if</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> (</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">xmlhttp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">readyState</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> ==</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 4</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> &amp;&amp;</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;"> xmlhttp</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">.</span><span style="--shiki-dark:#BD976A;--shiki-light:#B07D48;">status</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> ==</span><span style="--shiki-dark:#4C9A91;--shiki-light:#2F798A;"> 200</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">)</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">        // do somthing</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">    }</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">}</span></span></code></pre></div><p>看到这里，其实就完了，真正的逻辑就这么几行代码。AJAX 处理的事情就到这里结束了，具体拿到请求之后的数据怎么处理，那些都不是 AJAX 需要关心的事情</p><p><strong>具体实例可参考 <a href="https://www.w3cschool.cn/ajax/aeqvxfnu.html" target="_blank" rel="noreferrer">AJAX 实例</a></strong></p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Hexo 入门]]></title>
            <link>https://blog.0x-jerry.icu/posts/basic-hexo</link>
            <guid>https://blog.0x-jerry.icu/posts/basic-hexo</guid>
            <pubDate>Wed, 25 Oct 2017 05:08:27 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Hexo 入门</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_basic-hexo.md.DgbOcA4h.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2017-10-25T13:08:27.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Hexo 入门<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>就把这篇文章算做自己的第一篇技术文章吧！以后这个博客就拿来记录自己的一些技术心得。</p><p>官方文档已经很详细了，为什么我还要写一遍呢？记录之，巩固之</p><h2 id="安装之前的准备" tabindex="-1">安装之前的准备 <a class="header-anchor" href="#安装之前的准备" aria-label="Permalink to &quot;安装之前的准备&quot;">​</a></h2><p>安装 <a href="http://nodejs.cn/" target="_blank" rel="noreferrer">Nodejs</a> 和 <a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npm</a>，推荐使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noreferrer">nvm</a> 来安装。既然都推荐使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noreferrer">nvm</a> 了，那就再推荐一下包管理工具 <a href="https://yarnpkg.com/zh-Hans/" target="_blank" rel="noreferrer">Yarn</a></p><h2 id="安装-hexo" tabindex="-1">安装 Hexo <a class="header-anchor" href="#安装-hexo" aria-label="Permalink to &quot;安装 Hexo&quot;">​</a></h2><p>如果上面安装好了，那现在就特别简单了。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> install</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> hexo-cli</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -g</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #全局安装</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> isntall</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> hexo-cli</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --save</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #当前项目安装</span></span></code></pre></div><p>以上二选一即可，当然用 <a href="https://yarnpkg.com/zh-Hans/" target="_blank" rel="noreferrer">Yarn</a> 安装也是可以的</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">yarn</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> global</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> add</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> hexo-cli</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #全局安装</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">yarn</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> add</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> hexo-cli</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #当前项目安装</span></span></code></pre></div><h2 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h2><p>安装完成之后，那就是找个文件夹来初始化博客项目了。随便找个文件夹，运行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">hexo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> init</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> install</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 或者 yarn</span></span></code></pre></div><p>然后，就好了～</p><blockquote><p>Tips：这里需要全局安装，若不是全局安装，则需要在安装 Hexo 的那个目录下的 config.json 里面的配置相应的命令然后使用 npm 或者 yarn 运行</p></blockquote><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>配置文件为 <code>_config.yml</code> ，配置文件的详细说明 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noreferrer">Hexo 配置</a></p><p>这里找到配置文件，就可以为所欲为啦！自己去魔改吧。这里还不能说是魔改，毕竟只是一些基本的配置！</p><h2 id="写作" tabindex="-1">写作 <a class="header-anchor" href="#写作" aria-label="Permalink to &quot;写作&quot;">​</a></h2><p>既然是博客，那肯定需要有写作的地方才行啊，所以要怎么写一篇新文章呢？很简单，在博客的目录运行如下命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">hexo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> new</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">新文章</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span></code></pre></div><p>就这样，一篇新文章就这样诞生了，当然还得需要你去充实它～</p><blockquote><p>Tips：文章使用 <a href="https://github.com/Melo618/Simple-Markdown-Guide" target="_blank" rel="noreferrer">Markdown</a> 语法来排版，特别好用，不会就赶紧看看吧。十分钟即可入门，两小时即可熟练使用。</p></blockquote><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><p>写好了文章，那要怎么看效果呢，为怎么知道我写了之后的排版到底是怎么样的呢？简单哟～，一句命令搞定</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">hexo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> s</span></span></code></pre></div><p>然后在浏览器里面打开 <a href="http://localhost:4000" target="_blank" rel="noreferrer">http://localhost:4000</a> ，就可以预览你的博客啦～</p><h2 id="部署到-github-page" tabindex="-1">部署到 GitHub Page <a class="header-anchor" href="#部署到-github-page" aria-label="Permalink to &quot;部署到 GitHub Page&quot;">​</a></h2><p><a href="https://github.com/" target="_blank" rel="noreferrer">GitHub</a> 提供了一个 <a href="https://pages.github.com/" target="_blank" rel="noreferrer">GitHub Page</a> 页面，咱们就用这个页面来存放自己的博客吧，当然也可以部署到自己的服务器上～，这里就只介绍怎么部署到 <a href="https://pages.github.com/" target="_blank" rel="noreferrer">GitHub Page</a> 上～</p><h3 id="创建-github-page-仓库" tabindex="-1">创建 GitHub Page 仓库 <a class="header-anchor" href="#创建-github-page-仓库" aria-label="Permalink to &quot;创建 GitHub Page 仓库&quot;">​</a></h3><p>创建一个仓库名为 <code>username.github.io</code> 其中 <code>username</code> 就是你的 GitHub 的用户名</p><h3 id="添加-hexo-deployer-git-插件" tabindex="-1">添加 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noreferrer">hexo-deployer-git</a> 插件 <a class="header-anchor" href="#添加-hexo-deployer-git-插件" aria-label="Permalink to &quot;添加 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git) 插件&quot;">​</a></h3><p>这是一个快速部署到 GitHub 的插件，安装也特别简单，一句命令搞定</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> install</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> hexo-deployer-git</span></span></code></pre></div><h3 id="配置-deploy" tabindex="-1">配置 deploy <a class="header-anchor" href="#配置-deploy" aria-label="Permalink to &quot;配置 deploy&quot;">​</a></h3><p>然后在之前介绍的配置文件中配置 deploy</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">deploy</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  type</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">  repo</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> git@github.com:username/username.github.io.git</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 把 username 替换成你自己用户名</span></span></code></pre></div><h3 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h3><p>万事俱备，只欠东风～</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">hexo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> deploy</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> # 或者 hexo d</span></span></code></pre></div><p>之后，应该会提示你登陆 GitHub ，登陆之后就会自动部署到你的 GitHub Page ，然后你可以通过访问 username.github.io 来访问你自己的博客</p><h2 id="主题" tabindex="-1">主题 <a class="header-anchor" href="#主题" aria-label="Permalink to &quot;主题&quot;">​</a></h2><p>到了这里，你已经可是使用 Hexo 来写博客了，但是呢！默认的主题不好看，对不起，我是外貌协会的，怎么办～没关系，配置文件里面不是有 <code>theme</code> 这个配置项吗，那就说明，主题是可以更改的！</p><p><a href="https://hexo.io/themes/" target="_blank" rel="noreferrer">Hexo 主题</a> 这里有很多主题，你只需要下在下来放到 <code>themes</code>文件夹里面，然后把配置文件里面的 <code>theme</code> 改成相应的主题名字即可，当你再次测试你的博客的时候，你会发现你的主题已经改变了。</p><h2 id="更多" tabindex="-1">更多 <a class="header-anchor" href="#更多" aria-label="Permalink to &quot;更多&quot;">​</a></h2><p>到这个时候，估计你应该会有很多问题了，但是呢，你的那些问题都不是问题，你可以查阅 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noreferrer">Hexo 文档</a>，以及相关主题的文档来解决你的问题，当然也欢迎在下方留言，我们可以一起交流，讨论～</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[JavaScript 持续集成]]></title>
            <link>https://blog.0x-jerry.icu/posts/js-ci</link>
            <guid>https://blog.0x-jerry.icu/posts/js-ci</guid>
            <pubDate>Thu, 28 Sep 2017 17:25:18 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>JavaScript 持续集成</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_js-ci.md.2sUEccG1.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2017-09-29T01:25:18.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->JavaScript 持续集成<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>这篇文章的目标就是在 GitHub 上显示如下图标。当然不是简单的显示两张图片，而是显示当前项目的一些状态。</p><figure><img src="/assets/icon.B61cb5X9.png" alt="icon" tabindex="0" loading="lazy"><figcaption>icon</figcaption></figure><p>持续集成官网： <a href="https://travis-ci.org/" target="_blank" rel="noreferrer">Travis-ci</a> 测试覆盖率官网：<a href="https://coveralls.io/" target="_blank" rel="noreferrer">COVERALLS</a></p><figure><img src="/assets/build.DDiguZOE.png" alt="Build 状态" tabindex="0" loading="lazy"><figcaption>Build 状态</figcaption></figure><figure><img src="/assets/test.Cx0AA-CR.png" alt="测试状态" tabindex="0" loading="lazy"><figcaption>测试状态</figcaption></figure><h2 id="持续集成" tabindex="-1">持续集成 <a class="header-anchor" href="#持续集成" aria-label="Permalink to &quot;持续集成&quot;">​</a></h2><p>如果项目中没有测试，那么就不需要包含测试覆盖率这一块。</p><p>首先创建一个简单的项目</p><figure><img src="/assets/project.B4IGhmKD.png" alt="项目" tabindex="0" loading="lazy"><figcaption>项目</figcaption></figure><p>那么第一步，当然是选择跟着<a href="https://docs.travis-ci.com/user/languages/javascript-with-nodejs/" target="_blank" rel="noreferrer">官方文档</a>走啦，先创建 <code>.travis.yml</code> 文件，查看 <code>node</code> 版本 <code>node -v</code>。然后填进去，我的是 8.5.0，所以我的文件是这样的：</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">language</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> node_js</span></span>
<span class="line"><span style="--shiki-dark:#B8A965;--shiki-light:#998418;">node_js</span><span style="--shiki-dark:#666666;--shiki-light:#999999;">:</span></span>
<span class="line"><span style="--shiki-dark:#666666;--shiki-light:#999999;">  -</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">8</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span></span></code></pre></div><p>然后 <code>git push</code> 到 GitHub ，然后刷新 Travis CI 的页面：</p><figure><img src="/assets/test1.boCO3QVt.png" alt="Test" tabindex="0" loading="lazy"><figcaption>Test</figcaption></figure><p>就这样，持续集成就 OK 了，是不是很简单，然后点击 passing 图标，选择 Markdown 写到 readme 里面就可以在 GitHub 上看到了。</p><h2 id="测试覆盖率" tabindex="-1">测试覆盖率 <a class="header-anchor" href="#测试覆盖率" aria-label="Permalink to &quot;测试覆盖率&quot;">​</a></h2><p>同样的，跟着<a href="https://coveralls.zendesk.com/hc/en-us/articles/201769715-Javascript-Node" target="_blank" rel="noreferrer">官方文档</a>上的第一个 <a href="https://github.com/nickmerwin/node-coveralls" target="_blank" rel="noreferrer">node-coveralls</a> 走。项目还是上面那个测试项目。</p><p>测试项目的目录：</p><figure><img src="/assets/testProject.B-dvcbD2.png" alt="测试项目" tabindex="0" loading="lazy"><figcaption>测试项目</figcaption></figure><p>在 <a href="https://github.com/nickmerwin/node-coveralls" target="_blank" rel="noreferrer">node-coveralls</a> 里面有很多钟方式，我选择 <a href="https://github.com/gotwarlost/istanbul" target="_blank" rel="noreferrer">Istanbul</a> + <a href="https://github.com/mochajs/mocha" target="_blank" rel="noreferrer">mocha</a>。</p><p>那么，第一步，当然是安装 <a href="https://github.com/gotwarlost/istanbul" target="_blank" rel="noreferrer">Istanbul</a> + <a href="https://github.com/mochajs/mocha" target="_blank" rel="noreferrer">mocha</a> 啦，当然还要安装 <a href="https://coveralls.io/" target="_blank" rel="noreferrer">coveralls</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>npm install mocha --save-dev #安装 mohca</span></span>
<span class="line"><span>npm install istanbul --save-dev #安装 istanbul</span></span>
<span class="line"><span>npm install coveralls --save-dev #安装 coveralls</span></span></code></pre></div><p>为了不把 node_module 上传到 GitHub ，所以还需要创建 `.gitignore' ，在里面添加 node_module 文件夹。</p><p>然后写测试，测试为：</p><figure><img src="/assets/testProject1.DQzC78z1.png" alt="测试项目" tabindex="0" loading="lazy"><figcaption>测试项目</figcaption></figure><p>修改 <code>package.json</code> 里面的 <code>test</code> 脚本为</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">istanbul</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> cover</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> ./node_modules/mocha/bin/_mocha</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --report</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> lcovonly</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -R</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> spec</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &amp;&amp;</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> cat</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> ./coverage/lcov.info</span><span style="--shiki-dark:#CB7676;--shiki-light:#AB5959;"> |</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> ./node_modules/coveralls/bin/coveralls.js</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &amp;&amp;</span><span style="--shiki-dark:#80A665;--shiki-light:#59873A;"> rm</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -rf</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> ./coverage</span></span></code></pre></div><p>然后运行 <code>npm test</code> 命令，会提示一个错误，那个是因为没有在 `package.json' 里面添加 repository 地址，可以忽略。</p><figure><img src="/assets/testResult.BxW2zMSa.png" alt="测试结果" tabindex="0" loading="lazy"><figcaption>测试结果</figcaption></figure><p>到这一步，就可以把项目 push 到 GitHub 上去了。然后刷新在 <a href="https://coveralls.io/" target="_blank" rel="noreferrer">COVERALLS</a> 上的项目的网页。</p><figure><img src="/assets/cover.CnX41fV4.png" alt="测试覆盖率" tabindex="0" loading="lazy"><figcaption>测试覆盖率</figcaption></figure><p>就可以看到成功了！然后点击 EMBED 图标，选择 Markdown 复制到 readme 里面，就可以显示在 GitHub 上了。</p><p>关于 <a href="https://docs.travis-ci.com/user/languages/javascript-with-nodejs/" target="_blank" rel="noreferrer">Travis CI</a> 和 <a href="https://coveralls.zendesk.com/hc/en-us/articles/201769715-Javascript-Node" target="_blank" rel="noreferrer">COVERALLS</a> 的具体的配置。请参考相应的官网的说明。</p><h2 id="项目地址" tabindex="-1">项目地址 <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址&quot;">​</a></h2><p>本篇文章的项目的 GitHub 地址 ：<a href="https://github.com/cwxyz007/TravisTest" target="_blank" rel="noreferrer">Travis Test</a></p><p>到这里还不赶紧去 GitHub 上配置一波～。 如果本篇文章对你有帮助，为什么不点一波喜欢在走呢～</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Ubuntu 装机清单]]></title>
            <link>https://blog.0x-jerry.icu/posts/ubuntu-app</link>
            <guid>https://blog.0x-jerry.icu/posts/ubuntu-app</guid>
            <pubDate>Fri, 22 Sep 2017 17:00:49 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Ubuntu 装机清单</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_ubuntu-app.md.pld2-kWt.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2017-09-23T01:00:49.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Ubuntu 装机清单<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>第一步：更新驱动 第二步：安装 <a href="https://github.com/shadowsocks/shadowsocks-qt5" target="_blank" rel="noreferrer">shadowsocks</a>、<a href="https://github.com/JinnLynn/genpac" target="_blank" rel="noreferrer">genpac</a> 第三步：安装 <a href="https://www.google.com/chrome/browser/desktop/index.html" target="_blank" rel="noreferrer">chrome</a></p><p>然后就可以愉快的安装其他软件了。</p><h2 id="软件清单" tabindex="-1">软件清单 <a class="header-anchor" href="#软件清单" aria-label="Permalink to &quot;软件清单&quot;">​</a></h2><ul><li><a href="https://github.com/liuqun/njit8021xclient" target="_blank" rel="noreferrer">njit8021xclient</a>：校园网</li><li><a href="http://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="noreferrer">搜狗输入法</a>：Linux 版的中文输入法</li><li><a href="http://ohmyz.sh/" target="_blank" rel="noreferrer">oh-my-zsh</a>：替换 bash ，漂亮的命令行</li><li><a href="https://chromium.woolyss.com/#linux" target="_blank" rel="noreferrer">chromium</a>：Chrome的工程版或称实验版</li><li><a href="https://cerebroapp.com/" target="_blank" rel="noreferrer">cerebro</a>：一个好用的快速启动工具，插件丰富</li></ul><h2 id="桌面系统" tabindex="-1">桌面系统 <a class="header-anchor" href="#桌面系统" aria-label="Permalink to &quot;桌面系统&quot;">​</a></h2><p>现在 Ubuntu 可以使用 <a href="https://ubuntugnome.org/" target="_blank" rel="noreferrer">Gnome</a> 桌面了。终于可以愉快的玩耍啦，<a href="https://www.gnome-look.org/" target="_blank" rel="noreferrer">gnome 主题列表</a>、<a href="https://extensions.gnome.org/" target="_blank" rel="noreferrer">gnome 扩展列表</a></p><ul><li><a href="https://github.com/nzjrs/gnome-tweak-tool" target="_blank" rel="noreferrer">gnome-tweak-tool</a>：gnome 主题管理工具</li></ul><h3 id="主题" tabindex="-1">主题 <a class="header-anchor" href="#主题" aria-label="Permalink to &quot;主题&quot;">​</a></h3><ul><li><a href="https://www.gnome-look.org/p/1013698/" target="_blank" rel="noreferrer">Vimix Gtk Theme</a>：一款 gnome 主题</li></ul><h3 id="gnome-扩展" tabindex="-1">gnome 扩展 <a class="header-anchor" href="#gnome-扩展" aria-label="Permalink to &quot;gnome 扩展&quot;">​</a></h3><ul><li><a href="https://extensions.gnome.org/extension/570/todotxt/" target="_blank" rel="noreferrer">todo</a>：任务清单</li><li><a href="https://extensions.gnome.org/extension/19/user-themes/" target="_blank" rel="noreferrer">User Themes</a>：主题支持扩展</li><li><a href="https://extensions.gnome.org/extension/495/topicons/" target="_blank" rel="noreferrer">TopIcons</a>：把图标放在顶部栏</li><li><a href="https://extensions.gnome.org/extension/307/dash-to-dock/" target="_blank" rel="noreferrer">Dash to Dock</a>：把 dash 变成 dock</li><li><a href="https://extensions.gnome.org/extension/1036/extensions/" target="_blank" rel="noreferrer">Extensions</a>：快速管理 gnome 扩展</li><li><a href="https://extensions.gnome.org/extension/779/clipboard-indicator/" target="_blank" rel="noreferrer">Clipboard Indicator</a>：粘贴板历史记录</li><li><a href="https://extensions.gnome.org/extension/358/activities-configurator/" target="_blank" rel="noreferrer">Activities Configurator</a>：自定义顶部栏</li><li><a href="https://extensions.gnome.org/extension/15/alternatetab/" target="_blank" rel="noreferrer">AlternateTab</a>：像 windows 一样切换应用</li><li><a href="https://extensions.gnome.org/extension/72/recent-items/" target="_blank" rel="noreferrer">Recent Items</a>：最近浏览的文件的历史记录</li><li><a href="https://extensions.gnome.org/extension/7/removable-drive-menu/" target="_blank" rel="noreferrer">Removable Drive Menu</a>：USB 等外接硬盘移除菜单</li></ul><h2 id="oh-my-zsh-主题" tabindex="-1">oh-my-zsh 主题 <a class="header-anchor" href="#oh-my-zsh-主题" aria-label="Permalink to &quot;oh-my-zsh 主题&quot;">​</a></h2><p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes" target="_blank" rel="noreferrer">主题列表</a></p><ul><li><a href="https://github.com/bhilburn/powerlevel9k" target="_blank" rel="noreferrer">Powerlevel9k</a>：我使用的主题</li></ul><h2 id="oh-my-zsh-插件" tabindex="-1">oh-my-zsh 插件 <a class="header-anchor" href="#oh-my-zsh-插件" aria-label="Permalink to &quot;oh-my-zsh 插件&quot;">​</a></h2><p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins" target="_blank" rel="noreferrer">插件列表</a></p><ul><li><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugin:git" target="_blank" rel="noreferrer">git</a>：git 命令别名工具</li><li><a href="https://github.com/wting/autojump" target="_blank" rel="noreferrer">autojump</a>：在路径之间旋转、跳跃</li><li><a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noreferrer">zsh-autosuggestions</a>：命令的历史记录</li><li><a href="https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/extract" target="_blank" rel="noreferrer">extract</a>：超级好用的解压命令，一个 <code>x</code> 可以解压大部分压缩包</li></ul><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><ul><li><a href="https://alim0x.gitbooks.io/awesome-linux-software-zh_cn/content/" target="_blank" rel="noreferrer">超赞的 Linux 软件</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Linux 下 iNode 解决方案]]></title>
            <link>https://blog.0x-jerry.icu/posts/inode</link>
            <guid>https://blog.0x-jerry.icu/posts/inode</guid>
            <pubDate>Mon, 18 Sep 2017 17:04:54 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Linux 下 iNode 解决方案</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_inode.md.D1WIcIu0.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2017-09-19T01:04:54.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Linux 下 iNode 解决方案<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><p>由于学校的 iNode 客户端 Linux 版太古老了，安装起来遇到各种各样的问题。所以就在 github 搜了一搜，看有没有什么开源的 iNode 的替代品。结果就让我找到了！</p><p>开源的 iNode 替代品 <a href="https://github.com/liuqun/njit8021xclient/blob/master/ReadMe.html" target="_blank" rel="noreferrer">njit8021xclient</a>。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>按照 <a href="https://github.com/liuqun/njit8021xclient/blob/master/Install.html" target="_blank" rel="noreferrer">install.html</a> 编译安装。</p><p>编译的时候注意<strong>第一次</strong>需要<strong>先</strong>在 <code>njit-clinet</code> 项目的根目录下运行命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">autoreconf</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --install</span></span></code></pre></div><p>然后安装说明编译安装就行了。</p><p>不同的 Linux 版本 <code>autoreconf</code> 可能不同，可自行搜索安装。</p><h2 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">iwconfig</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #查看网卡</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">sudo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> njit-client</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> 用户名</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> 密码</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> 网卡</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #可在后面添加 &amp; 符号，使其后台运行。</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">sudo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> njit-client</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> 用户名</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> 密码</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> 网卡</span><span style="--shiki-dark:#666666;--shiki-light:#999999;"> &amp;</span></span></code></pre></div><p>网卡需要输入你电脑连上的那个网卡。有时候是<strong>无线</strong>的网卡，有时候是<strong>有线</strong>的网卡。</p><h2 id="其他相关" tabindex="-1">其他相关 <a class="header-anchor" href="#其他相关" aria-label="Permalink to &quot;其他相关&quot;">​</a></h2><h3 id="自动获取-ip" tabindex="-1">自动获取 IP <a class="header-anchor" href="#自动获取-ip" aria-label="Permalink to &quot;自动获取 IP&quot;">​</a></h3><p>可能还需要设置自动获取 ip，设置方式： 打开网络连接设置。找到设置面板。然后在 IPv4 设置中选择 DHCP 模式。</p><p>如图：</p><figure><img src="/assets/dhcp.DAWRVWvw.png" alt="设置网卡" tabindex="0" loading="lazy"><figcaption>设置网卡</figcaption></figure><h3 id="修改-dns" tabindex="-1">修改 dns <a class="header-anchor" href="#修改-dns" aria-label="Permalink to &quot;修改 dns&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;">#临时修改 dns</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">sudo</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> vim</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> /etc/resolv.conf</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #修改 nameserver 后面的地址就好了。</span></span></code></pre></div><p>也可以直接在设置面板里面设置 dns，设置如图：</p><figure><img src="/assets/dns.Cnp6g4qC.png" alt="设置 dns" tabindex="0" loading="lazy"><figcaption>设置 dns</figcaption></figure><p>在 Additional DNS servers 后面填上 dns 地址即可。我填的的是阿里提供的 DNS 地址。</p></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Git 安装及常用命令]]></title>
            <link>https://blog.0x-jerry.icu/posts/baisc-git</link>
            <guid>https://blog.0x-jerry.icu/posts/baisc-git</guid>
            <pubDate>Sun, 16 Apr 2017 17:45:21 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Git 安装及常用命令</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_baisc-git.md.nDe1nFNd.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2017-04-17T01:45:21.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->Git 安装及常用命令<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><blockquote><p>git 是一个分布式版本控制软件，最初由林纳斯·托瓦兹（Linus Torvalds）创作，于 2005 年以 GPL 发布。最初目的是为更好地管理 Linux 内核开发而设计。</p></blockquote><blockquote><p>git 是用于 Linux 内核开发的版本控制工具。与 CVS、Subversion 一类的集中式版本控制工具不同，它采用了分布式版本库的作法，不需要服务器端软件，就可以运作版本控制，使得源代码的发布和交流极其方便。git 的速度很快，这对于诸如 Linux 内核这样的大项目来说自然很重要。git 最为出色的是它的合并追踪（merge tracing）能力。</p></blockquote><h2 id="安装环境" tabindex="-1">安装环境 <a class="header-anchor" href="#安装环境" aria-label="Permalink to &quot;安装环境&quot;">​</a></h2><p>linux 环境下安装 Git</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install git</span></span></code></pre></div><h2 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h2><p><strong>配置文件</strong></p><p>三种配置文件：</p><ol><li><code>/etc/gitconfig</code> 文件：包含系统上每一个用户及他们仓库的通用配置。如果使用带有 <code>--system</code> 选项的 <code>git config</code> 时，它会从此文件读写配置变量。</li><li><code>~/.gitconfig</code> 或 <code>~/.config/git/config</code> 文件：只针对当前用户。可以传递 <code>--global</code> 选项让 Git 读写此文件。</li><li>当前使用仓库的 Git 目录中的 <code>config</code> 文件（就是 <code>.git/config</code>）：针对该仓库。</li></ol><p>每一个级别覆盖上一个级别的配置：3 中的配置覆盖 2 中的配置，2 中的配置覆盖 1 中的配置。</p><p><strong>配置用户信息</strong></p><p>根据需求，可以配置不同种类的配置，例如下面的配置适用于所有仓库。若需要其它配置，可以在设置相应仓库下的配置文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git config --global user.name "John Doe" #你的用户名</span></span>
<span class="line"><span>git config --global user.email johndoe@example.com #你的邮箱地址</span></span></code></pre></div><p><strong>默认编辑工具</strong></p><p>vim 是 linux 下的一款文本编辑软件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git config --global core.editor vim</span></span></code></pre></div><p><strong>检查配置信息</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git config --list #检查所有配置</span></span>
<span class="line"><span>git config user.name #检查 user.name 这一项配置</span></span></code></pre></div><p><strong>获取命令帮助</strong></p><p>三种获取帮助的方式</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git help config #获取 config 的命令帮助</span></span>
<span class="line"><span>git config --help #获取 config 的命令帮助</span></span>
<span class="line"><span>man git config  #获取 config 的命令帮助</span></span></code></pre></div><h2 id="仓库操作" tabindex="-1">仓库操作 <a class="header-anchor" href="#仓库操作" aria-label="Permalink to &quot;仓库操作&quot;">​</a></h2><p><strong>初始化仓库</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git init</span></span></code></pre></div><p><strong>添加文件</strong></p><p>这里的 <code>add</code> 表示添加到下一次提交，而不是添加到项目里面</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> add</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> "</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">*.c</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">"</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #添加所有 .c 文件</span></span></code></pre></div><p><strong>提交</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> commit</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -m</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">create github</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #提交暂存区并附上说明：create github</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> commit</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -a</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -m</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;"> '</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;">creat github</span><span style="--shiki-dark:#C98A7D77;--shiki-light:#B5695977;">'</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #直接提交所以已跟踪的文件并附上说明</span></span></code></pre></div><p><a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E8%AE%B0%E5%BD%95%E6%AF%8F%E6%AC%A1%E6%9B%B4%E6%96%B0%E5%88%B0%E4%BB%93%E5%BA%93" target="_blank" rel="noreferrer">粗略理解 Git 工作过程</a></p><p><strong>查看状态</strong></p><p>查看每个跟踪的文件的状态</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git status</span></span></code></pre></div><p><strong>忽略文件</strong></p><p>在工作目录创建一个文件名为 <code>.gitigrone</code>，然后列出忽略列表。</p><p>忽略列表可以使用 glob 模式（一个简化的正则表达式）。</p><p><code>.gitigrone</code> 模板：<a href="https://github.com/github/gitignore" target="_blank" rel="noreferrer">https://github.com/github/gitignore</a></p><p><strong>查看修改</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git diff</span></span></code></pre></div><p><strong>移除文件</strong></p><p><code>rm</code> 后面的参数可以使用 <code>glob</code> 模式</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> rm</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> README</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #移除 README 文件，会删除相应的文件</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> rm</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --cached</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> README</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #仅移除 Git 对 README 文件的追踪，不会删除文件</span></span></code></pre></div><p><strong>移动文件</strong></p><p><code>git mv</code> 命令相当与执行一下三条命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>mv README readme</span></span>
<span class="line"><span>git rm README</span></span>
<span class="line"><span>git add readme</span></span></code></pre></div><p>所以 <code>mv</code> 命令相当于重命名</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> mv</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> README</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> readme</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #将 README 更名为 readme</span></span></code></pre></div><p><strong>查看提交历史</strong></p><p><code>git log</code> 参数较多，详细研究点击 <a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2" target="_blank" rel="noreferrer"><code>git log</code> 详情</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> log</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #查看所有记录</span></span>
<span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> log</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -p</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> -2</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #查看最近的两次提交记录，以及详细信息</span></span></code></pre></div><p><strong>撤销操作</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git commit --amend</span></span>
<span class="line"><span>#在你上次提交之后，追加提交，只算一次提交，即这一次提交会覆盖上一次提交</span></span></code></pre></div><p>取消暂存的文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>git reset HEAD README #取消 README 文件的暂存</span></span></code></pre></div><p>撤消对文件的修改</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#80A665;--shiki-light:#59873A;">git</span><span style="--shiki-dark:#C98A7D;--shiki-light:#B56959;"> checkout</span><span style="--shiki-dark:#C99076;--shiki-light:#A65E2B;"> --README</span><span style="--shiki-dark:#758575DD;--shiki-light:#A0ADA0;"> #撤销对 README 文件的修改，回到上一次提交的状态</span></span></code></pre></div><h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h2><ul><li>Git 教学：<a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noreferrer">https://git-scm.com/book/zh/v2</a></li><li>Git 指令参考：<a href="https://git-scm.com/docs" target="_blank" rel="noreferrer">https://git-scm.com/docs</a></li><li>Liunx 下的图形界面 Git：<a href="https://www.gitkraken.com/" target="_blank" rel="noreferrer">https://www.gitkraken.com/</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[正则表达式]]></title>
            <link>https://blog.0x-jerry.icu/posts/regexp</link>
            <guid>https://blog.0x-jerry.icu/posts/regexp</guid>
            <pubDate>Sun, 26 Mar 2017 17:49:44 GMT</pubDate>
            <content:encoded><![CDATA[<!DOCTYPE html><html lang="en-US" dir="ltr"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>正则表达式</title>
    <meta name="description" content="A VitePress site">
    <meta name="generator" content="VitePress v1.6.3">
    <link rel="preload stylesheet" href="/assets/style.EzQvn9cq.css" as="style">
    <link rel="preload stylesheet" href="/vp-icons.css" as="style">
    
    <script type="module" src="/assets/app.ClZH0l0l.js"></script>
    <link rel="modulepreload" href="/assets/chunks/theme.CyhJ7EsG.js">
    <link rel="modulepreload" href="/assets/chunks/framework.CAaOUjTN.js">
    <link rel="modulepreload" href="/assets/posts_regexp.md.HLzci60x.lean.js">
    <meta name="rss" content="/rss.xml">
    <link href="/rss.xml" rel="alternate" title="RSS" type="application/rss+xml">
    <script id="check-dark-mode">(()=>{const e=localStorage.getItem("vitepress-theme-appearance")||"auto",a=window.matchMedia("(prefers-color-scheme: dark)").matches;(!e||e==="auto"?a:e==="dark")&&document.documentElement.classList.add("dark")})();</script>
    <script id="check-mac-os">document.documentElement.classList.toggle("mac",/Mac|iPhone|iPod|iPad/i.test(navigator.platform));</script>
    <meta name="date" content="2017-03-27T01:49:44.000Z">
  </head>
  <body>
    <div id="app"><div class="w-full flex flex-col xl:flex-row" data-v-acf221f1=""><div class="flex flex-col min-h-screen px-2 xl:px-0 w-700px max-w-full mx-auto xl:mx-0" data-v-acf221f1=""><div class="flex-1" data-v-acf221f1=""><!--[--><div class="v-post" data-v-3584d80f=""><div class="pt-3 sticky top-0 bg-white pb-2 border-0 border-b border-solid border-gray-2 z-1" data-v-3584d80f=""><div class="flex items-center gap-3 text-xl xl:text-2xl"><a class="cursor-pointer flex"><span class="inline-flex text-lg bg-bGray-100 p-1 rounded"><i class="i-carbon-arrow-left"></i></span></a><!--[-->正则表达式<!--]--></div></div><div class="flex mt-4" data-v-3584d80f=""><div class="post-content flex-1 w-0 px-4 xl:px-2" data-v-3584d80f=""><div class="heti text-left max-w-full" data-v-3584d80f=""><div style="position:relative;" data-v-3584d80f=""><div><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><blockquote><p>又称正规表示式、正规表示法、正规表达式、规则表达式、常规表示法（英语：Regular Expression，在代码中常简写为 regex、regexp 或 RE），是计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。</p></blockquote><h2 id="基本语法" tabindex="-1">基本语法 <a class="header-anchor" href="#基本语法" aria-label="Permalink to &quot;基本语法&quot;">​</a></h2><h3 id="选择" tabindex="-1">选择 <a class="header-anchor" href="#选择" aria-label="Permalink to &quot;选择&quot;">​</a></h3><p>| 竖直分隔符代表选择。例如 “gray|grey” 可以匹配 grey 或 gray</p><h3 id="数量限定" tabindex="-1">数量限定 <a class="header-anchor" href="#数量限定" aria-label="Permalink to &quot;数量限定&quot;">​</a></h3><ul><li><code>+</code>：加号代表前面的字符必须至少出现一次。（1 次、或多次）。例如，“goo+gle” 可以匹配 google、gooogle、goooogle 等</li><li><code>?</code>：问号代表前面的字符最多只可以出现一次。（0 次、或 1 次）。例如，“colou?r” 可以匹配 color 或者 colour</li><li><code>*</code>：星号代表前面的字符可以不出现，也可以出现一次或者多次。（0 次、或 1 次、或多次）。例如，“0*42” 可以匹配 42、042、0042、00042 等</li></ul><h3 id="匹配" tabindex="-1">匹配 <a class="header-anchor" href="#匹配" aria-label="Permalink to &quot;匹配&quot;">​</a></h3><p>圆括号可以用来定义操作符的范围和优先度。例如，“gr(a|e)y” 等价于 “gray|grey”，“(grand)?father” 匹配 father 和 grandfather</p><h2 id="表达式全集" tabindex="-1">表达式全集 <a class="header-anchor" href="#表达式全集" aria-label="Permalink to &quot;表达式全集&quot;">​</a></h2><blockquote><p>详情查询：<a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F#.E8.A1.A8.E8.BE.BE.E5.BC.8F.E5.85.A8.E9.9B.86" target="_blank" rel="noreferrer">表达式全集 - 适用于 Perl 或者 Python 编程语言</a></p></blockquote><h2 id="优先级" tabindex="-1">优先级 <a class="header-anchor" href="#优先级" aria-label="Permalink to &quot;优先级&quot;">​</a></h2><table tabindex="0"><thead><tr><th>优先级</th><th>符号</th></tr></thead><tbody><tr><td>最高</td><td><code>\</code></td></tr><tr><td>高</td><td><code>( )、(?: )、( ?= )、[ ]</code></td></tr><tr><td>中</td><td><code>*、+、?、{n}、{n,}、{m,n}</code></td></tr><tr><td>低</td><td><code>^、$、中介字符</code></td></tr><tr><td>最低</td><td><code>丨</code></td></tr></tbody></table><p>练习文本：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>abcdefghijklmnopqrstuvwxyz</span></span>
<span class="line"><span></span></span>
<span class="line"><span>a bc def ghij klmno pqrstu vwxyz</span></span>
<span class="line"><span></span></span>
<span class="line"><span>0123456789</span></span>
<span class="line"><span></span></span>
<span class="line"><span>0 12 345 6789 0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>这是一段汉字，也是一段中国字。而 且还 是隔开 的 汉字</span></span>
<span class="line"><span></span></span>
<span class="line"><span>_	_</span></span>
<span class="line"><span></span></span>
<span class="line"><span>?&gt;&lt;:"{}!@#%$&amp;*()+-=';/.,[]\'</span></span>
<span class="line"><span></span></span>
<span class="line"><span>? &gt;&lt; :"{ }!@# %$&amp;*( )+-=' ;/.,[ ]\'</span></span>
<span class="line"><span></span></span>
<span class="line"><span>192.168.12.1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>249.249.240.195</span></span>
<span class="line"><span></span></span>
<span class="line"><span>333.246.244.244</span></span>
<span class="line"><span></span></span>
<span class="line"><span>255.255.255.255</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1.1.1.1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1.2.3.2555</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-dark vitesse-light vp-code" tabindex="0"><code><span class="line"><span>// 匹配 IP 地址</span></span>
<span class="line"><span>\b((1\d{2}|2[0-4]\d|25[0-5]|\d{1,2})\.){3}(1\d{2}|2[0-4]\d|25[0-5]|\d{1,2})\b</span></span></code></pre></div><p>结果图：</p><figure><img src="/assets/test.C7c0TFba.png" alt="匹配结果" tabindex="0" loading="lazy"><figcaption>匹配结果</figcaption></figure><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li>正则表达式 - 维基百科，自由的百科全：<a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="noreferrer">https://zh.wikipedia.org/wiki/正则表达式</a></li></ul></div></div><div class="pt-6" data-v-3584d80f=""><div class="text-center c-bPrimary-2 text-6xl relative" data-v-3584d80f=""><span data-v-3584d80f=""> 完 </span><span class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inline-block size-1.8em border-2 border-dashed border-bPrimary-1 rounded-full" data-v-3584d80f=""></span></div></div></div><br data-v-3584d80f=""><!----></div><!----></div></div><!--]--></div><div class="mt-6" data-v-acf221f1=""><div class="w-full text-center mt-4 my-6" data-v-acf221f1=""> © 2017-2025 @ 0x-Jerry. Built top on <a class="link" title="https://vitepress.dev/" href="https://vitepress.dev/" target="_blank" data-v-afcd4aec=""><span data-v-afcd4aec=""><!--[--> Vitepress <!--]--></span></a> . </div></div></div></div></div>
    <script>window.__VP_HASH_MAP__=JSON.parse("{\"about.md\":\"-TavtE4Q\",\"drafts_low-code.md\":\"khCRW8eF\",\"drafts_wave-function-collapse.md\":\"Q5z0Yc4l\",\"drafts_write-a-business-page.md\":\"DJ_SRLOT\",\"index.md\":\"Jvv52zHL\",\"posts_baisc-git.md\":\"nDe1nFNd\",\"posts_base64-and-blob.md\":\"C4tvfrKo\",\"posts_basic-ajax.md\":\"BVS2ccKC\",\"posts_basic-hexo.md\":\"DgbOcA4h\",\"posts_basic-nuxtjs.md\":\"DBVZw-4_\",\"posts_cloudflare-and-github-pages.md\":\"CWq-47l-\",\"posts_cocker-compile-scratchblocks.md\":\"CV2c7rN9\",\"posts_design-blog-system-2.md\":\"DZ3ivYwq\",\"posts_design-blog-system-3.md\":\"DoB91O3l\",\"posts_design-blog-system-4.md\":\"CSzOZHhh\",\"posts_design-blog-system.md\":\"DW_MDupZ\",\"posts_design-reuse-system.md\":\"DfmocIhn\",\"posts_docker-on-raspberrypi.md\":\"DkAazsLm\",\"posts_encrypt-workspace.md\":\"C9bVnvxf\",\"posts_fe-foundation.md\":\"CMfN4UpI\",\"posts_first-page.md\":\"B6sJQiIz\",\"posts_grpc.md\":\"BjvP4POz\",\"posts_hexo-git-and-travis.md\":\"DECR__jh\",\"posts_inode.md\":\"D1WIcIu0\",\"posts_intro-webassembly.md\":\"BpjFHPm1\",\"posts_js-ci.md\":\"2sUEccG1\",\"posts_l-system.md\":\"D-wBxIbL\",\"posts_machine-learning.md\":\"kkOEOjxr\",\"posts_micro-frontend.md\":\"Dd9C_Ty5\",\"posts_middle-of-2024.md\":\"DXYqcGMl\",\"posts_nginx-with-location.md\":\"Dy752-cR\",\"posts_node-best-practice.md\":\"COEOXh3o\",\"posts_regexp.md\":\"HLzci60x\",\"posts_render-line.md\":\"DakZ4pho\",\"posts_tech-and-content.md\":\"BO3wMr_M\",\"posts_ubuntu-app.md\":\"pld2-kWt\",\"posts_v2ray_nginx_https.md\":\"BXIG1rPR\",\"posts_vitepress-mismatch.md\":\"CC8QH-Jw\",\"posts_vue-reactivity.md\":\"Cv3xxytv\",\"posts_vue-runtime-core.md\":\"CMMn83VS\",\"posts_vue-runtime-dom.md\":\"OkU2Gybu\",\"readme.md\":\"Bvu62HrZ\",\"search.md\":\"D__KYlbb\",\"tags.md\":\"CFhKBdnE\"}");window.__VP_SITE_DATA__=JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"0x-Jerry\",\"titleTemplate\":\":title\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"name\":\"0x-Jerry\",\"avatar\":\"https://avatars.githubusercontent.com/u/14226737?v=4\",\"motto\":\"Life was like a box of chocolates. You never know what you're gonna get.\",\"email\":\"x.jerry.wang@gmail.com\",\"timezone\":\"Asia/Chongqing\",\"links\":{\"github\":\"https://github.com/0x-jerry\"}},\"locales\":{},\"scrollOffset\":134,\"cleanUrls\":true}");</script>
    
  
</body></html>]]></content:encoded>
        </item>
    </channel>
</rss>